/**/
#INCLUDE func/ZCLA_DEBUGUSR
SELECT 'STEPSTATUSDES/POST-FIELD' , SQL.USER
FROM DUMMY FORMAT ADDTO :DEBUGFILE ;
:ERR = '' ;
:DOC = :$$$.DOC ;
:FIXACT = :$.PROJACT ;
:ELACT = :$$.PROJACT ;
:PLOT = :$$$.PROJACT ;
:HOUSETYPEID = :$$.ZCLA_HOUSETYPEID ;
:FIX = :$.ZCLA_FIX ;
/* Changed ?
*/
GOTO 99 WHERE :$1.STEPSTATUSDES = :$.STEPSTATUSDES ;
/* Was in initial state ?
*/
GOTO 99 WHERE EXISTS (
SELECT 'x'
FROM STEPSTATUSES
WHERE STEPSTATUSDES = :$1.STEPSTATUSDES
AND INITFLAG <> 'Y'
);
/* Load BoM */
:LN = 0 ;
SELECT SQL.TMPFILE
INTO :GEN FROM DUMMY;
LINK GENERALLOAD TO :GEN;
ERRMSG 1 WHERE :RETVAL = 0 ;
/*
*/
SELECT SQL.TMPFILE
INTO :STK FROM DUMMY;
LINK STACK10 TO :STK;
ERRMSG 1 WHERE :RETVAL = 0 ;
/*
*/
SELECT MAX(LINE) + 1 INTO :LN FROM GENERALLOAD;
INSERT INTO GENERALLOAD (LINE , RECORDTYPE, KEY1)
SELECT :LN , '1' , ITOA(:DOC)
FROM DUMMY ;
/* 
insert Projact line */
SELECT MAX(LINE) + 1 INTO :LN FROM GENERALLOAD;
INSERT INTO GENERALLOAD (LINE , RECORDTYPE, KEY1)
SELECT :LN
,    '2'
,    ITOA(:PLOT)
FROM DUMMY ;
/* 
insert element line */
SELECT MAX(LINE) + 1 INTO :LN FROM GENERALLOAD;
INSERT INTO GENERALLOAD (LINE , RECORDTYPE, KEY1)
SELECT :LN
,    '3'
,    ITOA(:ELACT)
FROM DUMMY ;
/* Find fixes used by child parts of components.
*/
:FIX = 0 ;
/* 
insert fix line */
SELECT MAX(LINE) + 1 INTO :LN FROM GENERALLOAD;
INSERT INTO GENERALLOAD (LINE , RECORDTYPE, KEY1 )
SELECT :LN
,   '4'
,    ITOA(:FIXACT)
FROM DUMMY ;
/* 
insert Component line */
:IGNOREROOM = 0 ;
#INCLUDE PARTARC/ZCLA_TREEREPLACE
/* 
*/
:PART = :ROOM = 0 ;
:TQUANT = 0 ;
:PARTNAME = '' ;
DECLARE @PAT CURSOR FOR
SELECT ZCLA_PROJACTTREE.SONPART
,   PART.PARTNAME
,   ZCLA_PROJACTTREE.ZCLA_ROOM
,   ZCLA_PROJACTTREE.SONQUANT
FROM  ZCLA_PROJACTTREE , PART
WHERE 0=0
AND   ZCLA_PROJACTTREE.SONPART = PART.PART
AND   PART.PART > 0
;
OPEN @PAT ;
GOTO 9 WHERE :RETVAL = 0 ;
LABEL 1;
FETCH @PAT INTO :PART , :PARTNAME , :ROOM , :TQUANT  ;
GOTO 8 WHERE :RETVAL = 0
;
/*
Insert the BoM Part */
SELECT MAX(LINE) + 1 INTO :LN FROM GENERALLOAD;
INSERT INTO GENERALLOAD (LINE , RECORDTYPE, TEXT1 , INT1 , INT2)
SELECT :LN
,    '5'
,   :PARTNAME
,   :ROOM
,   (:TQUANT * 1000)
FROM DUMMY
;
/*
Inserts the sundry parts for this BoM line */
:S = 0 ;
SELECT MAX(KEY2) INTO :S
FROM STACK10
WHERE KEY1 = :ROOM ;
INSERT INTO STACK10 (KEY1 , KEY2 , TEXT1 , INT1)
SELECT     :ROOM
,    :S
,    PARTNAME
,    SONQUANT * (:TQUANT * 1000)
FROM PARTARC , PART
WHERE   0=0
AND     SON = PART.PART
AND     PARTARC.PART = :PART
;
LOOP 1;
LABEL 8;
CLOSE @PAT ;
LABEL 9;
/*
Add the cumulative sundries */
SELECT MAX(LINE) INTO :LN FROM GENERALLOAD;
INSERT INTO GENERALLOAD (LINE , RECORDTYPE, TEXT1 , INT1 , INT2)
SELECT :LN + SQL.LINE
,    '5'
,    TEXT1
,    KEY1
,    SUM(INT1)
FROM STACK10
WHERE   0=0
AND   LINE > 0
GROUP BY KEY1 , TEXT1
;
#INCLUDE func/ZCLA_RESETERR
EXECUTE INTERFACE 'ZCLA_LOADPLOT', SQL.TMPFILE, '-L', :GEN ;
:i_LOGGEDBY = 'ZCLA_LOADPLOT' ;
#INCLUDE func/ZEMG_ERRMSGLOG
SELECT LINE, RECORDTYPE , KEY1 , KEY2 , KEY3 , LOADED , TEXT1 ,
INT1 , INT2
FROM GENERALLOAD
WHERE :DEBUG = 1
FORMAT ADDTO :DEBUGFILE ;
#INCLUDE func/ZCLA_ERRMSG
UNLINK AND REMOVE GENERALLOAD ;
UNLINK AND REMOVE STACK10 ;
LABEL 99 ;
