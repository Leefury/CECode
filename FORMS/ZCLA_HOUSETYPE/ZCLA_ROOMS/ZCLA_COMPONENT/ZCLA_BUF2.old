/*
.   Create list of valid components
*/
DELETE FROM ZCLA_VALIDCOMPNENT
WHERE USER = SQL.USER ;
/*
*/
INSERT INTO ZCLA_VALIDCOMPNENT ( PART , USER )
SELECT DISTINCT PART.PART , SQL.USER
FROM PART, FAMILY, ZCLA_PARTTYPE , PARTARC
WHERE 0=0
AND    PARTARC.PART = PART.PART
AND    PARTDES LIKE '%'
AND    PART.ZCLA_PARTTYPE = ZCLA_PARTTYPE.TYPEID
AND    ZCLA_PARTTYPE.TYPENAME = 'C'
AND    PART.FAMILY = FAMILY.FAMILY
AND    FAMILY.ZCLA_CONSUMERUNIT <> 'Y'
AND    PARTNAME NOT LIKE 'C8%'
AND    PART.PART NOT IN (
SELECT DISTINCT PART.PART
FROM PART, FAMILY, ZCLA_PARTTYPE , PARTARC , ZCLA_GENERICMANF
WHERE 0=0
AND    ZCLA_GENERICMANF.PART = PARTARC.SON
AND    PARTARC.PART = PART.PART
AND    PART.FAMILY = FAMILY.FAMILY
AND    PART.ZCLA_PARTTYPE = ZCLA_PARTTYPE.TYPEID
AND    PARTDES LIKE '%'
AND    ZCLA_PARTTYPE.TYPENAME = 'C'
AND    FAMILY.ZCLA_CONSUMERUNIT <> 'Y'
AND    PARTNAME NOT LIKE 'C8%'
) ;
/*
LINK STACK4 for style
*/
:ST4 = '';
SELECT SQL.TMPFILE INTO :ST4
FROM DUMMY
;
LINK STACK4 TO :ST4;
GOTO 21109 WHERE :RETVAL <= 0;
/*--*/
DECLARE @CPART CURSOR FOR
SELECT DISTINCT PART.PART , PART.FAMILY
FROM PART, FAMILY, ZCLA_PARTTYPE , PARTARC
WHERE 0=0
AND    PARTARC.PART = PART.PART
AND    PARTDES LIKE '%'
AND    PART.ZCLA_PARTTYPE = ZCLA_PARTTYPE.TYPEID
AND    ZCLA_PARTTYPE.TYPENAME = 'C'
AND    PART.FAMILY = FAMILY.FAMILY
AND    FAMILY.ZCLA_CONSUMERUNIT <> 'Y'
AND    PARTNAME NOT LIKE 'C8%'
AND    PARTARC.SON IN (
SELECT        PART
FROM          ZCLA_GENERICMANF
)
ORDER BY 1
;
OPEN @CPART ;
GOTO 21109 WHERE :RETVAL <= 0 ;
LABEL 21101 ;
:PART = :FAMILY = 0 ;
:STYLE = '';
FETCH @CPART INTO :PART  , :FAMILY ;
GOTO 21108 WHERE :RETVAL <= 0 ;
/*
Delete style of the previous part
*/
DELETE FROM STACK4;
/*
*/
GOTO 21102 WHERE :$$.CORE = 'Y' ;
LOOP 21101 WHERE EXISTS (
SELECT 'x'
FROM PARTARC
WHERE 0=0
AND      PARTARC.PART = :PART
AND      PARTARC.SON  IN (
SELECT PART
FROM ZCLA_GENERICMANF
)
AND      PARTARC.SON NOT IN (
SELECT SON
FROM PARTARC , ZCLA_GENERICMANF , ZCLA_PROJMANF
WHERE 0=0
AND      PARTARC.SON = ZCLA_GENERICMANF.PART
AND      ZCLA_GENERICMANF.COL =  ZCLA_PROJMANF.COL
AND      ZCLA_GENERICMANF.MNF =  ZCLA_PROJMANF.MANFID
AND      PARTARC.PART = :PART
AND      ZCLA_PROJMANF.FAMILY = :FAMILY
AND      ZCLA_PROJMANF.DOC = :$$.DOC
AND      ZCLA_PROJMANF.ALT = :$$.ALT
));
/*Put available styles for this part into the stack table*/
INSERT INTO STACK4 (KEY, DETAILS)
SELECT SQL.LINE, ZCLA_PROJMANF.STYLE
FROM PARTARC , ZCLA_GENERICMANF , ZCLA_PROJMANF
WHERE 0=0
AND      PARTARC.SON = ZCLA_GENERICMANF.PART
AND      ZCLA_GENERICMANF.COL =  ZCLA_PROJMANF.COL
AND      ZCLA_GENERICMANF.MNF =  ZCLA_PROJMANF.MANFID
AND      PARTARC.PART = :PART
AND      ZCLA_PROJMANF.FAMILY = :FAMILY
AND      ZCLA_PROJMANF.DOC = :$$.DOC
AND      ZCLA_PROJMANF.ALT = :$$.ALT
;
GOTO 21103 ;
LABEL 21102 ;
:PCUST = 0 ;
SELECT PCUST INTO :PCUST
FROM CUSTOMERS
WHERE CUST = :$$.DOC
;
LOOP 21101 WHERE EXISTS (
SELECT 'x'
FROM PARTARC
WHERE 0=0
AND      PARTARC.PART = :PART
AND      PARTARC.SON  IN (
SELECT PART
FROM ZCLA_GENERICMANF
)
AND      PARTARC.SON NOT IN (
SELECT SON
FROM PARTARC , ZCLA_GENERICMANF , ZCLA_DEFAULTMANF
WHERE 0=0
AND      PARTARC.SON = ZCLA_GENERICMANF.PART
AND      ZCLA_GENERICMANF.COL =  ZCLA_DEFAULTMANF.COL
AND      ZCLA_GENERICMANF.MNF =  ZCLA_DEFAULTMANF.MANFID
AND      PARTARC.PART = :PART
AND      ZCLA_DEFAULTMANF.FAMILY = :FAMILY
AND      ZCLA_DEFAULTMANF.CUST = :PCUST
AND      ZCLA_DEFAULTMANF.ALT = :$$.ALT
));
/*Put available styles for this part into the stack table*/
INSERT INTO STACK4 (KEY, DETAILS)
SELECT SQL.LINE, ZCLA_DEFAULTMANF.STYLE
FROM PARTARC , ZCLA_GENERICMANF , ZCLA_DEFAULTMANF
WHERE 0=0
AND      PARTARC.SON = ZCLA_GENERICMANF.PART
AND      ZCLA_GENERICMANF.COL =  ZCLA_DEFAULTMANF.COL
AND      ZCLA_GENERICMANF.MNF =  ZCLA_DEFAULTMANF.MANFID
AND      PARTARC.PART = :PART
AND      ZCLA_DEFAULTMANF.FAMILY = :FAMILY
AND      ZCLA_DEFAULTMANF.CUST = :PCUST
AND      ZCLA_DEFAULTMANF.ALT = :$$.ALT
;
LABEL 21103 ;
/*
Loop through the available styles for the part,
and insert each into the valid components table
*/
INSERT INTO ZCLA_VALIDCOMPNENT ( PART , USER , ZGEM_STYLE)
SELECT :PART , SQL.USER, DETAILS
FROM STACK4
WHERE KEY <> 0
;
/*
*/
LOOP 21101 ;
LABEL 21108 ;
CLOSE @CPART ;
UNLINK STACK4;
LABEL 21109 ;
