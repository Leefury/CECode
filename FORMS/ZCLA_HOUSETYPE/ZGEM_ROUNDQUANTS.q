/*******************
Components & Cunit Sundry Rounding
*******************/
/*INPUT:
:PART   Component (ID)
:ROOM   Room (ID)
:FIXID  Fix (ID)
:PTYPE  Type of the Component
*/
/*OUTPUT:
ZCLA_CALCTMP table
PART = Sundry (ID)
ROOM = -9000000
FIXID = :FIXID
ZCLA_SUNDRY = Quantity of the sundry
ZCLA_TOTCOST = Cost of the sundry
*/
/*Round Parts*/
#INCLUDE func/ZCLA_DEBUGUSR
:PARTROUND_ROOM = -800000;  /*P2 PART*/
DECLARE @PARTCUR CURSOR FOR
SELECT ZCLA_PARTARC.SON
, SUM(SONQUANT * (1+ PART.ZCLA_WASTAGE / 100))
, ROUND(((ABSR(PARTPRICE.PRICE) / PART.CONV)) * 100000) / 100000.0
FROM ZCLA_PARTARC, PRICELIST, PARTPRICE, PART
WHERE 0=0
AND   ZCLA_PARTARC.USER = SQL.USER
AND   ZCLA_PARTARC.SON = PARTPRICE.PART
AND   PRICELIST.PLIST = PARTPRICE.PLIST
AND   PRICELIST.CURRENCY  = PARTPRICE.CURRENCY
AND   PRICELIST.PLIST = -1
AND   PARTPRICE.CURRENCY = -1
AND   QUANT = 1000
AND   ZCLA_PARTARC.SON = PART.PART
AND   ZCLA_PARTARC.ROOM = :ROOM
AND   ZCLA_PARTARC.ZCLA_FIXID = :FIXID
AND   ZCLA_PARTARC.PART = :PART
AND   :PTYPE IN ('U', 'C')
GROUP BY 1, 3
;
OPEN @PARTCUR;
GOTO 1202249 WHERE :RETVAL <= 0;
/*--*/
LABEL 1202241;
/*--*/
:ZGEM_QUANT = 0.0;
:ZGEM_PARTPRICE = 0.0;
:ZGEM_PART = 0;
:PREV_QUANT = 0.0;
FETCH @PARTCUR INTO :ZGEM_PART, :ZGEM_QUANT, :ZGEM_PARTPRICE;
GOTO 1202248 WHERE :RETVAL <= 0;
/*--*/
#INCLUDE ZCLA_HOUSETYPE/ZGEM_PARTCOST
/*--*/
LOOP 1202241;
LABEL 1202248;
CLOSE @PARTCUR;
LABEL 1202249;
/*Round Sundries*/
:PARTROUND_ROOM = -900000;  /*SUNDRY*/
DECLARE @PARTSUNCUR CURSOR FOR
SELECT SUNDRY.PART
, ZCLA_PARTARC.SONQUANT
* PARTARC.SONQUANT
,  ROUND(((ABSR(PARTPRICE.PRICE) / SUNDRY.CONV) * :SUNDRYCREDIT) *
100000) / 100000.0
FROM ZCLA_PARTARC ,  PARTARC ,
PARTPRICE ,  PRICELIST, PART, PART SUNDRY
WHERE 0=0
AND   PARTARC.SON = PARTPRICE.PART
AND   PARTPRICE.PLIST = PRICELIST.PLIST
AND   PRICELIST.CURRENCY  = PARTPRICE.CURRENCY
AND   PRICELIST.PLIST = -1
AND   PARTPRICE.CURRENCY = -1
AND   QUANT = 1000
AND   PARTARC.SON = SUNDRY.PART
AND   ZCLA_PARTARC.SON = PARTARC.PART
AND   ZCLA_PARTARC.SON = PART.PART
AND   ZCLA_PARTARC.USER = SQL.USER
AND   ZCLA_PARTARC.ROOM = :ROOM
AND   ZCLA_PARTARC.ZCLA_FIXID = :FIXID
AND   ZCLA_PARTARC.PART = :PART
AND   :PTYPE IN ('U' , 'C')
;
OPEN @PARTSUNCUR;
GOTO 03012410388 WHERE :RETVAL <= 0;
/*--*/
LABEL 03012410381;
/*--*/
:ZGEM_QUANT = 0.0;
:ZGEM_PARTPRICE = 0.0;
:ZGEM_PART = 0;
:PREV_QUANT = 0.0;
FETCH @PARTSUNCUR INTO :ZGEM_PART, :ZGEM_QUANT, :ZGEM_PARTPRICE;
GOTO 03012410389 WHERE :RETVAL <= 0;
/*--*/
#INCLUDE ZCLA_HOUSETYPE/ZGEM_PARTCOST
/*--*/
LOOP 03012410381;
LABEL 03012410389;
CLOSE @PARTSUNCUR;
LABEL 03012410388;
/*--*/
/*****************************
Small Works Sundries Rounding
*****************************/
/*INPUT:
:PART   Component (ID)
:ROOM   Room (ID)
:FIXID  Fix (ID)
:PTYPE  Type of the Component
*/
/*OUTPUT:
ZCLA_CALCTMP table
PART = Sundry (ID)
ROOM = -9000000
FIXID = :FIXID
ZCLA_SUNDRY = Quantity of the sundry
ZCLA_TOTCOST = Cost of the sundry
*/
/*--*/
DECLARE @SWSUNCUR CURSOR FOR
SELECT SUNDRY.PART
, ZCLA_ROOMPARTS.TQUANT
* PARTARC.SONQUANT
,  ROUND(((ABSR(PARTPRICE.PRICE) / SUNDRY.CONV) * :SUNDRYCREDIT) *
100000) / 100000.0
FROM  ZCLA_ROOMPARTS , PARTARC ,
PARTPRICE ,  PRICELIST, PART, PART SUNDRY
WHERE 0=0
AND   PARTARC.SON = PARTPRICE.PART
AND   PARTARC.SON = SUNDRY.PART
AND   PARTPRICE.PLIST = PRICELIST.PLIST
AND   PRICELIST.CURRENCY  = PARTPRICE.CURRENCY
AND   PRICELIST.PLIST = -1
AND   PARTPRICE.CURRENCY = -1
AND   QUANT = 1000
AND   ZCLA_ROOMPARTS.ROOM = :ROOM
AND   ZCLA_ROOMPARTS.PART = :PART
AND   ZCLA_ROOMPARTS.PART = PART.PART
AND   ZCLA_ROOMPARTS.PART = PARTARC.PART
AND   ZCLA_ROOMPARTS.TQUANT > 0
AND   :PTYPE IN ('W')
;
OPEN @SWSUNCUR;
GOTO 04012410388 WHERE :RETVAL <= 0;
/*--*/
LABEL 04012410381;
/*--*/
:ZGEM_QUANT = 0.0;
:ZGEM_PARTPRICE = 0.0;
:ZGEM_PART = 0;
:PREV_QUANT = 0.0;
FETCH @SWSUNCUR INTO :ZGEM_PART, :ZGEM_QUANT, :ZGEM_PARTPRICE;
GOTO 04012410389 WHERE :RETVAL <= 0;
/*--*/
#INCLUDE ZCLA_HOUSETYPE/ZGEM_PARTCOST
/*--*/
LOOP 04012410381;
LABEL 04012410389;
CLOSE @SWSUNCUR;
LABEL 04012410388;
