/*
*/
#INCLUDE func/ZCLA_DEBUGUSR
/*
*/
:LOADNAME = 'STATUSMAILZCLA_CONT' ;
LINK ZCLA_CONTRACTS TO :$.PAR ;
ERRMSG 1 WHERE :RETVAL <= 0;
:CONTRACT = 0 ;
:STATLOCK = :MATRIXEDIT = '\0' ;
:LASTSTAT = :MATRIXSTATUS = '' ;
SELECT CONTRACT , MATRIXEDIT , STATLOCK
INTO :CONTRACT , :MATRIXEDIT , :STATLOCK
FROM ZCLA_CONTRACTS , ZCLA_CONTRACTSTATUSE
WHERE 0=0
AND   ZCLA_CONTRACTS.STEPSTATUS = ZCLA_CONTRACTSTATUSE.STEPSTATUS
AND   ZCLA_CONTRACTS.CONTRACT > 0
;
SELECT :LASTSTAT , :MATRIXSTATUS , :CONTRACT, :MATRIXEDIT, :LOADNAME
FROM DUMMY
FORMAT ADDTO :DEBUGFILE ;
/*
** Check if the contract status is locked
*/
ERRMSG 99 WHERE :STATLOCK <> 'Y' ;
/* 
medatech.si. 25/9/2024 */
/* 
** Check if the elements have open edits
*/
ERRMSG 98 WHERE EXISTS (
SELECT 'x'
FROM   ZCLA_ELEDIT
,      ZCLA_CONTRACTEL
,      ZCLA_CONTRACTS
,      PROJACTS
WHERE  0=0
AND    ZCLA_CONTRACTEL.CONTRACT = ZCLA_CONTRACTS.CONTRACT
AND    ZCLA_CONTRACTS.DOC       = PROJACTS.DOC
AND    ZCLA_CONTRACTEL.EL       = PROJACTS.ZCLA_EL
AND    ZCLA_ELEDIT.PROJACT      = PROJACTS.PROJACT
AND    ZCLA_CONTRACTS.CONTRACT  = :CONTRACT
AND    ZCLA_ELEDIT.CLOSEFLAG    <> 'Y'
);
/*
** Check the edit flag of the element
*/
ERRMSG 97 WHERE EXISTS (
SELECT ZCLA_ELSTATUSES.STEPSTATUSDES
,      ZCLA_ELSTATUSES.EDITFLAG
FROM   ZCLA_ELSTATUSES
,      ZCLA_CONTRACTEL
,      ZCLA_CONTRACTS
,      PROJACTS
WHERE  0=0
AND    ZCLA_CONTRACTEL.CONTRACT   = ZCLA_CONTRACTS.CONTRACT
AND    ZCLA_CONTRACTS.DOC         = PROJACTS.DOC
AND    ZCLA_CONTRACTEL.EL         = PROJACTS.ZCLA_EL
AND    ZCLA_ELSTATUSES.STEPSTATUS = PROJACTS.STEPSTATUS
AND    ZCLA_CONTRACTS.CONTRACT    = :CONTRACT
AND    ZCLA_ELSTATUSES.EDITFLAG   = 'Y'
);
/*
*/
SELECT STEPSTATUSDES INTO :MATRIXSTATUS
FROM ZCLA_CONTRACTSTATUSE
WHERE MATRIXEDIT = 'Y' ;
/*
bi-state */
:NEWSTATUS = :OLDSTATUS = '' ;
SELECT ZCLA_CONTRACTSTATUSE.STEPSTATUSDES , :MATRIXSTATUS
INTO :OLDSTATUS , :NEWSTATUS 
FROM ZCLA_CONTRACTS , ZCLA_CONTRACTSTATUSE
WHERE 0=0
AND   ZCLA_CONTRACTS.STEPSTATUS = ZCLA_CONTRACTSTATUSE.STEPSTATUS
AND   ZCLA_CONTRACTS.CONTRACT > 0
AND   :MATRIXEDIT <> 'Y'
;
SELECT :MATRIXSTATUS , ZCLA_CONTRACTS.STATDES1
INTO :OLDSTATUS , :NEWSTATUS 
FROM ZCLA_CONTRACTS , ZCLA_CONTRACTSTATUSE
WHERE 0=0
AND   ZCLA_CONTRACTS.STEPSTATUS = ZCLA_CONTRACTSTATUSE.STEPSTATUS
AND   ZCLA_CONTRACTS.CONTRACT > 0
AND   :MATRIXEDIT = 'Y';
/*
*/
SELECT :OLDSTATUS , :NEWSTATUS
FROM DUMMY
FORMAT ADDTO :DEBUGFILE ;
UNLINK ZCLA_CONTRACTS ;
/*
Load statuses for this Contract */
:LN = 0 ;
SELECT SQL.TMPFILE
INTO :GEN FROM DUMMY;
LINK GENERALLOAD TO :GEN;
ERRMSG 1 WHERE :RETVAL = 0 ;
DELETE FROM GENERALLOAD ;
/*
*/
INSERT INTO GENERALLOAD (LINE , RECORDTYPE , KEY1
, INT1, TEXT1 , TEXT2 , TEXT3 , TEXT10 , CHAR1)
SELECT SQL.LINE , '1' , ITOA(:CONTRACT)
, :CONTRACT , :NEWSTATUS , USERLOGIN , :OLDSTATUS , SQL.GUID , '\0'
FROM USERS
WHERE USER = SQL.USER ;
/*
*/
#INCLUDE func/ZCLA_RESETERR
EXECUTE INTERFACE :LOADNAME, SQL.TMPFILE, '-L', :GEN ;
SELECT 'ZCLA_SETMATRIXEDIT', 'STATUS LOADED'
, :LOADNAME, LINE, RECORDTYPE , LOADED , KEY1
, INT1 , TEXT1 , TEXT3 , TEXT2 , TEXT10 , CHAR1
FROM GENERALLOAD
WHERE 0=0
AND   :DEBUG = 1
AND   LINE > 0
FORMAT ADDTO :DEBUGFILE ;
#INCLUDE func/ZCLA_ERRMSG
:LN = 0 ;
SELECT 0 + MAX(LINE) INTO :LN FROM ZCLA_STATCH ;
INSERT INTO ZCLA_STATCH (LOADNAME  , LINE , RECORDTYPE
, KEY1 , INT1 , TEXT1 , TEXT2 , TEXT3 , TEXT10 , CHAR1 )
SELECT :LOADNAME , :LN + SQL.LINE , RECORDTYPE
, KEY1 , INT1 , TEXT1 , TEXT2 , TEXT3 , TEXT10 , CHAR1
FROM GENERALLOAD
WHERE 0=0
AND   LOADED <> 'Y'
AND   LINE > 0 ;
UNLINK GENERALLOAD ;
GOTO 999;
EXECUTE INTERFACE 'STATUSMAILZCLA_CONT';
EXECUTE INTERFACE 'STATUSMAILZCLA_EL';
EXECUTE INTERFACE 'STATUSMAILZCLA_FIX';
LABEL 999;
