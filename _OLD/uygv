/************************************************************/
/**             Raise Solar Audit Task for Fix             **/
/************************************************************/
#INCLUDE func/ZCLA_DEBUGUSR
SELECT 'ZGEM_SOLARAUDITTASK', :$.PROJACT
FROM DUMMY
WHERE :DEBUG = 1
FORMAT ADDTO :DEBUGFILE
;
#INCLUDE ZCLA_PDAFIX/ZGEM_GETSOLARQ
/*get customer name */
:CUST = 0 ;
:ZCLA_CUSTNAME = '' ;
SELECT CUSTOMERS.CUST , CUSTNAME INTO :CUST , :ZCLA_CUSTNAME
FROM CUSTOMERS, PROJACTS, DOCUMENTS
WHERE DOCUMENTS.CUST = CUSTOMERS.CUST
AND PROJACTS.DOC = DOCUMENTS.DOC
AND PROJACT = :$.PROJACT
AND PROJACT > 0
;
/* get doc, fix, commercial group numbers */
:ZCLA_DOCNO = :ZCLA_DOCDES = '' ;
:ZCLA_FIX = '' ;
:ZCLA_UGROUP = 0 ;
SELECT DOCNO, PROJACTS.WBS, DOCPROJ.PROJDES, DOCUMENTS.ZGEM_UGROUP
INTO :ZCLA_DOCNO, :ZCLA_FIX, :ZCLA_DOCDES, :ZCLA_UGROUP
FROM PROJACTS, DOCUMENTS, DOCPROJ
WHERE PROJACT > 0
AND PROJACT = :$.PROJACT
AND PROJACTS.DOC = DOCUMENTS.DOC
AND DOCPROJ.DOC =  DOCUMENTS.DOC
;
SELECT SQL.TMPFILE
INTO :ZGEM_TMP
FROM DUMMY;
LINK GENERALLOAD TO :ZGEM_TMP;
DELETE FROM GENERALLOAD;
/*  Create task                                             */
:TASKTYPE = '';
SELECT CUSTNOTETYPEDES
INTO :TASKTYPE
FROM CUSTNOTETYPES
WHERE ZGEM_SOLARREPORTHR = 'Y'
;
INSERT INTO GENERALLOAD (LINE, RECORDTYPE,
TEXT1,
TEXT2, TEXT4, TEXT3, TEXT14,
DATE1,ZGEM_TIME1 ,ZGEM_TIME2, INT2, INT3
, TEXT15)
SELECT SQL.LINE, '1',
STRCAT('Solar Audit - ',:ZCLA_DOCDES,' - ',:ZCLA_FIX),
:ZCLA_CUSTNAME , :ZCLA_FIX, :ZCLA_DOCNO, :VALIDQUESTFCODE,
STARTDATE, 21:00, 21:00, :$.PROJACT, :TLUSER
, :TASKTYPE
FROM  PROJACTS
WHERE PROJACT = :$.PROJACT
;
/**/
EXECUTE INTERFACE 'ZCLA_RAISEQTASK', SQL.TMPFILE, '-L' , :ZGEM_TMP;
/* Error Logging */
:i_LOGGEDBY = 'ZCLA_RAISEQTASK';
#INCLUDE func/ZEMG_ERRMSGLOG
SELECT 'SOLAR ADUTI TASK', LOADED, KEY1, LINE, RECORDTYPE,
TEXT1,
TEXT2, TEXT4, TEXT3, TEXT14,
DATE1,ZGEM_TIME1 ,ZGEM_TIME2, INT2, INT3
FROM GENERALLOAD
WHERE :DEBUG = 1
FORMAT ADDTO :DEBUGFILE
;
UNLINK AND REMOVE GENERALLOAD ;
/************************************************************/
/**           Get Valid Solar Audit Questionnaire          **/
/************************************************************/
/*Get the calendar task,
which contains the team leader and team members*/
#INCLUDE func/ZCLA_DEBUGUSR
:CUSTNTOE = 0;
:TLUSER = 0;
SELECT ZCLA_TLUSER
INTO :TLUSER
FROM PROJACTS P
WHERE P.PROJACT = :$.PROJACT
;
SELECT C.CUSTNOTE
INTO :CUSTNOTE
FROM CUSTNOTESA CA, CUSTNOTES C, CUSTNOTETYPES CT
WHERE CA.PROJACT = :$.PROJACT
AND CA.CUSTNOTE = C.CUSTNOTE
AND C.CUSTNOTETYPE  = CT.CUSTNOTETYPE
AND CT.ZGEM_SOLARFIX = 'Y'
;
SELECT 'ZCLA_PDAFIX/ZGEM_GETSOLARQ', :CUSTNOTE, :TLUSER, :$.PROJACT
FROM DUMMY
WHERE :DEBUG = 1
FORMAT ADDTO :DEBUGFILE
;
/***********************************/
/* Get the Team Leader and members */
/***********************************/
SELECT SQL.TMPFILE
INTO :USERS_TMP
FROM DUMMY
;
LINK ZCLA_USERS TO :USERS_TMP;
GOTO 11032408269 WHERE :RETVAL <= 0;
DELETE FROM ZCLA_USERS;
/*Team Leader*/
INSERT INTO ZCLA_USERS (USERS)
SELECT USERID
FROM USERSB
WHERE USER = :TLUSER;
/*If no solar fix task, insert default team*/
INSERT INTO ZCLA_USERS (USERS)
SELECT TM.MEMBERID
FROM ZCLA_TEAMMEMBERS TM, USERSB UB
WHERE TM.USERID = UB.USERID
AND UB.USER = :TLUSER
AND :CUSTNOTE = 0
;
GOTO 0305241149 WHERE :CUSTNOTE = 0;
/*Team Member 1*/
INSERT INTO ZCLA_USERS (USERS)
SELECT USERID
FROM CUSTNOTESA, USERSB
WHERE CUSTNOTE = :CUSTNOTE
AND CUSER2 <> 0
AND CUSER2 = USERSB.USER
;
/*Team Member 2*/
INSERT INTO ZCLA_USERS (USERS)
SELECT USERID
FROM CUSTNOTESA, USERSB
WHERE CUSTNOTE = :CUSTNOTE
AND CUSER3 <> 0
AND CUSER3 = USERSB.USER
;
/*Team Member 3*/
INSERT INTO ZCLA_USERS (USERS)
SELECT USERID
FROM CUSTNOTESA, USERSB
WHERE CUSTNOTE = :CUSTNOTE
AND CUSER4 <> 0
AND CUSER4 = USERSB.USER
;
/*Team Member 4*/
INSERT INTO ZCLA_USERS (USERS)
SELECT USERID
FROM CUSTNOTESA, USERSB
WHERE CUSTNOTE = :CUSTNOTE
AND CUSER5 <> 0
AND CUSER5 = USERSB.USER
;
/*Team Member 5*/
INSERT INTO ZCLA_USERS (USERS)
SELECT USERID
FROM CUSTNOTESA, USERSB
WHERE CUSTNOTE = :CUSTNOTE
AND CUSER6 <> 0
AND CUSER6 = USERSB.USER
;
LABEL 0305241149;
/**/
SELECT 'ZCLA_PDAFIX/ZGEM_GETSOLARQ', 'ZCLA_USERS', USERS
FROM ZCLA_USERS
WHERE :DEBUG = 1
FORMAT ADDTO :DEBUGFILE;
/***********************************/
/* Check if Questionnaire Exists */
/***********************************/
/*Cursor through questionnaires for Team Leader*/
DECLARE @TL_QUEST_CUR CURSOR FOR
SELECT QUESTF, QUESTFCODE
FROM QUESTFORM
WHERE ZCLA_TLUSER = :TLUSER
/* TODO !!! MATCH THE KIT*/
AND ZGEM_KIT = 1/*:KIT*/
;
OPEN @TL_QUEST_CUR;
GOTO 11032408449 WHERE :RETVAL <= 0;
LABEL 11032408441;
:QUESTF = 0;
:QUESTFCODE = '';
FETCH @TL_QUEST_CUR INTO :QUESTF, :QUESTFCODE;
GOTO 11032408448 WHERE :RETVAL <= 0;
/*Check if all members are included*/
:ALLMEMBERSINCLUDED = 1; /*1 = YES | 0 = NO*/
SELECT 0
INTO :ALLMEMBERSINCLUDED
FROM ZCLA_USERS
WHERE USERS <> 0
AND USERS NOT IN (
SELECT ZCLA_PLOTCOMPONENT
FROM QUESTIONS
WHERE QUESTF = :QUESTF
AND ZCLA_PLOTCOMPONENT <> 0
)
;
/*Check if any other members are included*/
SELECT 0
INTO :ALLMEMBERSINCLUDED
FROM QUESTIONS
WHERE QUESTF = :QUESTF
AND ZCLA_PLOTCOMPONENT NOT IN (
SELECT USERS
FROM ZCLA_USERS
WHERE USERS <> 0
)
AND ZCLA_PLOTCOMPONENT <> 0
AND QUESTNUM < 10
;
/*IF Found a valid questf save and exit the loop*/
:VALIDQUESTF = 0;
:VALIDQUESTFCODE = '';
SELECT :QUESTF, :QUESTFCODE
INTO :VALIDQUESTF, :VALIDQUESTFCODE
FROM DUMMY
WHERE :ALLMEMBERSINCLUDED = 1
;
GOTO 11032408448 WHERE :ALLMEMBERSINCLUDED = 1;
/*--*/
LOOP 11032408441;
LABEL 11032408448; /*Exit Loop, TL_QUEST_CUR Finished*/
CLOSE  @TL_QUEST_CUR;
LABEL 11032408449; /*Failed to open  TL_QUEST_CUR*/
GOTO 1103240913 WHERE :VALIDQUESTF <> 0;
/*Create a valid QUESTF*/
#INCLUDE ZCLA_PDAFIX/ZGEM_CREATESOLARQ
LABEL 1103240913; /*Found a valid QUESTF*/
UNLINK AND REMOVE ZCLA_USERS;
LABEL 11032408269; /*Failed to link ZCLA_USERS table*/
/* Save Housetype Edit:
UPDTYPE (CHAR,1,'I/U/D')
.    I(nsert)
.    U(pdate)
.    D(elete)
EDITTYPE (CHAR,1,'W/O/R/K/S/H/P/A/C/E')
.    (W)ays
.    Small Works P(O)ints
.    (R)ooms
.    Small Wor(K)s
.    Out(S)ouced Parts
.    (H)ouse
.    (P)arts
.    (A)ttachment
.    (C)onsumer unit
.    Outsouc(E)d Part Points
*/
#INCLUDE func/ZCLA_DEBUGUSR
SELECT 'ZCLA_HTEDIT/ZCLA_BUF1'
, :$.HOUSETYPE  , :$.EDITTYPE , :UPDTYPE
FROM DUMMY
WHERE :DEBUG = 1
FORMAT ADDTO :DEBUGFILE
;
:HOUSETYPE = 0 ;
SELECT :$.HOUSETYPE INTO :HOUSETYPE
FROM DUMMY ;
#INCLUDE ZCLA_HTEDIT/ZCLA_BUF4
SELECT STRCAT(SQL.TMPFILE,'.xml') INTO :TMPFILE FROM DUMMY ;
/*
*/
:COMP = 'Clarkson Evans' ;
:JOB = :CURDATE = 0 ;
:JOBDES = :JOBNUM  = :LOCATION = :EMAIL = :SALARY = '' ;
:ZCLA_EXTERNALLINK = :JOBTYPE = :DEPTDES = :ZCLA_CLOSENOTE = '' ;
:ADDRESS = :ADDRESS2 = :ADDRESS3 = :STATE = :ZIP = '' ;
/*
*/
SELECT '<?xml version="1.0" encoding="utf-8"?><source>' FROM DUMMY
ASCII ADDTO :TMPFILE ;
/*
*/
DECLARE C CURSOR FOR
SELECT JOB
,     CURDATE
,     JOBNUM
,     JOBDES
,     LOCATION
,     USERSB.EMAIL
,     RECRUITMENTREMARKS
,     ZCLA_EXTERNALLINK
,     JOBTYPE
,     DEPTDES
,     ZCLA_CLOSENOTE
,     BRANCHES.ADDRESS
,     BRANCHES.ADDRESS2
,     BRANCHES.ADDRESS3
,     BRANCHES.STATE
,     BRANCHES.ZIP
FROM JOBS
,     USERSB
,     JOBTYPES
,     DEPT
,     BRANCHES
WHERE 0=0
AND   JOBS.ZGEM_HIRINGMAN = USERSB.USERB
AND   JOBTYPES.JOBT = JOBS.JOBT
AND   DEPT.DEPT = JOBS.DEPT
AND   BRANCHES.BRANCH = JOBS.BRANCH
AND   JOB > 0
AND   ZCLA_SHOWPORTAL = 'Y'
;
OPEN C ;
GOTO 99 WHERE :RETVAL = 0 ;
LABEL 10 ;
FETCH C INTO :JOB
,     :CURDATE
,     :JOBNUM
,     :JOBDES
,     :LOCATION
,     :EMAIL
,     :SALARY
,     :ZCLA_EXTERNALLINK
,     :JOBTYPE
,     :DEPTDES
,     :ZCLA_CLOSENOTE
,     :ADDRESS
,     :ADDRESS2
,     :ADDRESS3
,     :STATE
,     :ZIP
;
GOTO 90 WHERE :RETVAL = 0 ;
/*
*/
SELECT '<job>' FROM DUMMY ASCII ADDTO :TMPFILE ;
/*
*/
:TAG = 'title' ;
GOSUB 100 ;
SELECT  :JOBDES
FROM DUMMY ASCII ADDTO :TMPFILE ;
GOSUB 200 ;
/*
*/
:TAG = 'date' ;
GOSUB 100 ;
SELECT  STRCAT(DTOA(:CURDATE
,    'YYYY-MM-DD')
,     'T00:00:00Z')
FROM DUMMY ASCII ADDTO :TMPFILE ;
GOSUB 200 ;
/*
*/
:TAG = 'referencenumber' ;
GOSUB 100 ;
SELECT  :JOBNUM
FROM DUMMY ASCII ADDTO :TMPFILE ;
GOSUB 200 ;
/*
*/
:TAG = 'requisitionid' ;
GOSUB 100 ;
SELECT  ITOA( :JOB )
FROM DUMMY ASCII ADDTO :TMPFILE ;
GOSUB 200 ;
/*
*/
:TAG = 'url' ;
GOSUB 100 ;
SELECT  :ZCLA_EXTERNALLINK
FROM DUMMY ASCII ADDTO :TMPFILE ;
GOSUB 200 ;
/*
*/
:TAG = 'company' ;
GOSUB 100 ;
SELECT  :COMP
FROM DUMMY ASCII ADDTO :TMPFILE ;
GOSUB 200 ;
/*
*/
:TAG = 'sourcename' ;
GOSUB 100 ;
SELECT  STRCAT(:COMP
,     ' - '
,     :DEPTDES )
FROM DUMMY ASCII ADDTO :TMPFILE ;
GOSUB 200 ;
/*
*/
:TAG = 'city' ;
GOSUB 100 ;
SELECT  :LOCATION
FROM DUMMY ASCII ADDTO :TMPFILE ;
GOSUB 200 ;
/*
*/
:TAG = 'state' ;
GOSUB 100 ;
SELECT  :LOCATION /* :STATE */
FROM DUMMY ASCII ADDTO :TMPFILE ;
GOSUB 200 ;
/*
*/
:TAG = 'country' ;
GOSUB 100 ;
SELECT  'UK'
FROM DUMMY ASCII ADDTO :TMPFILE ;
GOSUB 200 ;
/*
*/
:TAG = 'postalcode' ;
GOSUB 100 ;
SELECT  :ZIP
FROM DUMMY ASCII ADDTO :TMPFILE ;
GOSUB 200 ;
/*
*/
:TAG = 'streetaddress' ;
GOSUB 100 ;
SELECT  STRCAT( :ADDRESS , ' ' , :ADDRESS2 , ' ' , :ADDRES3 , ' ' ,
:STATE , ' ' , :ZIP)
FROM DUMMY ASCII ADDTO :TMPFILE ;
GOSUB 200 ;
/*
*/
:TAG = 'email' ;
GOSUB 100 ;
SELECT  :EMAIL
FROM DUMMY ASCII ADDTO :TMPFILE ;
GOSUB 200 ;
/*
*/
:TAG = 'description' ;
GOSUB 100 ;
SELECT TEXT
FROM JOBSTEXTB
WHERE 0=0
AND   JOB = :JOB
AND   TEXTLINE > 3
ASCII ADDTO :TMPFILE
;
GOSUB 200 ;
/*
*/
:TAG = 'salary' ;
GOSUB 100 ;
SELECT  :SALARY
FROM DUMMY ASCII ADDTO :TMPFILE ;
GOSUB 200 ;
/*
*/
:TAG = 'education' ;
GOSUB 100 ;
SELECT  ''
FROM DUMMY ASCII ADDTO :TMPFILE ;
GOSUB 200 ;
/*
*/
:TAG = 'jobtype' ;
GOSUB 100 ;
SELECT  :JOBTYPE
FROM DUMMY ASCII ADDTO :TMPFILE ;
GOSUB 200 ;
/*
*/
:TAG = 'category' ;
GOSUB 100 ;
SELECT  ''
FROM DUMMY ASCII ADDTO :TMPFILE ;
GOSUB 200 ;
/*
*/
:TAG = 'experience' ;
GOSUB 100 ;
SELECT  ''
FROM DUMMY ASCII ADDTO :TMPFILE ;
GOSUB 200 ;
/*
*/
:TAG = 'expirationdate' ;
GOSUB 100 ;
SELECT  :ZCLA_CLOSENOTE
FROM DUMMY ASCII ADDTO :TMPFILE ;
GOSUB 200 ;
/*
*/
:TAG = 'remotetype' ;
GOSUB 100 ;
SELECT  'COVID-19'
FROM DUMMY ASCII ADDTO :TMPFILE ;
GOSUB 200 ;
/*
*/
SELECT '</job>' FROM DUMMY ASCII ADDTO :TMPFILE ;
LOOP 10 ;
LABEL 90 ;
CLOSE C ;
SELECT '</source>' FROM DUMMY ASCII ADDTO :TMPFILE
;
SELECT STRCAT(SQL.TMPFILE,'.xml') INTO :TMPFILE2 FROM DUMMY ;
EXECUTE FILTER '-unicode2utf8'
,              :TMPFILE , :TMPFILE2
;
EXECUTE FILTER '-replace'
,              '&amp;' , '&'
,              '&quot;' , '"'
,              '&nbsp;' , '~'
,              :TMPFILE2 , :TMPFILE
;
EXECUTE FILTER '126' , '126' , '32'
,              :TMPFILE , 'C:\inetpub\wwwroot\indeed.xml'
;
LABEL 99 ;
/*
*/
/*
*/
SUB 100 ;
SELECT STRCAT('<'
,     :TAG
,     '>'
,     '<![CDATA[')
FROM DUMMY ASCII ADDTO :TMPFILE ;
RETURN ;
/*
*/
SUB 200 ;
SELECT STRCAT(']]></'
,     :TAG
,     '>')
FROM DUMMY ASCII ADDTO :TMPFILE ;
RETURN ;
/*Link to contract*/
LINK ZCLA_CONTRACTS TO :$.PAR ;
GOTO 0910 WHERE :RETVAL <= 0 ;
/*link to generalload*/
LINK GENERALLOAD TO :$.GNL ;
GOTO 1010 WHERE :RETVAL <= 0 ;
/**/
SELECT ZCLA_COWVAR.FDT
INTO   :$.FDT
FROM   ZCLA_COWVAR
WHERE  ZCLA_COWVAR.USER = SQL.USER ;
/**/
:ZCLA_CONTRACT = 0 ;
/**/
SELECT ZCLA_CONTRACTS.CONTRACT
INTO   :ZCLA_CONTRACT
FROM   ZCLA_CONTRACTS
WHERE  ZCLA_CONTRACTS.CONTRACT <> 0 ;
/**/
:ZLINE = 0 ;
SELECT MAX(LINE)
INTO   :ZLINE
FROM   GENERALLOAD ;
/*Project*/
INSERT INTO GENERALLOAD (LINE, RECORDTYPE, INT1)
SELECT :ZLINE + SQL.LINE, '1' , ZCLA_CONTRACTS.DOC
FROM   ZCLA_CONTRACTS
WHERE  ZCLA_CONTRACTS.CONTRACT       = :ZCLA_CONTRACT ;
/*Contract*/
INSERT INTO GENERALLOAD (LINE, RECORDTYPE, INT1)
SELECT :ZLINE + SQL.LINE + 1, '2' , :ZCLA_CONTRACT
FROM   DUMMY ;
/**/
:$.CON = 0 ;
/**/
SELECT ZCLA_CONTRACTSCHEDUL.CONTRACTSCHED
INTO   :$.CON
FROM   ZCLA_CONTRACTSCHEDUL, ZCLA_CONTRACTS
WHERE  ZCLA_CONTRACTS.CONTRACT       = :ZCLA_CONTRACT
AND    ZCLA_CONTRACTS.CONTRACT       = ZCLA_CONTRACTSCHEDUL.CONTRACT
AND    ZCLA_CONTRACTSCHEDUL.SIGNDATE = :$.FDT ;
/*Contract Schedule*/
INSERT INTO GENERALLOAD (LINE, RECORDTYPE, INT1)
SELECT :ZLINE + SQL.LINE + 2, '3' , :$.CON
FROM DUMMY  ;
/**/
:PLINE = 0 ;
SELECT MAX(ZCLA_PROJACTSCH.LINE)
INTO   :PLINE
FROM   ZCLA_PROJACTSCH
WHERE  ZCLA_PROJACTSCH.CONTRACTSCHED = :$.CON ;
/**/
/*Insert any lines that are ready for invoice */
INSERT INTO GENERALLOAD (LINE, RECORDTYPE, INT1, INT2, TEXT1, INT3)
SELECT :ZLINE + SQL.LINE + 3, '4'
,      ZCLA_CONTRACTSCHEDUL.CONTRACTSCHED, PROJACTS.PROJACT
,      'Contract Work', :PLINE + SQL.LINE
FROM   ZCLA_CONTRACTS, ZCLA_CONTRACTSCHEDUL, PROJACTS,
ZCLA_FIXSTATUSES
WHERE  ZCLA_CONTRACTS.CONTRACT       = :ZCLA_CONTRACT
AND    ZCLA_CONTRACTS.CONTRACT       = ZCLA_CONTRACTSCHEDUL.CONTRACT
AND    ZCLA_CONTRACTSCHEDUL.SIGNDATE = :$.FDT
AND    ZCLA_CONTRACTS.DOC             = PROJACTS.DOC
AND    PROJACTS.STEPSTATUS           = ZCLA_FIXSTATUSES.STEPSTATUS
AND    ZCLA_FIXSTATUSES.ZCLA_INVOICE = 'Y'
AND    PROJACTS.ZCLA_TOTPRICE        > 0.0
AND    PROJACTS.PROJACT NOT IN
(SELECT PROJACT
FROM   ZCLA_PROJACTSCH
WHERE  ZCLA_PROJACTSCH.CONTRACTSCHED =
ZCLA_CONTRACTSCHEDUL.CONTRACTSCHED
AND    ZCLA_CONTRACTSCHEDUL.CONTRACT = ZCLA_CONTRACTS.CONTRACT
AND    ZCLA_CONTRACTS.CONTRACT       = :ZCLA_CONTRACT
AND    ZCLA_PROJACTSCH.ZCLA_WORKTYPE = 'Contract Work' ) ;
/**/
/* Load WBS */
EXECUTE INTERFACE 'ZCLA_GENERATERAISE', SQL.TMPFILE, '-L' , :$.GNL;
/* Error Logging */
:i_LOGGEDBY = 'ZCLA_GENERATERAISE';
#INCLUDE func/ZEMG_ERRMSGLOG
/*Is this a Digital Signature Contract ?*/
SELECT 'X'
FROM   ZCLA_CONTRACTS
WHERE  ZCLA_CONTRACTS.CONTRACT       = :ZCLA_CONTRACT
AND    ZCLA_CONTRACTS.CONTRACTSIGNED = 'Yes - Electronic' ;
/**/
/**/
GOTO 1001 WHERE :RETVAL <= 0 ;
/*Now Raise task for E Signature */
/**/
UNLINK AND REMOVE GENERALLOAD ;
/**/
LINK GENERALLOAD TO :$.GNL ;
GOTO 1010 WHERE :RETVAL <= 0 ;
/**/
INSERT INTO GENERALLOAD (LINE, RECORDTYPE, TEXT1, DATE1, INT1,
TEXT2)
SELECT SQL.LINE, '1', STRCAT('Signture Required - ',
DOCUMENTS.DOCNO) , :$.FDT,
ZCLA_CONTRACTSCHEDUL.CONTRACTSCHED, USERS.USERLOGIN
FROM   ZCLA_CONTRACTSCHEDUL, ZCLA_CONTRACTS, DOCUMENTS, USERS
WHERE  ZCLA_CONTRACTS.CONTRACT       = :ZCLA_CONTRACT
AND    ZCLA_CONTRACTS.CONTRACT       = ZCLA_CONTRACTSCHEDUL.CONTRACT
AND    ZCLA_CONTRACTS.DOC            = DOCUMENTS.DOC
AND    ZCLA_CONTRACTS.TL             = USERS.USER
AND    ZCLA_CONTRACTSCHEDUL.SIGNDATE = :$.FDT ;
/**/
SELECT LINE, RECORDTYPE, TEXT1, DATE1, INT1,
TEXT2
FROM   GENERALLOAD
TABS ADDTO '../../COWNEIL.TXT';
/*Now Load Task*/
EXECUTE INTERFACE 'ZCLA_RAISESIGN', SQL.TMPFILE, '-L' , :$.GNL;
/* Error Logging */
:i_LOGGEDBY = 'ZCLA_RAISEESIGN';
#INCLUDE func/ZEMG_ERRMSGLOG
/**/
LABEL 1001 ;
/*Now do extras*/
DELETE FROM GENERALLOAD ;
/**/
:ZLINE = 0 ;
SELECT MAX(LINE)
INTO   :ZLINE
FROM   GENERALLOAD ;
/*Project*/
INSERT INTO GENERALLOAD (LINE, RECORDTYPE, INT1)
SELECT :ZLINE + SQL.LINE, '1' , ZCLA_CONTRACTS.DOC
FROM   ZCLA_CONTRACTS
WHERE  ZCLA_CONTRACTS.CONTRACT       = :ZCLA_CONTRACT ;
/*Contract*/
INSERT INTO GENERALLOAD (LINE, RECORDTYPE, INT1)
SELECT :ZLINE + SQL.LINE + 1, '2' , :ZCLA_CONTRACT
FROM   DUMMY ;
/*Contract Schedule*/
INSERT INTO GENERALLOAD (LINE, RECORDTYPE, INT1)
SELECT :ZLINE + SQL.LINE + 2, '3' , :$.CON
FROM DUMMY  ;
/**/
:PLINE = 0 ;
SELECT MAX(ZCLA_PROJACTSCH.LINE)
INTO   :PLINE
FROM   ZCLA_PROJACTSCH
WHERE  ZCLA_PROJACTSCH.CONTRACTSCHED = :$.CON ;
/*Insert any lines that are ready for invoice */
INSERT INTO GENERALLOAD (LINE, RECORDTYPE, INT1, INT2, TEXT1, REAL1
, INT3, TEXT2)
SELECT :ZLINE + SQL.LINE + 3, '4'
,      :$.CON , PROJACTS.PROJACT
,      'Extras', ZCLA_ELEDITSPLIT.VALUE, SQL.LINE + :PLINE
,      ZCLA_ELEDIT.PORDERNO
FROM   ZCLA_ELEDIT,  PROJACTS , ZCLA_FIXSTATUSES, ZCLA_ELEDITSPLIT
, PROJACTS ELEMENTS, ZCLA_CONTRACTS
WHERE  ZCLA_CONTRACTS.CONTRACT        = :ZCLA_CONTRACT
AND    ZCLA_CONTRACTS.DOC             = ELEMENTS.DOC
AND    ELEMENTS.LEVEL                 = 2
AND    ELEMENTS.PROJACT               = ZCLA_ELEDIT.PROJACT
AND    ZCLA_ELEDIT.PROJACT            = PROJACTS.ZCLA_PLOT
AND    ZCLA_ELEDIT.EDITID             = ZCLA_ELEDITSPLIT.EDITID
AND    ZCLA_ELEDITSPLIT.FIXID         =  PROJACTS.ZCLA_FIX
AND    PROJACTS.STEPSTATUS            =  ZCLA_FIXSTATUSES.STEPSTATUS
AND    ZCLA_FIXSTATUSES.ZCLA_INVOICE  = 'Y'
AND    ZCLA_ELEDITSPLIT.VALUE         > 0.0
AND    PROJACTS.PROJACT NOT IN
(SELECT PROJACT
FROM   ZCLA_PROJACTSCH
WHERE  ZCLA_PROJACTSCH.CONTRACTSCHED = :$.CON
AND    ZCLA_PROJACTSCH.ZCLA_WORKTYPE = 'Extras' ) ;
/**/
/* Load WBS */
EXECUTE INTERFACE 'ZCLA_GENERATERAISE', SQL.TMPFILE, '-L' , :$.GNL;
/* Error Logging */
:i_LOGGEDBY = 'ZCLA_GENERATERAISE';
UNLINK AND REMOVE GENERALLOAD ;
LABEL 1010 ;
UNLINK ZCLA_CONTRACTS ;
LABEL 0910 ;
/* Save Housetype Edit:
UPDTYPE (CHAR,1,'I/U/D')
.    I(nsert)
.    U(pdate)
.    D(elete)
EDITTYPE (CHAR,1,'W/A/R/S/H/C/P')
.    W(ays)
.    A(ttachment)
.    R(oom)
.    S(ubcontract)
.    H(ouse)
.    C(onsumer unit)
.    P(art)
*/
#INCLUDE func/ZCLA_DEBUGUSR
SELECT 'ZCLA_HTEDIT/ZCLA_BUF1'
, :$.HOUSETYPE  , :$.EDITTYPE , :UPDTYPE
FROM DUMMY
WHERE :DEBUG = 1
FORMAT ADDTO :DEBUGFILE
;
:HOUSETYPE = 0 ;
SELECT :$.HOUSETYPE INTO :HOUSETYPE
FROM DUMMY ;
/*
GergoM | 11/12/23 |
Skip if it is not under any plots
*/
GOTO 1112231158 WHERE NOT EXISTS (
SELECT PROJACT, DOC
FROM PROJACTS
WHERE ZCLA_HOUSETYPEID = :HOUSETYPE
)
;
#INCLUDE ZCLA_HTEDIT/ZCLA_BUF4
LABEL 1112231158;
/* Save Housetype Edit:
UPDTYPE (CHAR,1,'I/U/D')
.    I(nsert)
.    U(pdate)
.    D(elete)
EDITTYPE (CHAR,1,'W/A/R/S/H/C/P')
.    W(ays)
.    A(ttachment)
.    R(oom)
.    S(ubcontract)
.    H(ouse)
.    C(onsumer unit)
.    P(art)
*/
#INCLUDE func/ZCLA_DEBUGUSR
SELECT 'ZCLA_HTEDIT/ZCLA_BUF3'
, :$$.NSCUST  , :$.EDITTYPE , :UPDTYPE
FROM DUMMY
WHERE :DEBUG = 1
FORMAT ADDTO :DEBUGFILE
;
:HOUSETYPE = 0 ;
SELECT :$$.NSCUST INTO :HOUSETYPE
FROM DUMMY ;
#INCLUDE ZCLA_HTEDIT/ZCLA_BUF4
/*
*************** */
/*
Rooms */
/*
SUP */
#INCLUDE func/ZCLA_DEBUGUSR
SELECT 'ZCLA_HTEDIT/R' , :ELEMENT , :HTEDIT , :OPENEDIT
FROM DUMMY
WHERE :DEBUG = 1
FORMAT ADDTO :DEBUGFILE
;
INSERT INTO ZCLA_ELEDITLOG ( EDITID
,      PROJACT
,      UPDTYPE
,      EDITTYPE
,      ROOM
,      ROOMDES
,      GUID
,      GUID2
,      FIELD
,      OLDKEY
,      NEWKEY
,      OLDVALUE
,      NEWVALUE
,      OLDPRICE
,      NEWPRICE
,      ISDELETED
,      WASDELETED
,      INT1
,      TEXT1
,      INT2
)
SELECT :OPENEDIT
,       PROJACTS.PROJACT
,       ZCLA_HTEDITLOG.UPDTYPE
,       ZCLA_HTEDITLOG.EDITTYPE
,       ZCLA_ROOMS.ROOM
,       ZCLA_ROOMS.ROOMDES
,       ZCLA_ROOMS.GUID
,       ZCLA_PLOTROOMS.GUID AS GUID2
,       'SUP' AS FIELD
,       ZCLA_PLOTROOMS.SUP AS OLDKEY
,       ZCLA_ROOMS.SUP AS NEWKEY
,       OLDVALUE.SUPDES AS OLDVALUE
,       NEWVALUE.SUPDES AS NEWVALUE
,       0 AS OLDPRICE
,       0 AS NEWPRICE
,       '' AS ISDELETED
,       '' AS WASDELETED
,       ZCLA_ROOMS.COL
,       ZCLA_ROOMS.STYLE
,       NEWVALUE.SUP
FROM SUPPLIERS NEWVALUE
,    PROJACTS
,    ZCLA_ROOMS
,    ZCLA_HTEDIT
,    ZCLA_HTEDITLOG
,    ZCLA_PLOTROOMS ?
,    SUPPLIERS OLDVALUE ?
WHERE 0=0
AND   ZCLA_HTEDIT.HTEDIT = ZCLA_HTEDITLOG.HTEDIT
AND   ZCLA_ROOMS.GUID = ZCLA_HTEDITLOG.GUID
AND   PROJACTS.ZCLA_HOUSETYPEID = ZCLA_HTEDIT.HOUSETYPEID
AND   NEWVALUE.SUP = ZCLA_ROOMS.SUP
AND   ZCLA_PLOTROOMS.SUP = OLDVALUE.SUP
AND   PROJACTS.PROJACT = ZCLA_PLOTROOMS.PROJACT
AND   ZCLA_ROOMS.GUID = ZCLA_PLOTROOMS.GUID
AND   ZCLA_HTEDIT.HTEDIT = :HTEDIT
AND   PROJACTS.PROJACT = :ELEMENT
AND   ZCLA_HTEDIT.CLOSEFLAG <> 'Y'
AND   ZCLA_HTEDITLOG.EDITTYPE = 'R'
;
/*
*************** */
/* subcontract     */
/*
QUANTITY */
#INCLUDE func/ZCLA_DEBUGUSR
SELECT 'ZCLA_HTEDIT/S' , :ELEMENT , :HTEDIT , :OPENEDIT
FROM DUMMY
WHERE :DEBUG = 1
FORMAT ADDTO :DEBUGFILE
;
INSERT INTO ZCLA_ELEDITLOG ( EDITID
,      PROJACT
,      UPDTYPE
,      EDITTYPE
,      ROOM
,      ROOMDES
,      GUID
,      GUID2
,      FIELD
,      OLDKEY
,      NEWKEY
,      OLDVALUE
,      NEWVALUE
,      OLDPRICE
,      NEWPRICE
,      ISDELETED
,      WASDELETED
,      INT1
,      INT2
,      TEXT1
,      INT3
,      REAL1
,      REAL2
,      REAL3
,      INT4
,      REAL4
,      KEY1
,      KEY2
)
SELECT :OPENEDIT
,       PROJACTS.PROJACT
,       ZCLA_HTEDITLOG.UPDTYPE
,       ZCLA_HTEDITLOG.EDITTYPE
,       ZCLA_ROOMQUOTE.ROOM
,       ZCLA_ROOMS.ROOMDES
,       ZCLA_ROOMQUOTE.GUID
,       ZCLA_PLOTQUOTE.GUID AS GUID2
,       'QUANTITY' AS FIELD
,       ZCLA_PLOTQUOTE.QUANTITY AS OLDKEY
,       ZCLA_ROOMQUOTE.QUANTITY AS NEWKEY
,       ITOA(ZCLA_PLOTQUOTE.QUANTITY) AS OLDVALUE
,       ITOA(ZCLA_ROOMQUOTE.QUANTITY) AS NEWVALUE
,       0 AS OLDPRICE
,       0 AS NEWPRICE
,       ZCLA_ROOMQUOTE.ISDELETED
,       ZCLA_PLOTQUOTE.ISDELETED AS WASDELETED
,       ZCLA_ROOMQUOTE.ORDI
,       ZCLA_ROOMQUOTE.DEALI
,       ZCLA_ROOMQUOTE.PDES
,       ZCLA_PLOTQUOTE.QUANTITY
,       ZCLA_ROOMQUOTE.PRICE
,       ZCLA_ROOMQUOTE.MARKUP
,       ZCLA_ROOMQUOTE.TOTPRICE
,       ZCLA_ROOMQUOTE.FIXID
,       ZCLA_ROOMQUOTE.ZCLA_COST
,       ZCLA_ROOMQUOTE.PROF
,       ZCLA_ROOMQUOTE.KLINE
FROM ZCLA_PLOTQUOTE  ?
,    ZCLA_ROOMS
,    ZCLA_HTEDIT
,    ZCLA_HTEDITLOG
,    ZCLA_ROOMQUOTE
,    PROJACTS
WHERE  0=0
AND   ZCLA_HTEDIT.HTEDIT = ZCLA_HTEDITLOG.HTEDIT
AND   ZCLA_HTEDITLOG.GUID = ZCLA_ROOMQUOTE.GUID
AND   ZCLA_HTEDIT.HOUSETYPEID = ZCLA_ROOMQUOTE.HOUSETYPEID
AND   ZCLA_HTEDIT.HOUSETYPEID = PROJACTS.ZCLA_HOUSETYPEID
AND   ZCLA_ROOMS.ROOM = ZCLA_ROOMQUOTE.ROOM
AND   ZCLA_PLOTQUOTE.PROJACT = PROJACTS.PROJACT
AND   ZCLA_PLOTQUOTE.GUID = ZCLA_ROOMQUOTE.GUID
AND   ZCLA_HTEDIT.HTEDIT = :HTEDIT
AND   ZCLA_HTEDIT.CLOSEFLAG <> 'Y'
AND   ZCLA_HTEDITLOG.EDITTYPE = 'S'
AND   PROJACTS.PROJACT = :ELEMENT
;
/*
PRICE */
INSERT INTO ZCLA_ELEDITLOG ( EDITID
,      PROJACT
,      UPDTYPE
,      EDITTYPE
,      ROOM
,      ROOMDES
,      GUID
,      GUID2
,      FIELD
,      OLDKEY
,      NEWKEY
,      OLDVALUE
,      NEWVALUE
,      OLDPRICE
,      NEWPRICE
,      ISDELETED
,      WASDELETED
,      INT1
,      INT2
,      TEXT1
,      INT3
,      REAL1
,      REAL2
,      REAL3
,      INT4
,      REAL4
,      KEY1
,      KEY2
)
SELECT :OPENEDIT
,       PROJACTS.PROJACT
,       ZCLA_HTEDITLOG.UPDTYPE
,       ZCLA_HTEDITLOG.EDITTYPE
,       ZCLA_ROOMQUOTE.ROOM
,       ZCLA_ROOMS.ROOMDES
,       ZCLA_ROOMQUOTE.GUID
,       ZCLA_PLOTQUOTE.GUID AS GUID2
,       'PRICE' AS FIELD
,       0 AS OLDKEY
,       0 AS NEWKEY
,       RTOA(ZCLA_PLOTQUOTE.PRICE ,2 ) AS OLDVALUE
,       RTOA(ZCLA_ROOMQUOTE.PRICE ,2 ) AS NEWVALUE
,       ZCLA_PLOTQUOTE.PRICE AS OLDPRICE
,       ZCLA_ROOMQUOTE.PRICE AS NEWPRICE
,       ZCLA_ROOMQUOTE.ISDELETED
,       ZCLA_PLOTQUOTE.ISDELETED AS WASDELETED
,       ZCLA_ROOMQUOTE.ORDI
,       ZCLA_ROOMQUOTE.DEALI
,       ZCLA_ROOMQUOTE.PDES
,       ZCLA_PLOTQUOTE.QUANTITY
,       ZCLA_ROOMQUOTE.PRICE
,       ZCLA_ROOMQUOTE.MARKUP
,       ZCLA_ROOMQUOTE.TOTPRICE
,       ZCLA_ROOMQUOTE.FIXID
,       ZCLA_ROOMQUOTE.ZCLA_COST
,       ZCLA_ROOMQUOTE.PROF
,       ZCLA_ROOMQUOTE.KLINE
FROM ZCLA_PLOTQUOTE ?
,    ZCLA_ROOMS
,    ZCLA_HTEDIT
,    ZCLA_HTEDITLOG
,    ZCLA_ROOMQUOTE
,    PROJACTS
WHERE 0=0
AND   ZCLA_HTEDIT.HTEDIT = ZCLA_HTEDITLOG.HTEDIT
AND   ZCLA_HTEDITLOG.GUID = ZCLA_ROOMQUOTE.GUID
AND   ZCLA_HTEDIT.HOUSETYPEID = ZCLA_ROOMQUOTE.HOUSETYPEID
AND   ZCLA_HTEDIT.HOUSETYPEID = PROJACTS.ZCLA_HOUSETYPEID
AND   ZCLA_ROOMS.ROOM = ZCLA_ROOMQUOTE.ROOM
AND   ZCLA_PLOTQUOTE.PROJACT = PROJACTS.PROJACT
AND   ZCLA_PLOTQUOTE.GUID = ZCLA_ROOMQUOTE.GUID
AND   ZCLA_HTEDIT.CLOSEFLAG <> 'Y'
AND   ZCLA_HTEDITLOG.EDITTYPE = 'S'
AND   PROJACTS.PROJACT = :ELEMENT
AND   ZCLA_HTEDIT.HTEDIT = :HTEDIT
;
/*
MARKUP */
INSERT INTO ZCLA_ELEDITLOG ( EDITID
,      PROJACT
,      UPDTYPE
,      EDITTYPE
,      ROOM
,      ROOMDES
,      GUID
,      GUID2
,      FIELD
,      OLDKEY
,      NEWKEY
,      OLDVALUE
,      NEWVALUE
,      OLDPRICE
,      NEWPRICE
,      ISDELETED
,      WASDELETED
,      INT1
,      INT2
,      TEXT1
,      INT3
,      REAL1
,      REAL2
,      REAL3
,      INT4
,      REAL4
,      KEY1
,      KEY2
)
SELECT :OPENEDIT
,       PROJACTS.PROJACT
,       ZCLA_HTEDITLOG.UPDTYPE
,       ZCLA_HTEDITLOG.EDITTYPE
,       ZCLA_ROOMQUOTE.ROOM
,       ZCLA_ROOMS.ROOMDES
,       ZCLA_ROOMQUOTE.GUID
,       ZCLA_PLOTQUOTE.GUID AS GUID2
,       'MARKUP' AS FIELD
,       0 AS OLDKEY
,       0 AS NEWKEY
,       RTOA(ZCLA_PLOTQUOTE.MARKUP, 3 ) AS OLDVALUE
,       RTOA(ZCLA_ROOMQUOTE.MARKUP, 3 ) AS NEWVALUE
,       ZCLA_PLOTQUOTE.MARKUP AS OLDPRICE
,       ZCLA_ROOMQUOTE.MARKUP AS NEWPRICE
,       ZCLA_ROOMQUOTE.ISDELETED
,       ZCLA_PLOTQUOTE.ISDELETED AS WASDELETED
,       ZCLA_ROOMQUOTE.ORDI
,       ZCLA_ROOMQUOTE.DEALI
,       ZCLA_ROOMQUOTE.PDES
,       ZCLA_PLOTQUOTE.QUANTITY
,       ZCLA_ROOMQUOTE.PRICE
,       ZCLA_ROOMQUOTE.MARKUP
,       ZCLA_ROOMQUOTE.TOTPRICE
,       ZCLA_ROOMQUOTE.FIXID
,       ZCLA_ROOMQUOTE.ZCLA_COST
,       ZCLA_ROOMQUOTE.PROF
,       ZCLA_ROOMQUOTE.KLINE
FROM ZCLA_PLOTQUOTE ?
,    ZCLA_ROOMS
,    ZCLA_HTEDIT
,    ZCLA_HTEDITLOG
,    ZCLA_ROOMQUOTE
,    PROJACTS
WHERE 0=0
AND   ZCLA_HTEDIT.HTEDIT = ZCLA_HTEDITLOG.HTEDIT
AND   ZCLA_HTEDITLOG.GUID = ZCLA_ROOMQUOTE.GUID
AND   ZCLA_HTEDIT.HOUSETYPEID = ZCLA_ROOMQUOTE.HOUSETYPEID
AND   ZCLA_HTEDIT.HOUSETYPEID = PROJACTS.ZCLA_HOUSETYPEID
AND   ZCLA_ROOMS.ROOM = ZCLA_ROOMQUOTE.ROOM
AND   ZCLA_PLOTQUOTE.PROJACT = PROJACTS.PROJACT
AND   ZCLA_PLOTQUOTE.GUID = ZCLA_ROOMQUOTE.GUID
AND   ZCLA_HTEDIT.CLOSEFLAG <> 'Y'
AND   ZCLA_HTEDITLOG.EDITTYPE = 'S'
AND   ZCLA_HTEDIT.HTEDIT = :HTEDIT
AND   PROJACTS.PROJACT = :ELEMENT
;
/*
TOTPRICE */
INSERT INTO ZCLA_ELEDITLOG ( EDITID
,      PROJACT
,      UPDTYPE
,      EDITTYPE
,      ROOM
,      ROOMDES
,      GUID
,      GUID2
,      FIELD
,      OLDKEY
,      NEWKEY
,      OLDVALUE
,      NEWVALUE
,      OLDPRICE
,      NEWPRICE
,      ISDELETED
,      WASDELETED
,      INT1
,      INT2
,      TEXT1
,      INT3
,      REAL1
,      REAL2
,      REAL3
,      INT4
,      REAL4
,      KEY1
,      KEY2
)
SELECT :OPENEDIT
,       PROJACTS.PROJACT
,       ZCLA_HTEDITLOG.UPDTYPE
,       ZCLA_HTEDITLOG.EDITTYPE
,       ZCLA_ROOMQUOTE.ROOM
,       ZCLA_ROOMS.ROOMDES
,       ZCLA_ROOMQUOTE.GUID
,       ZCLA_PLOTQUOTE.GUID AS GUID2
,       'TOTPRICE' AS FIELD
,       0 AS OLDKEY
,       0 AS NEWKEY
,       RTOA(ZCLA_PLOTQUOTE.TOTPRICE,2) AS OLDVALUE
,       RTOA(ZCLA_ROOMQUOTE.TOTPRICE,2) AS NEWVALUE
,       ZCLA_PLOTQUOTE.TOTPRICE AS OLDPRICE
,       ZCLA_ROOMQUOTE.TOTPRICE AS NEWPRICE
,       ZCLA_ROOMQUOTE.ISDELETED
,       ZCLA_PLOTQUOTE.ISDELETED AS WASDELETED
,       ZCLA_ROOMQUOTE.ORDI
,       ZCLA_ROOMQUOTE.DEALI
,       ZCLA_ROOMQUOTE.PDES
,       ZCLA_PLOTQUOTE.QUANTITY
,       ZCLA_ROOMQUOTE.PRICE
,       ZCLA_ROOMQUOTE.MARKUP
,       ZCLA_ROOMQUOTE.TOTPRICE
,       ZCLA_ROOMQUOTE.FIXID
,       ZCLA_ROOMQUOTE.ZCLA_COST
,       ZCLA_ROOMQUOTE.PROF
,       ZCLA_ROOMQUOTE.KLINE
FROM ZCLA_PLOTQUOTE  ?
,    ZCLA_ROOMS
,    ZCLA_HTEDIT
,    ZCLA_HTEDITLOG
,    ZCLA_ROOMQUOTE
,    PROJACTS
WHERE 0=0
AND   ZCLA_HTEDIT.HTEDIT = ZCLA_HTEDITLOG.HTEDIT
AND   ZCLA_HTEDITLOG.GUID = ZCLA_ROOMQUOTE.GUID
AND   ZCLA_HTEDIT.HOUSETYPEID = ZCLA_ROOMQUOTE.HOUSETYPEID
AND   ZCLA_HTEDIT.HOUSETYPEID = PROJACTS.ZCLA_HOUSETYPEID
AND   ZCLA_ROOMS.ROOM = ZCLA_ROOMQUOTE.ROOM
AND   ZCLA_PLOTQUOTE.PROJACT = PROJACTS.PROJACT
AND   ZCLA_PLOTQUOTE.GUID = ZCLA_ROOMQUOTE.GUID
AND   ZCLA_HTEDIT.CLOSEFLAG <> 'Y'
AND   ZCLA_HTEDITLOG.EDITTYPE = 'S'
AND   ZCLA_HTEDIT.HTEDIT = :HTEDIT
AND   PROJACTS.PROJACT = :ELEMENT
;
/*
ORDI */
INSERT INTO ZCLA_ELEDITLOG ( EDITID
,      PROJACT
,      UPDTYPE
,      EDITTYPE
,      ROOM
,      ROOMDES
,      GUID
,      GUID2
,      FIELD
,      OLDKEY
,      NEWKEY
,      OLDVALUE
,      NEWVALUE
,      OLDPRICE
,      NEWPRICE
,      ISDELETED
,      WASDELETED
,      INT1
,      INT2
,      TEXT1
,      INT3
,      REAL1
,      REAL2
,      REAL3
,      INT4
,      REAL4
,      KEY1
,      KEY2
)
SELECT :OPENEDIT
,       PROJACTS.PROJACT
,       ZCLA_HTEDITLOG.UPDTYPE
,       ZCLA_HTEDITLOG.EDITTYPE
,       ZCLA_ROOMQUOTE.ROOM
,       ZCLA_ROOMS.ROOMDES
,       ZCLA_ROOMQUOTE.GUID
,       ZCLA_PLOTQUOTE.GUID AS GUID2
,       'ORDI' AS FIELD
,       ZCLA_PLOTQUOTE.ORDI AS OLDKEY
,       ZCLA_ROOMQUOTE.ORDI AS NEWKEY
,       ITOA(ZCLA_PLOTQUOTE.ORDI) AS OLDVALUE
,       ITOA(ZCLA_ROOMQUOTE.ORDI) AS NEWVALUE
,       0 AS OLDPRICE
,       0 AS NEWPRICE
,       ZCLA_ROOMQUOTE.ISDELETED
,       ZCLA_PLOTQUOTE.ISDELETED AS WASDELETED
,       ZCLA_ROOMQUOTE.ORDI
,       ZCLA_ROOMQUOTE.DEALI
,       ZCLA_ROOMQUOTE.PDES
,       ZCLA_PLOTQUOTE.QUANTITY
,       ZCLA_ROOMQUOTE.PRICE
,       ZCLA_ROOMQUOTE.MARKUP
,       ZCLA_ROOMQUOTE.TOTPRICE
,       ZCLA_ROOMQUOTE.FIXID
,       ZCLA_ROOMQUOTE.ZCLA_COST
,       ZCLA_ROOMQUOTE.PROF
,       ZCLA_ROOMQUOTE.KLINE
FROM ZCLA_PLOTQUOTE ?
,    ZCLA_ROOMS
,    ZCLA_HTEDIT
,    ZCLA_HTEDITLOG
,    ZCLA_ROOMQUOTE
,    PROJACTS
WHERE 0=0
AND   ZCLA_HTEDIT.HTEDIT = ZCLA_HTEDITLOG.HTEDIT
AND   ZCLA_HTEDITLOG.GUID = ZCLA_ROOMQUOTE.GUID
AND   ZCLA_HTEDIT.HOUSETYPEID = ZCLA_ROOMQUOTE.HOUSETYPEID
AND   ZCLA_HTEDIT.HOUSETYPEID = PROJACTS.ZCLA_HOUSETYPEID
AND   ZCLA_ROOMS.ROOM = ZCLA_ROOMQUOTE.ROOM
AND   ZCLA_PLOTQUOTE.PROJACT = PROJACTS.PROJACT
AND   ZCLA_PLOTQUOTE.GUID = ZCLA_ROOMQUOTE.GUID
AND   ZCLA_HTEDIT.HTEDIT = :HTEDIT
AND   ZCLA_HTEDIT.CLOSEFLAG <> 'Y'
AND   ZCLA_HTEDITLOG.EDITTYPE = 'S'
AND   PROJACTS.PROJACT = :ELEMENT
;
/*
DEALI */
INSERT INTO ZCLA_ELEDITLOG ( EDITID
,      PROJACT
,      UPDTYPE
,      EDITTYPE
,      ROOM
,      ROOMDES
,      GUID
,      GUID2
,      FIELD
,      OLDKEY
,      NEWKEY
,      OLDVALUE
,      NEWVALUE
,      OLDPRICE
,      NEWPRICE
,      ISDELETED
,      WASDELETED
,      INT1
,      INT2
,      TEXT1
,      INT3
,      REAL1
,      REAL2
,      REAL3
,      INT4
,      REAL4
,      KEY1
,      KEY2
)
SELECT :OPENEDIT
,       PROJACTS.PROJACT
,       ZCLA_HTEDITLOG.UPDTYPE
,       ZCLA_HTEDITLOG.EDITTYPE
,       ZCLA_ROOMQUOTE.ROOM
,       ZCLA_ROOMS.ROOMDES
,       ZCLA_ROOMQUOTE.GUID
,       ZCLA_PLOTQUOTE.GUID AS GUID2
,       'DEALI' AS FIELD
,       ZCLA_PLOTQUOTE.DEALI AS OLDKEY
,       ZCLA_ROOMQUOTE.DEALI AS NEWKEY
,       ITOA(ZCLA_PLOTQUOTE.DEALI) AS OLDVALUE
,       ITOA(ZCLA_ROOMQUOTE.DEALI) AS NEWVALUE
,       0 AS OLDPRICE
,       0 AS NEWPRICE
,       ZCLA_ROOMQUOTE.ISDELETED
,       ZCLA_PLOTQUOTE.ISDELETED AS WASDELETED
,       ZCLA_ROOMQUOTE.ORDI
,       ZCLA_ROOMQUOTE.DEALI
,       ZCLA_ROOMQUOTE.PDES
,       ZCLA_PLOTQUOTE.QUANTITY
,       ZCLA_ROOMQUOTE.PRICE
,       ZCLA_ROOMQUOTE.MARKUP
,       ZCLA_ROOMQUOTE.TOTPRICE
,       ZCLA_ROOMQUOTE.FIXID
,       ZCLA_ROOMQUOTE.ZCLA_COST
,       ZCLA_ROOMQUOTE.PROF
,       ZCLA_ROOMQUOTE.KLINE
FROM ZCLA_PLOTQUOTE ?
,    ZCLA_ROOMS
,    ZCLA_HTEDIT
,    ZCLA_HTEDITLOG
,    ZCLA_ROOMQUOTE
,    PROJACTS
WHERE 0=0
AND   ZCLA_HTEDIT.HTEDIT = ZCLA_HTEDITLOG.HTEDIT
AND   ZCLA_HTEDITLOG.GUID = ZCLA_ROOMQUOTE.GUID
AND   ZCLA_HTEDIT.HOUSETYPEID = ZCLA_ROOMQUOTE.HOUSETYPEID
AND   ZCLA_HTEDIT.HOUSETYPEID = PROJACTS.ZCLA_HOUSETYPEID
AND   ZCLA_ROOMS.ROOM = ZCLA_ROOMQUOTE.ROOM
AND   ZCLA_PLOTQUOTE.PROJACT = PROJACTS.PROJACT
AND   ZCLA_PLOTQUOTE.GUID = ZCLA_ROOMQUOTE.GUID
AND   ZCLA_HTEDIT.HTEDIT = :HTEDIT
AND   ZCLA_HTEDIT.CLOSEFLAG <> 'Y'
AND   ZCLA_HTEDITLOG.EDITTYPE = 'S'
AND   PROJACTS.PROJACT = :ELEMENT
;
/*
PDES */
INSERT INTO ZCLA_ELEDITLOG ( EDITID
,      PROJACT
,      UPDTYPE
,      EDITTYPE
,      ROOM
,      ROOMDES
,      GUID
,      GUID2
,      FIELD
,      OLDKEY
,      NEWKEY
,      OLDVALUE
,      NEWVALUE
,      OLDPRICE
,      NEWPRICE
,      ISDELETED
,      WASDELETED
,      INT1
,      INT2
,      TEXT1
,      INT3
,      REAL1
,      REAL2
,      REAL3
,      INT4
,      REAL4
,      KEY1
,      KEY2
)
SELECT :OPENEDIT
,       PROJACTS.PROJACT
,       ZCLA_HTEDITLOG.UPDTYPE
,       ZCLA_HTEDITLOG.EDITTYPE
,       ZCLA_ROOMQUOTE.ROOM
,       ZCLA_ROOMS.ROOMDES
,       ZCLA_ROOMQUOTE.GUID
,       ZCLA_PLOTQUOTE.GUID AS GUID2
,       'PDES' AS FIELD
,       0 AS OLDKEY
,       0 AS NEWKEY
,       ZCLA_PLOTQUOTE.PDES AS OLDVALUE
,       ZCLA_ROOMQUOTE.PDES AS NEWVALUE
,       0 AS OLDPRICE
,       0 AS NEWPRICE
,       ZCLA_ROOMQUOTE.ISDELETED
,       ZCLA_PLOTQUOTE.ISDELETED AS WASDELETED
,       ZCLA_ROOMQUOTE.ORDI
,       ZCLA_ROOMQUOTE.DEALI
,       ZCLA_ROOMQUOTE.PDES
,       ZCLA_PLOTQUOTE.QUANTITY
,       ZCLA_ROOMQUOTE.PRICE
,       ZCLA_ROOMQUOTE.MARKUP
,       ZCLA_ROOMQUOTE.TOTPRICE
,       ZCLA_ROOMQUOTE.FIXID
,       ZCLA_ROOMQUOTE.ZCLA_COST
,       ZCLA_ROOMQUOTE.PROF
,       ZCLA_ROOMQUOTE.KLINE
FROM ZCLA_PLOTQUOTE ?
,    ZCLA_ROOMS
,    ZCLA_HTEDIT
,    ZCLA_HTEDITLOG
,    ZCLA_ROOMQUOTE
,    PROJACTS
WHERE 0=0
AND   ZCLA_HTEDIT.HTEDIT = ZCLA_HTEDITLOG.HTEDIT
AND   ZCLA_HTEDITLOG.GUID = ZCLA_ROOMQUOTE.GUID
AND   ZCLA_HTEDIT.HOUSETYPEID = ZCLA_ROOMQUOTE.HOUSETYPEID
AND   ZCLA_HTEDIT.HOUSETYPEID = PROJACTS.ZCLA_HOUSETYPEID
AND   ZCLA_ROOMS.ROOM = ZCLA_ROOMQUOTE.ROOM
AND   ZCLA_PLOTQUOTE.PROJACT = PROJACTS.PROJACT
AND   ZCLA_PLOTQUOTE.GUID = ZCLA_ROOMQUOTE.GUID
AND   ZCLA_HTEDIT.HTEDIT = :HTEDIT
AND   ZCLA_HTEDIT.CLOSEFLAG <> 'Y'
AND   ZCLA_HTEDITLOG.EDITTYPE = 'S'
AND   PROJACTS.PROJACT = :ELEMENT
;
/*
FIXID */
INSERT INTO ZCLA_ELEDITLOG ( EDITID
,      PROJACT
,      UPDTYPE
,      EDITTYPE
,      ROOM
,      ROOMDES
,      GUID
,      GUID2
,      FIELD
,      OLDKEY
,      NEWKEY
,      OLDVALUE
,      NEWVALUE
,      OLDPRICE
,      NEWPRICE
,      ISDELETED
,      WASDELETED
,      INT1
,      INT2
,      TEXT1
,      INT3
,      REAL1
,      REAL2
,      REAL3
,      INT4
,      REAL4
,      KEY1
,      KEY2
)
SELECT :OPENEDIT
,       PROJACTS.PROJACT
,       ZCLA_HTEDITLOG.UPDTYPE
,       ZCLA_HTEDITLOG.EDITTYPE
,       ZCLA_ROOMQUOTE.ROOM
,       ZCLA_ROOMS.ROOMDES
,       ZCLA_ROOMQUOTE.GUID
,       ZCLA_PLOTQUOTE.GUID AS GUID2
,       'FIXID' AS FIELD
,       ZCLA_PLOTQUOTE.FIXID AS OLDKEY
,       ZCLA_ROOMQUOTE.FIXID AS NEWKEY
,       OLDVALUE.DESCRIPTION  AS OLDVALUE
,       NEWVALUE.DESCRIPTION  AS NEWVALUE
,       0 AS OLDPRICE
,       0 AS NEWPRICE
,       ZCLA_ROOMQUOTE.ISDELETED
,       ZCLA_PLOTQUOTE.ISDELETED AS WASDELETED
,       ZCLA_ROOMQUOTE.ORDI
,       ZCLA_ROOMQUOTE.DEALI
,       ZCLA_ROOMQUOTE.PDES
,       ZCLA_PLOTQUOTE.QUANTITY
,       ZCLA_ROOMQUOTE.PRICE
,       ZCLA_ROOMQUOTE.MARKUP
,       ZCLA_ROOMQUOTE.TOTPRICE
,       ZCLA_ROOMQUOTE.FIXID
,       ZCLA_ROOMQUOTE.ZCLA_COST
,       ZCLA_ROOMQUOTE.PROF
,       ZCLA_ROOMQUOTE.KLINE
FROM ZCLA_PLOTQUOTE ?
,    ZCLA_ROOMS
,    ZCLA_HTEDIT
,    ZCLA_HTEDITLOG
,    ZCLA_ROOMQUOTE
,    PROJACTS
,    ZCLA_FIXES NEWVALUE
,    ZCLA_FIXES OLDVALUE ?
WHERE 0=0
AND   NEWVALUE.FIXID = ZCLA_ROOMQUOTE.FIXID
AND   OLDVALUE.FIXID = ZCLA_PLOTQUOTE.FIXID
AND   ZCLA_HTEDIT.HTEDIT = ZCLA_HTEDITLOG.HTEDIT
AND   ZCLA_HTEDITLOG.GUID = ZCLA_ROOMQUOTE.GUID
AND   ZCLA_HTEDIT.HOUSETYPEID = ZCLA_ROOMQUOTE.HOUSETYPEID
AND   ZCLA_HTEDIT.HOUSETYPEID = PROJACTS.ZCLA_HOUSETYPEID
AND   ZCLA_ROOMS.ROOM = ZCLA_ROOMQUOTE.ROOM
AND   ZCLA_PLOTQUOTE.PROJACT = PROJACTS.PROJACT
AND   ZCLA_PLOTQUOTE.GUID = ZCLA_ROOMQUOTE.GUID
AND   ZCLA_HTEDIT.HTEDIT = :HTEDIT
AND   ZCLA_HTEDIT.CLOSEFLAG <> 'Y'
AND   ZCLA_HTEDITLOG.EDITTYPE = 'S'
AND   PROJACTS.PROJACT = :ELEMENT
;
/*
ZCLA_COST */
INSERT INTO ZCLA_ELEDITLOG ( EDITID
,      PROJACT
,      UPDTYPE
,      EDITTYPE
,      ROOM
,      ROOMDES
,      GUID
,      GUID2
,      FIELD
,      OLDKEY
,      NEWKEY
,      OLDVALUE
,      NEWVALUE
,      OLDPRICE
,      NEWPRICE
,      ISDELETED
,      WASDELETED
,      INT1
,      INT2
,      TEXT1
,      INT3
,      REAL1
,      REAL2
,      REAL3
,      INT4
,      REAL4
,      KEY1
,      KEY2
)
SELECT :OPENEDIT
,       PROJACTS.PROJACT
,       ZCLA_HTEDITLOG.UPDTYPE
,       ZCLA_HTEDITLOG.EDITTYPE
,       ZCLA_ROOMQUOTE.ROOM
,       ZCLA_ROOMS.ROOMDES
,       ZCLA_ROOMQUOTE.GUID
,       ZCLA_PLOTQUOTE.GUID AS GUID2
,       'ZCLA_COST' AS FIELD
,       0 AS OLDKEY
,       0 AS NEWKEY
,       RTOA(ZCLA_PLOTQUOTE.ZCLA_COST,2)  AS OLDVALUE
,       RTOA(ZCLA_ROOMQUOTE.ZCLA_COST,2)  AS NEWVALUE
,       ZCLA_PLOTQUOTE.ZCLA_COST  AS OLDPRICE
,       ZCLA_ROOMQUOTE.ZCLA_COST  AS NEWPRICE
,       ZCLA_ROOMQUOTE.ISDELETED
,       ZCLA_PLOTQUOTE.ISDELETED AS WASDELETED
,       ZCLA_ROOMQUOTE.ORDI
,       ZCLA_ROOMQUOTE.DEALI
,       ZCLA_ROOMQUOTE.PDES
,       ZCLA_PLOTQUOTE.QUANTITY
,       ZCLA_ROOMQUOTE.PRICE
,       ZCLA_ROOMQUOTE.MARKUP
,       ZCLA_ROOMQUOTE.TOTPRICE
,       ZCLA_ROOMQUOTE.FIXID
,       ZCLA_ROOMQUOTE.ZCLA_COST
,       ZCLA_ROOMQUOTE.PROF
,       ZCLA_ROOMQUOTE.KLINE
FROM ZCLA_PLOTQUOTE ?
,    ZCLA_ROOMS
,    ZCLA_HTEDIT
,    ZCLA_HTEDITLOG
,    ZCLA_ROOMQUOTE
,    PROJACTS
WHERE 0=0
AND   ZCLA_HTEDIT.HTEDIT = ZCLA_HTEDITLOG.HTEDIT
AND   ZCLA_HTEDITLOG.GUID = ZCLA_ROOMQUOTE.GUID
AND   ZCLA_HTEDIT.HOUSETYPEID = ZCLA_ROOMQUOTE.HOUSETYPEID
AND   ZCLA_HTEDIT.HOUSETYPEID = PROJACTS.ZCLA_HOUSETYPEID
AND   ZCLA_ROOMS.ROOM = ZCLA_ROOMQUOTE.ROOM
AND   ZCLA_PLOTQUOTE.PROJACT = PROJACTS.PROJACT
AND   ZCLA_PLOTQUOTE.GUID = ZCLA_ROOMQUOTE.GUID
AND   ZCLA_HTEDIT.HTEDIT = :HTEDIT
AND   ZCLA_HTEDIT.CLOSEFLAG <> 'Y'
AND   ZCLA_HTEDITLOG.EDITTYPE = 'S'
AND   PROJACTS.PROJACT = :ELEMENT
;
/* Save Housetype Edit:
UPDTYPE (CHAR,1,'I/U/D')
.    I(nsert)
.    U(pdate)
.    D(elete)
EDITTYPE (CHAR,1,'W/A/R/S/H/C/P')
.    W(ays)
.    A(ttachment)
.    R(oom)
.    S(ubcontract)
.    H(ouse)
.    C(onsumer unit)
.    P(art)
*/
#INCLUDE func/ZCLA_DEBUGUSR
SELECT 'ZCLA_HTEDIT/ZCLA_BUF3'
, :$$.NSCUST  , :$.EDITTYPE , :UPDTYPE
FROM DUMMY
WHERE :DEBUG = 1
FORMAT ADDTO :DEBUGFILE
;
:HOUSETYPE = 0 ;
SELECT :$$.NSCUST INTO :HOUSETYPE
FROM DUMMY ;
#INCLUDE ZCLA_HTEDIT/ZCLA_BUF4
/*
*/
SELECT 'ZCLA_HTEDIT/ZCLA_BUF5'
FROM DUMMY
WHERE :DEBUG = 1
FORMAT ADDTO :DEBUGFILE;
/*
Iterate change @LOG */
/*GergoM |
LOGID - > :LOGID, ORDER BY LOGID ASC |
14/11/23*/
DECLARE @LOG CURSOR FOR
SELECT LOGID
,     EDITID
,     PROJACT
,     UPDTYPE
,     EDITTYPE
,     ROOM
,     ROOMDES
,     GUID
,     GUID2
,     FIELD
,     OLDKEY
,     NEWKEY
,     OLDVALUE
,     NEWVALUE
,     OLDPRICE
,     NEWPRICE
,     ISDELETED
,     WASDELETED
,     INT1
,     INT2
,     INT3
,     INT4
,     TEXT1
,     TEXT2
,     TEXT3
,     REAL1
,     REAL2
,     REAL3
,     INT4
,     REAL4
,     DATE1
,     DATE2
,     KEY1
,     KEY2
,     PARENT
FROM ZCLA_ELEDITLOG
WHERE EDITID = :OPENEDIT
ORDER BY LOGID ASC;
OPEN @LOG ;
GOTO 511239 WHERE :RETVAL = 0 ;
LABEL 511231 ;
:LOGID = 0;
:EDITID = :PROJACT = :ROOM = 0 ;
:UPDTYPE = :EDITTYPE = :ISDELETED = :WASDELETED = '\0' ;
:ROOMDES = :GUID = :GUID2 = :PARENT = :FIELD = '' ;
:OLDKEY = :NEWKEY = 0 ;
:OLDVALUE = :NEWVALUE = '' ;
:OLDPRICE = :NEWPRICE = 0.0 ;
:INT1 = :INT2 = :INT3 = :INT4 = 0 ;
:TEXT1 = :TEXT2 = :TEXT3  = '' ;
:REAL1 = :REAL2 = :REAL3 = :REAL4 = 0.0 ;
:DATE1 = :DATE2 = :KEY1 = :KEY2 = 0 ;
FETCH @LOG INTO :LOGID
,    :EDITID
,    :PROJACT
,    :UPDTYPE
,    :EDITTYPE
,    :ROOM
,    :ROOMDES
,    :GUID
,    :GUID2
,    :FIELD
,    :OLDKEY
,    :NEWKEY
,    :OLDVALUE
,    :NEWVALUE
,    :OLDPRICE
,    :NEWPRICE
,    :ISDELETED
,    :WASDELETED
,    :INT1
,    :INT2
,    :INT3
,    :INT4
,    :TEXT1
,    :TEXT2
,    :TEXT3
,    :REAL1
,    :REAL2
,    :REAL3
,    :INT4
,    :REAL4
,    :DATE1
,    :DATE2
,    :KEY1
,    :KEY2
,    :PARENT
;
GOTO 511238 WHERE :RETVAL = 0
;
SELECT :EDITID
,    :PROJACT
,    :UPDTYPE
,    :EDITTYPE
,    :ROOM
,    :ROOMDES
,    :GUID
,    :GUID2
,    :FIELD
,    :OLDKEY
,    :NEWKEY
,    :OLDVALUE
,    :NEWVALUE
,    :OLDPRICE
,    :NEWPRICE
,    :ISDELETED
,    :WASDELETED
,    :INT1
,    :INT2
,    :INT3
,    :INT4
,    :TEXT1
,    :TEXT2
,    :TEXT3
,    :REAL1
,    :REAL2
,    :REAL3
,    :INT4
,    :REAL4
,    :DATE1
,    :DATE2
,    :KEY1
,    :KEY2
,    :PARENT
FROM DUMMY
WHERE 0=0
AND   :DEBUG = 1
FORMAT ADDTO :DEBUGFILE
;
GOSUB 5112310 WHERE :UPDTYPE = 'I' ;
GOSUB 5112320 WHERE :UPDTYPE = 'U' ;
GOSUB 5112330 WHERE :UPDTYPE = 'D' ;
/*
*/
LOOP 511231 ;
LABEL 511238 ;
CLOSE @LOG ;
LABEL 511239 ;
/*
*/
SELECT 'ZCLA_HTEDIT/ZCLA_BUF5/END'
FROM DUMMY
WHERE :DEBUG = 1
FORMAT ADDTO :DEBUGFILE;
/*
Ways */
#INCLUDE func/ZCLA_DEBUGUSR
SELECT 'ZCLA_HTEDIT/W' , :ELEMENT , :HTEDIT , :OPENEDIT
FROM DUMMY
WHERE :DEBUG = 1
FORMAT ADDTO :DEBUGFILE
;
INSERT INTO ZCLA_ELEDITLOG ( EDITID
,      PROJACT
,      UPDTYPE
,      EDITTYPE
,      ROOM
,      ROOMDES
,      GUID
,      GUID2
,      FIELD
,      OLDKEY
,      NEWKEY
,      OLDVALUE
,      NEWVALUE
,      OLDPRICE
,      NEWPRICE
,      ISDELETED
,      WASDELETED
,      INT1
,      INT2
,      INT3
,      TEXT1
,      KEY1
,      PARENT
)
SELECT :OPENEDIT
,      PROJACTS.PROJACT
,      ZCLA_HTEDITLOG.UPDTYPE
,      ZCLA_HTEDITLOG.EDITTYPE
,      ZCLA_ROOMS.ROOM
,      ZCLA_ROOMS.ROOMDES
,      ZCLA_CUNITCONFIG.GUID
,      ZCLA_PLOTCUCFG.GUID AS GUID2
,      'PART' AS FIELD
/* GergoM | 14/11/23 | Switch line 43 with 44*/
,      ZCLA_PLOTCUCFG.PART AS OLDKEY
,      ZCLA_CUNITCONFIG.PART AS NEWKEY
,      OLDVALUE.PARTNAME AS OLDVALUE
,      NEWVALUE.PARTNAME AS NEWVALUE
,      0 AS OLDPRICE
,      0 AS NEWPRICE
,      ZCLA_CUNITCONFIG.ISDELETED
,      ZCLA_PLOTCU.ISDELETED AS WASDELETED
,      ZCLA_CUNITCONFIG.PART
,      ZCLA_CUNITCONFIG.DEVICE
,      ZCLA_CUNITCONFIG.WAYNO
,      ZCLA_CUNITCONFIG.RCD
,      ZCLA_CUNITCONFIG.KLINE
,      ZCLA_CONSUMERUNITS.GUID
FROM   ZCLA_PLOTCU
,      ZCLA_PLOTCUCFG ?
,      PART NEWVALUE
,      ZCLA_CONSUMERUNITS
,      ZCLA_HTEDIT
,      ZCLA_HTEDITLOG
,      PROJACTS
,      ZCLA_CUNITCONFIG
,      PART OLDVALUE ?
,      ZCLA_ROOMS
WHERE        (0 = 0)
AND   ZCLA_CUNITCONFIG.PART = NEWVALUE.PART
AND   ZCLA_PLOTCUCFG.PART = OLDVALUE.PART
AND   ZCLA_PLOTCU.GUID = ZCLA_CONSUMERUNITS.GUID
AND   ZCLA_HTEDIT.HOUSETYPEID = PROJACTS.ZCLA_HOUSETYPEID
AND   ZCLA_PLOTCU.CONSUMERUNIT = ZCLA_PLOTCUCFG.CONSUMERUNIT
AND   ZCLA_HTEDIT.HTEDIT = ZCLA_HTEDITLOG.HTEDIT
AND   ZCLA_HTEDITLOG.GUID = ZCLA_CUNITCONFIG.GUID
AND   ZCLA_CONSUMERUNITS.CONSUMERUNIT =
ZCLA_CUNITCONFIG.CONSUMERUNIT
AND   ZCLA_CONSUMERUNITS.ROOM = ZCLA_ROOMS.ROOM
AND   ZCLA_PLOTCU.PROJACT = PROJACTS.PROJACT
AND   ZCLA_PLOTCUCFG.GUID = ZCLA_CUNITCONFIG.GUID
AND   (PROJACTS.PROJACT = :ELEMENT)
AND   (ZCLA_HTEDIT.HTEDIT = :HTEDIT)
AND   (ZCLA_HTEDITLOG.EDITTYPE = 'W')
AND   (ZCLA_HTEDIT.CLOSEFLAG <> 'Y')
;
/*
RCD */
INSERT INTO ZCLA_ELEDITLOG ( EDITID
,      PROJACT
,      UPDTYPE
,      EDITTYPE
,      ROOM
,      ROOMDES
,      GUID
,      GUID2
,      FIELD
,      OLDKEY
,      NEWKEY
,      OLDVALUE
,      NEWVALUE
,      OLDPRICE
,      NEWPRICE
,      ISDELETED
,      WASDELETED
,      INT1
,      INT2
,      INT3
,      TEXT1
,      KEY1
,      PARENT
)
SELECT :OPENEDIT
,      PROJACTS.PROJACT
,      ZCLA_HTEDITLOG.UPDTYPE
,      ZCLA_HTEDITLOG.EDITTYPE
,      ZCLA_PLOTCU.ROOM
,      ZCLA_ROOMS.ROOMDES
,      ZCLA_CUNITCONFIG.GUID
,      ZCLA_PLOTCUCFG.GUID AS GUID2
,      'RCD' AS FIELD
,      0 AS OLDKEY
,      0 AS NEWKEY
,      ZCLA_PLOTCUCFG.RCD  AS OLDVALUE
,      ZCLA_CUNITCONFIG.RCD AS NEWVALUE
,      0 AS OLDPRICE
,      0 AS NEWPRICE
,      ZCLA_CUNITCONFIG.ISDELETED
,      ZCLA_PLOTCU.ISDELETED AS WASDELETED
,      ZCLA_CUNITCONFIG.PART
,      ZCLA_CUNITCONFIG.DEVICE
,      ZCLA_CUNITCONFIG.WAYNO
,      ZCLA_CUNITCONFIG.RCD
,      ZCLA_CUNITCONFIG.KLINE
,      ZCLA_CONSUMERUNITS.GUID
FROM ZCLA_CUNITCONFIG
,      ZCLA_HTEDITLOG
,      ZCLA_HTEDIT
,      PROJACTS
,      ZCLA_ROOMS
,      ZCLA_PLOTCUCFG ?
,      ZCLA_PLOTCU
,      ZCLA_CONSUMERUNITS
WHERE 0 = 0
AND   ZCLA_PLOTCU.GUID = ZCLA_CONSUMERUNITS.GUID
AND   ZCLA_CONSUMERUNITS.CONSUMERUNIT =
ZCLA_CUNITCONFIG.CONSUMERUNIT
AND   ZCLA_HTEDITLOG.HTEDIT = ZCLA_HTEDIT.HTEDIT
AND   ZCLA_HTEDIT.HOUSETYPEID = PROJACTS.ZCLA_HOUSETYPEID
AND   ZCLA_CUNITCONFIG.GUID = ZCLA_HTEDITLOG.GUID
AND   ZCLA_PLOTCUCFG.CONSUMERUNIT = ZCLA_PLOTCU.CONSUMERUNIT
AND   ZCLA_CONSUMERUNITS.ROOM = ZCLA_ROOMS.ROOM
AND   PROJACTS.PROJACT = ZCLA_PLOTCU.PROJACT
AND   ZCLA_CUNITCONFIG.GUID = ZCLA_PLOTCUCFG.GUID
AND   PROJACTS.PROJACT = :ELEMENT
AND   ZCLA_HTEDIT.HTEDIT = :HTEDIT
AND   ZCLA_HTEDITLOG.EDITTYPE = 'W'
AND   ZCLA_HTEDIT.CLOSEFLAG <> 'Y'
;
/*
Device */
INSERT INTO ZCLA_ELEDITLOG ( EDITID
,      PROJACT
,      UPDTYPE
,      EDITTYPE
,      ROOM
,      ROOMDES
,      GUID
,      GUID2
,      FIELD
,      OLDKEY
,      NEWKEY
,      OLDVALUE
,      NEWVALUE
,      OLDPRICE
,      NEWPRICE
,      ISDELETED
,      WASDELETED
,      INT1
,      INT2
,      INT3
,      TEXT1
,      KEY1
,      PARENT
)
SELECT :OPENEDIT
,      PROJACTS.PROJACT
,      ZCLA_HTEDITLOG.UPDTYPE
,      ZCLA_HTEDITLOG.EDITTYPE
,      ZCLA_PLOTCU.ROOM
,      ZCLA_ROOMS.ROOMDES
,      ZCLA_CUNITCONFIG.GUID
,      ZCLA_PLOTCUCFG.GUID AS GUID2
,      'DEVICE' AS FIELD
,      ZCLA_PLOTCUCFG.DEVICE AS OLDKEY
,      ZCLA_CUNITCONFIG.DEVICE AS NEWKEY
,      OLDVALUE.DEVICEDES AS OLDVALUE
,      NEWVALUE.DEVICEDES AS NEWVALUE
,      0 AS OLDPRICE
,      0 AS NEWPRICE
,      ZCLA_CUNITCONFIG.ISDELETED
,      ZCLA_PLOTCU.ISDELETED AS WASDELETED
,      ZCLA_CUNITCONFIG.PART
,      ZCLA_CUNITCONFIG.DEVICE
,      ZCLA_CUNITCONFIG.WAYNO
,      ZCLA_CUNITCONFIG.RCD
,      ZCLA_CUNITCONFIG.KLINE
,      ZCLA_CONSUMERUNITS.GUID
FROM ZCLA_CUCONFIG_OPT NEWVALUE ?
,      ZCLA_ROOMS
,      ZCLA_PLOTCUCFG ?
,      ZCLA_PLOTCU
,      ZCLA_CUNITCONFIG
,      ZCLA_HTEDITLOG
,      ZCLA_HTEDIT
,      PROJACTS
,      ZCLA_CUCONFIG_OPT OLDVALUE
,      ZCLA_CONSUMERUNITS
WHERE 0 = 0
AND   ZCLA_PLOTCU.GUID = ZCLA_CONSUMERUNITS.GUID
AND   ZCLA_CONSUMERUNITS.CONSUMERUNIT =
ZCLA_CUNITCONFIG.CONSUMERUNIT
AND   ZCLA_ROOMS.ROOM = ZCLA_CONSUMERUNITS.ROOM
/*GergoM | 14/11/23 | OLDVALUE*/
AND   OLDVALUE.DEVICE = ZCLA_PLOTCUCFG.DEVICE
AND   ZCLA_HTEDITLOG.HTEDIT = ZCLA_HTEDIT.HTEDIT
AND   ZCLA_HTEDIT.HOUSETYPEID = PROJACTS.ZCLA_HOUSETYPEID
AND   ZCLA_CUNITCONFIG.GUID = ZCLA_HTEDITLOG.GUID
/*GergoM | 14/11/23 | NEWVALUE*/
AND   ZCLA_CUNITCONFIG.DEVICE = NEWVALUE.DEVICE
AND   ZCLA_PLOTCU.PROJACT = PROJACTS.PROJACT
AND   ZCLA_PLOTCUCFG.GUID = ZCLA_CUNITCONFIG.GUID
AND   PROJACTS.PROJACT = :ELEMENT
AND   ZCLA_HTEDIT.HTEDIT = :HTEDIT
AND   ZCLA_HTEDITLOG.EDITTYPE = 'W'
AND   ZCLA_HTEDIT.CLOSEFLAG <> 'Y'
;
/*
Way number */
INSERT INTO ZCLA_ELEDITLOG ( EDITID
,      PROJACT
,      UPDTYPE
,      EDITTYPE
,      ROOM
,      ROOMDES
,      GUID
,      GUID2
,      FIELD
,      OLDKEY
,      NEWKEY
,      OLDVALUE
,      NEWVALUE
,      OLDPRICE
,      NEWPRICE
,      ISDELETED
,      WASDELETED
,      INT1
,      INT2
,      INT3
,      TEXT1
,      KEY1
,      PARENT
)
SELECT :OPENEDIT
,      PROJACTS.PROJACT
,      ZCLA_HTEDITLOG.UPDTYPE
,      ZCLA_HTEDITLOG.EDITTYPE
,      ZCLA_PLOTCU.ROOM
,      ZCLA_ROOMS.ROOMDES
,      ZCLA_CUNITCONFIG.GUID
,      ZCLA_PLOTCUCFG.GUID AS GUID2
,      'WAYNO' AS FIELD
,      ZCLA_PLOTCUCFG.WAYNO AS OLDKEY
,      ZCLA_CUNITCONFIG.WAYNO AS NEWKEY
,      ITOA(ZCLA_PLOTCUCFG.WAYNO) AS OLDVALUE
,      ITOA(ZCLA_CUNITCONFIG.WAYNO) AS NEWVALUE
,      0 AS OLDPRICE
,      0 AS NEWPRICE
,      ZCLA_CUNITCONFIG.ISDELETED
,      ZCLA_PLOTCU.ISDELETED AS WASDELETED
,      ZCLA_CUNITCONFIG.PART
,      ZCLA_CUNITCONFIG.DEVICE
,      ZCLA_CUNITCONFIG.WAYNO
,      ZCLA_CUNITCONFIG.RCD
,      ZCLA_CUNITCONFIG.KLINE
,      ZCLA_CONSUMERUNITS.GUID
FROM ZCLA_CUNITCONFIG
,      ZCLA_HTEDITLOG
,      ZCLA_HTEDIT
,      PROJACTS
,      ZCLA_ROOMS
,      ZCLA_PLOTCUCFG ?
,      ZCLA_PLOTCU
,      ZCLA_CONSUMERUNITS
WHERE 0 = 0
AND   ZCLA_PLOTCU.GUID = ZCLA_CONSUMERUNITS.GUID
AND   ZCLA_CONSUMERUNITS.CONSUMERUNIT =
ZCLA_CUNITCONFIG.CONSUMERUNIT
AND   ZCLA_HTEDITLOG.HTEDIT = ZCLA_HTEDIT.HTEDIT
AND   ZCLA_HTEDIT.HOUSETYPEID = PROJACTS.ZCLA_HOUSETYPEID
AND   ZCLA_CUNITCONFIG.GUID = ZCLA_HTEDITLOG.GUID
AND   ZCLA_PLOTCUCFG.CONSUMERUNIT = ZCLA_PLOTCU.CONSUMERUNIT
AND   ZCLA_CONSUMERUNITS.ROOM = ZCLA_ROOMS.ROOM
AND   PROJACTS.PROJACT = ZCLA_PLOTCU.PROJACT
AND   ZCLA_CUNITCONFIG.GUID = ZCLA_PLOTCUCFG.GUID
AND   PROJACTS.PROJACT = :ELEMENT
AND   ZCLA_HTEDIT.HTEDIT = :HTEDIT
AND   ZCLA_HTEDITLOG.EDITTYPE = 'W'
AND   ZCLA_HTEDIT.CLOSEFLAG <> 'Y'
;
/*
*************** */
/*
Attachments */
/*
EXTFILENAME */
#INCLUDE func/ZCLA_DEBUGUSR
SELECT 'ZCLA_HTEDIT/A' , :ELEMENT , :HTEDIT , :OPENEDIT
FROM DUMMY
WHERE :DEBUG = 1
FORMAT ADDTO :DEBUGFILE
;
/*GergoM | 14/11/23 | TEXT2 <- HTFILES.EXTFILEDES*/
INSERT INTO ZCLA_ELEDITLOG ( EDITID
,      PROJACT
,      UPDTYPE
,      EDITTYPE
,      ROOM
,      ROOMDES
,      GUID
,      GUID2
,      FIELD
,      OLDKEY
,      NEWKEY
,      OLDVALUE
,      NEWVALUE
,      OLDPRICE
,      NEWPRICE
,      ISDELETED
,      WASDELETED
,      INT1
,      INT2
,      TEXT1
,      TEXT2
,      DATE1
)
SELECT :OPENEDIT
,       PROJACTS.PROJACT
,       ZCLA_HTEDITLOG.UPDTYPE
,       ZCLA_HTEDITLOG.EDITTYPE
,       0 AS ROOM
,       '' AS ROOMDES
,       HTFILES.GUID
,       PLFILES.GUID AS GUID2
,       'EXTFILENAME' AS FIELD
,       0 AS OLDKEY
,       0 AS NEWKEY
,       PLFILES.EXTFILENAME AS OLDVALUE
,       HTFILES.EXTFILENAME AS NEWVALUE
,       0 AS OLDPRICE
,       0 AS NEWPRICE
,       PLFILES.ISDELETED
,       HTFILES.ISDELETED AS WASDELETED
,       HTFILES.ZCLA_FILECATEGORY
,       HTFILES.EXTFILENUM
,       HTFILES.EXTFILENAME
,       HTFILES.EXTFILEDES
,       HTFILES.CURDATE
FROM ZCLA_HTEDITLOG
,    ZCLA_HTEDIT
,    PROJACTS
,    EXTFILES HTFILES
,    EXTFILES PLFILES ?
WHERE 0 = 0
AND   ZCLA_HTEDITLOG.HTEDIT = ZCLA_HTEDIT.HTEDIT
AND   ZCLA_HTEDIT.HOUSETYPEID = PROJACTS.ZCLA_HOUSETYPEID
AND   ZCLA_HTEDITLOG.GUID = HTFILES.GUID
AND   PROJACTS.PROJACT = PLFILES.IV
AND   HTFILES.GUID = PLFILES.GUID
AND   PROJACTS.PROJACT = :ELEMENT
AND   ZCLA_HTEDIT.HTEDIT = :HTEDIT
AND   ZCLA_HTEDITLOG.EDITTYPE = 'A'
AND   ZCLA_HTEDIT.CLOSEFLAG <> 'Y'
AND   HTFILES.TYPE = '¬'
AND   PLFILES.TYPE = 'T'
;
/*
EXTFILEDES */
INSERT INTO ZCLA_ELEDITLOG ( EDITID
,      PROJACT
,      UPDTYPE
,      EDITTYPE
,      ROOM
,      ROOMDES
,      GUID
,      GUID2
,      FIELD
,      OLDKEY
,      NEWKEY
,      OLDVALUE
,      NEWVALUE
,      OLDPRICE
,      NEWPRICE
,      ISDELETED
,      WASDELETED
,      INT1
,      INT2
,      TEXT1
,      TEXT2
,      DATE1
)
SELECT :OPENEDIT
,       PROJACTS.PROJACT
,       ZCLA_HTEDITLOG.UPDTYPE
,       ZCLA_HTEDITLOG.EDITTYPE
,       0 AS ROOM
,       '' AS ROOMDES
,       HTFILES.GUID
,       PLFILES.GUID AS GUID2
,       'EXTFILEDES' AS FIELD
,       0 AS OLDKEY
,       0 AS NEWKEY
,       PLFILES.EXTFILEDES AS OLDVALUE
,       HTFILES.EXTFILEDES AS NEWVALUE
,       0 AS OLDPRICE
,       0 AS NEWPRICE
,       HTFILES.ISDELETED
,       PLFILES.ISDELETED AS WASDELETED
,       HTFILES.ZCLA_FILECATEGORY
,       HTFILES.EXTFILENUM
,       HTFILES.EXTFILENAME
,       HTFILES.EXTFILEDES
,       HTFILES.CURDATE
FROM ZCLA_HTEDITLOG
,    ZCLA_HTEDIT
,    PROJACTS
,    EXTFILES HTFILES
,    EXTFILES PLFILES ?
WHERE 0 = 0
AND   ZCLA_HTEDITLOG.HTEDIT = ZCLA_HTEDIT.HTEDIT
AND   ZCLA_HTEDIT.HOUSETYPEID = PROJACTS.ZCLA_HOUSETYPEID
AND   ZCLA_HTEDITLOG.GUID = HTFILES.GUID
AND   PROJACTS.PROJACT = PLFILES.IV
AND   HTFILES.GUID = PLFILES.GUID
AND   PROJACTS.PROJACT = :ELEMENT
AND   ZCLA_HTEDIT.HTEDIT = :HTEDIT
AND   ZCLA_HTEDITLOG.EDITTYPE = 'A'
AND   ZCLA_HTEDIT.CLOSEFLAG <> 'Y'
AND   HTFILES.TYPE = '¬'
AND   PLFILES.TYPE = 'T'
;
/*
ZCLA_FILECATEGORY */
INSERT INTO ZCLA_ELEDITLOG ( EDITID
,      PROJACT
,      UPDTYPE
,      EDITTYPE
,      ROOM
,      ROOMDES
,      GUID
,      GUID2
,      FIELD
,      OLDKEY
,      NEWKEY
,      OLDVALUE
,      NEWVALUE
,      OLDPRICE
,      NEWPRICE
,      ISDELETED
,      WASDELETED
,      INT1
,      INT2
,      TEXT1
,      TEXT2
,      DATE1
)
SELECT :OPENEDIT
,       PROJACTS.PROJACT
,       ZCLA_HTEDITLOG.UPDTYPE
,       ZCLA_HTEDITLOG.EDITTYPE
,       0 AS ROOM
,       '' AS ROOMDES
,       HTFILES.GUID
,       PLFILES.GUID AS GUID2
,       'ZCLA_FILECATEGORY' AS FIELD
,       PLFILES.ZCLA_FILECATEGORY AS OLDKEY
,       HTFILES.ZCLA_FILECATEGORY AS NEWKEY
,       OLDVALUE.CATEGORYNAME AS OLDVALUE
,       NEWVALUE.CATEGORYNAME AS NEWVALUE
,       0 AS OLDPRICE
,       0 AS NEWPRICE
,       HTFILES.ISDELETED
,       PLFILES.ISDELETED AS WASDELETED
,       HTFILES.ZCLA_FILECATEGORY
,       HTFILES.EXTFILENUM
,       HTFILES.EXTFILENAME
,       HTFILES.EXTFILEDES
,       HTFILES.CURDATE
FROM ZCLA_HTEDITLOG
,    ZCLA_HTEDIT
,    PROJACTS
,    EXTFILES HTFILES
,    EXTFILES PLFILES ?
,    ZCLA_FILECATEGORIES OLDVALUE ?
,    ZCLA_FILECATEGORIES NEWVALUE
WHERE 0 = 0
AND   HTFILES.ZCLA_FILECATEGORY = NEWVALUE.FILECATEGORY
AND   PLFILES.ZCLA_FILECATEGORY = OLDVALUE.FILECATEGORY
AND   ZCLA_HTEDITLOG.HTEDIT = ZCLA_HTEDIT.HTEDIT
AND   ZCLA_HTEDIT.HOUSETYPEID = PROJACTS.ZCLA_HOUSETYPEID
AND   ZCLA_HTEDITLOG.GUID = HTFILES.GUID
AND   PROJACTS.PROJACT = PLFILES.IV
AND   HTFILES.GUID = PLFILES.GUID
AND   PROJACTS.PROJACT = :ELEMENT
AND   ZCLA_HTEDIT.HTEDIT = :HTEDIT
AND   ZCLA_HTEDITLOG.EDITTYPE = 'A'
AND   ZCLA_HTEDIT.CLOSEFLAG <> 'Y'
AND   HTFILES.TYPE = '¬'
AND   PLFILES.TYPE = 'T'
;
/*
*************** */
/*
Rooms */
/*
SUP */
#INCLUDE func/ZCLA_DEBUGUSR
SELECT 'ZCLA_HTEDIT/R' , :ELEMENT , :HTEDIT , :OPENEDIT
FROM DUMMY
WHERE :DEBUG = 1
FORMAT ADDTO :DEBUGFILE
;
INSERT INTO ZCLA_ELEDITLOG ( EDITID
,      PROJACT
,      UPDTYPE
,      EDITTYPE
,      ROOM
,      ROOMDES
,      GUID
,      GUID2
,      FIELD
,      OLDKEY
,      NEWKEY
,      OLDVALUE
,      NEWVALUE
,      OLDPRICE
,      NEWPRICE
,      ISDELETED
,      WASDELETED
,      INT1
,      TEXT1
,      INT2
)
SELECT :OPENEDIT
,       PROJACTS.PROJACT
,       ZCLA_HTEDITLOG.UPDTYPE
,       ZCLA_HTEDITLOG.EDITTYPE
,       ZCLA_ROOMS.ROOM
,       ZCLA_ROOMS.ROOMDES
,       ZCLA_ROOMS.GUID
,       ZCLA_PLOTROOMS.GUID AS GUID2
,       'SUP' AS FIELD
,       ZCLA_PLOTROOMS.SUP AS OLDKEY
,       ZCLA_ROOMS.SUP AS NEWKEY
,       OLDVALUE.SUPDES AS OLDVALUE
,       NEWVALUE.SUPDES AS NEWVALUE
,       0 AS OLDPRICE
,       0 AS NEWPRICE
,       '' AS ISDELETED
,       '' AS WASDELETED
,       ZCLA_ROOMS.COL
,       ZCLA_ROOMS.STYLE
,       NEWVALUE.SUP
FROM SUPPLIERS NEWVALUE
,    PROJACTS
,    ZCLA_ROOMS
,    ZCLA_HTEDIT
,    ZCLA_HTEDITLOG
,    ZCLA_PLOTROOMS ?
,    SUPPLIERS OLDVALUE ?
WHERE 0=0
AND   ZCLA_HTEDIT.HTEDIT = ZCLA_HTEDITLOG.HTEDIT
AND   ZCLA_ROOMS.GUID = ZCLA_HTEDITLOG.GUID
AND   PROJACTS.ZCLA_HOUSETYPEID = ZCLA_HTEDIT.HOUSETYPEID
AND   NEWVALUE.SUP = ZCLA_ROOMS.SUP
AND   ZCLA_PLOTROOMS.SUP = OLDVALUE.SUP
AND   PROJACTS.PROJACT = ZCLA_PLOTROOMS.PROJACT
AND   ZCLA_ROOMS.GUID = ZCLA_PLOTROOMS.GUID
AND   ZCLA_HTEDIT.HTEDIT = :HTEDIT
AND   PROJACTS.PROJACT = :ELEMENT
AND   ZCLA_HTEDIT.CLOSEFLAG <> 'Y'
AND   ZCLA_HTEDITLOG.EDITTYPE = 'R'
;
/*
Small Works P(O)ints
medatech.si. 25/3/2024 */
INSERT INTO ZCLA_ELEDITLOG ( EDITID
,      PROJACT
,      UPDTYPE
,      EDITTYPE
,      ROOM
,      ROOMDES
,      GUID
,      GUID2
,      FIELD
,      OLDKEY
,      NEWKEY
,      OLDVALUE
,      NEWVALUE
,      OLDPRICE
,      NEWPRICE
,      ISDELETED
,      WASDELETED
)
SELECT :OPENEDIT
,      PROJACTS.PROJACT
,      (ZCLA_SMALLWORKSPLOT.FIX = 0 ? 'I' : 'U') AS UPDTYPE
,      'O' AS EDITTYPE
,      ZCLA_ROOMS.ROOM
,      ZCLA_ROOMS.ROOMDES
,      ZCLA_ROOMS.GUID
,      ZCLA_ROOMS.GUID AS GUID2
,      STRCAT('Fix ' , ITOA(ZCLA_SMALLWORKSFIX.FIX) , ' sm/wks pts')
AS FIELD
,      ZCLA_SMALLWORKSFIX.FIX AS OLDKEY
,      ZCLA_SMALLWORKSPLOT.FIX AS NEWKEY
,      RTOA( ZCLA_SMALLWORKSPLOT.SMALLPOINTS, 5 ) AS OLDVALUE
,      RTOA( ZCLA_SMALLWORKSFIX.SMALLPOINTS, 5 ) AS NEWVALUE
,      ZCLA_SMALLWORKSPLOT.SMALLPOINTS AS OLDPRICE
,      ZCLA_SMALLWORKSFIX.SMALLPOINTS AS NEWPRICE
,      '' AS ISDELETED
,      '' AS WASDELETED
FROM   ZCLA_SMALLWORKSPLOT ?
,      ZCLA_HTEDIT
,      ZCLA_HTEDITLOG
,      PROJACTS
,      ZCLA_ROOMS
,      ZCLA_SMALLWORKSFIX
WHERE  0=0
AND    ZCLA_HTEDIT.HTEDIT            = ZCLA_HTEDITLOG.HTEDIT
AND    ZCLA_ROOMS.ROOM               = ZCLA_SMALLWORKSFIX.ROOM
AND    PROJACTS.ZCLA_HOUSETYPEID     = ZCLA_ROOMS.HOUSETYPEID
AND    ZCLA_HTEDITLOG.GUID           = ZCLA_ROOMS.GUID
AND    ZCLA_SMALLWORKSPLOT.FIX       = ZCLA_SMALLWORKSFIX.FIX
AND    ZCLA_SMALLWORKSPLOT.ROOM      = ZCLA_ROOMS.ROOM
AND    ZCLA_SMALLWORKSPLOT.PROJACT   = PROJACTS.PROJACT
AND    ZCLA_HTEDIT.HTEDIT = :HTEDIT
AND    PROJACTS.PROJACT = :ELEMENT
AND    ZCLA_HTEDIT.CLOSEFLAG <> 'Y'
AND    ZCLA_HTEDITLOG.EDITTYPE = 'R'
;
/*
*************** */
/* subcontract     */
/*
QUANTITY */
#INCLUDE func/ZCLA_DEBUGUSR
SELECT 'ZCLA_HTEDIT/S' , :ELEMENT , :HTEDIT , :OPENEDIT
FROM DUMMY
WHERE :DEBUG = 1
FORMAT ADDTO :DEBUGFILE
;
INSERT INTO ZCLA_ELEDITLOG ( EDITID
,      PROJACT
,      UPDTYPE
,      EDITTYPE
,      ROOM
,      ROOMDES
,      GUID
,      GUID2
,      FIELD
,      OLDKEY
,      NEWKEY
,      OLDVALUE
,      NEWVALUE
,      OLDPRICE
,      NEWPRICE
,      ISDELETED
,      WASDELETED
,      INT1
,      INT2
,      TEXT1
,      INT3
,      REAL1
,      REAL2
,      REAL3
,      INT4
,      REAL4
,      KEY1
,      KEY2
)
SELECT :OPENEDIT
,       PROJACTS.PROJACT
,       ZCLA_HTEDITLOG.UPDTYPE
,       ZCLA_HTEDITLOG.EDITTYPE
,       ZCLA_ROOMQUOTE.ROOM
,       ZCLA_ROOMS.ROOMDES
,       ZCLA_ROOMQUOTE.GUID
,       ZCLA_PLOTQUOTE.GUID AS GUID2
,       'QUANTITY' AS FIELD
,       ZCLA_PLOTQUOTE.QUANTITY AS OLDKEY
,       ZCLA_ROOMQUOTE.QUANTITY AS NEWKEY
,       ITOA(ZCLA_PLOTQUOTE.QUANTITY) AS OLDVALUE
,       ITOA(ZCLA_ROOMQUOTE.QUANTITY) AS NEWVALUE
,       0 AS OLDPRICE
,       0 AS NEWPRICE
,       ZCLA_ROOMQUOTE.ISDELETED
,       ZCLA_PLOTQUOTE.ISDELETED AS WASDELETED
,       ZCLA_ROOMQUOTE.ORDI
,       ZCLA_ROOMQUOTE.DEALI
,       ZCLA_ROOMQUOTE.PDES
,       ZCLA_PLOTQUOTE.QUANTITY
,       ZCLA_ROOMQUOTE.PRICE
,       ZCLA_ROOMQUOTE.MARKUP
,       ZCLA_ROOMQUOTE.TOTPRICE
,       ZCLA_ROOMQUOTE.FIXID
,       ZCLA_ROOMQUOTE.ZCLA_COST
,       ZCLA_ROOMQUOTE.PROF
,       ZCLA_ROOMQUOTE.KLINE
FROM ZCLA_PLOTQUOTE  ?
,    ZCLA_ROOMS
,    ZCLA_HTEDIT
,    ZCLA_HTEDITLOG
,    ZCLA_ROOMQUOTE
,    PROJACTS
WHERE  0=0
AND   ZCLA_HTEDIT.HTEDIT = ZCLA_HTEDITLOG.HTEDIT
AND   ZCLA_HTEDITLOG.GUID = ZCLA_ROOMQUOTE.GUID
AND   ZCLA_HTEDIT.HOUSETYPEID = ZCLA_ROOMQUOTE.HOUSETYPEID
AND   ZCLA_HTEDIT.HOUSETYPEID = PROJACTS.ZCLA_HOUSETYPEID
AND   ZCLA_ROOMS.ROOM = ZCLA_ROOMQUOTE.ROOM
AND   ZCLA_PLOTQUOTE.PROJACT = PROJACTS.PROJACT
AND   ZCLA_PLOTQUOTE.GUID = ZCLA_ROOMQUOTE.GUID
AND   ZCLA_HTEDIT.HTEDIT = :HTEDIT
AND   ZCLA_HTEDIT.CLOSEFLAG <> 'Y'
AND   ZCLA_HTEDITLOG.EDITTYPE = 'S'
AND   PROJACTS.PROJACT = :ELEMENT
;
/*
PRICE */
INSERT INTO ZCLA_ELEDITLOG ( EDITID
,      PROJACT
,      UPDTYPE
,      EDITTYPE
,      ROOM
,      ROOMDES
,      GUID
,      GUID2
,      FIELD
,      OLDKEY
,      NEWKEY
,      OLDVALUE
,      NEWVALUE
,      OLDPRICE
,      NEWPRICE
,      ISDELETED
,      WASDELETED
,      INT1
,      INT2
,      TEXT1
,      INT3
,      REAL1
,      REAL2
,      REAL3
,      INT4
,      REAL4
,      KEY1
,      KEY2
)
SELECT :OPENEDIT
,       PROJACTS.PROJACT
,       ZCLA_HTEDITLOG.UPDTYPE
,       ZCLA_HTEDITLOG.EDITTYPE
,       ZCLA_ROOMQUOTE.ROOM
,       ZCLA_ROOMS.ROOMDES
,       ZCLA_ROOMQUOTE.GUID
,       ZCLA_PLOTQUOTE.GUID AS GUID2
,       'PRICE' AS FIELD
,       0 AS OLDKEY
,       0 AS NEWKEY
,       RTOA(ZCLA_PLOTQUOTE.PRICE ,2 ) AS OLDVALUE
,       RTOA(ZCLA_ROOMQUOTE.PRICE ,2 ) AS NEWVALUE
,       ZCLA_PLOTQUOTE.PRICE AS OLDPRICE
,       ZCLA_ROOMQUOTE.PRICE AS NEWPRICE
,       ZCLA_ROOMQUOTE.ISDELETED
,       ZCLA_PLOTQUOTE.ISDELETED AS WASDELETED
,       ZCLA_ROOMQUOTE.ORDI
,       ZCLA_ROOMQUOTE.DEALI
,       ZCLA_ROOMQUOTE.PDES
,       ZCLA_PLOTQUOTE.QUANTITY
,       ZCLA_ROOMQUOTE.PRICE
,       ZCLA_ROOMQUOTE.MARKUP
,       ZCLA_ROOMQUOTE.TOTPRICE
,       ZCLA_ROOMQUOTE.FIXID
,       ZCLA_ROOMQUOTE.ZCLA_COST
,       ZCLA_ROOMQUOTE.PROF
,       ZCLA_ROOMQUOTE.KLINE
FROM ZCLA_PLOTQUOTE ?
,    ZCLA_ROOMS
,    ZCLA_HTEDIT
,    ZCLA_HTEDITLOG
,    ZCLA_ROOMQUOTE
,    PROJACTS
WHERE 0=0
AND   ZCLA_HTEDIT.HTEDIT = ZCLA_HTEDITLOG.HTEDIT
AND   ZCLA_HTEDITLOG.GUID = ZCLA_ROOMQUOTE.GUID
AND   ZCLA_HTEDIT.HOUSETYPEID = ZCLA_ROOMQUOTE.HOUSETYPEID
AND   ZCLA_HTEDIT.HOUSETYPEID = PROJACTS.ZCLA_HOUSETYPEID
AND   ZCLA_ROOMS.ROOM = ZCLA_ROOMQUOTE.ROOM
AND   ZCLA_PLOTQUOTE.PROJACT = PROJACTS.PROJACT
AND   ZCLA_PLOTQUOTE.GUID = ZCLA_ROOMQUOTE.GUID
AND   ZCLA_HTEDIT.CLOSEFLAG <> 'Y'
AND   ZCLA_HTEDITLOG.EDITTYPE = 'S'
AND   PROJACTS.PROJACT = :ELEMENT
AND   ZCLA_HTEDIT.HTEDIT = :HTEDIT
;
/*
MARKUP */
INSERT INTO ZCLA_ELEDITLOG ( EDITID
,      PROJACT
,      UPDTYPE
,      EDITTYPE
,      ROOM
,      ROOMDES
,      GUID
,      GUID2
,      FIELD
,      OLDKEY
,      NEWKEY
,      OLDVALUE
,      NEWVALUE
,      OLDPRICE
,      NEWPRICE
,      ISDELETED
,      WASDELETED
,      INT1
,      INT2
,      TEXT1
,      INT3
,      REAL1
,      REAL2
,      REAL3
,      INT4
,      REAL4
,      KEY1
,      KEY2
)
SELECT :OPENEDIT
,       PROJACTS.PROJACT
,       ZCLA_HTEDITLOG.UPDTYPE
,       ZCLA_HTEDITLOG.EDITTYPE
,       ZCLA_ROOMQUOTE.ROOM
,       ZCLA_ROOMS.ROOMDES
,       ZCLA_ROOMQUOTE.GUID
,       ZCLA_PLOTQUOTE.GUID AS GUID2
,       'MARKUP' AS FIELD
,       0 AS OLDKEY
,       0 AS NEWKEY
,       RTOA(ZCLA_PLOTQUOTE.MARKUP, 3 ) AS OLDVALUE
,       RTOA(ZCLA_ROOMQUOTE.MARKUP, 3 ) AS NEWVALUE
,       ZCLA_PLOTQUOTE.MARKUP AS OLDPRICE
,       ZCLA_ROOMQUOTE.MARKUP AS NEWPRICE
,       ZCLA_ROOMQUOTE.ISDELETED
,       ZCLA_PLOTQUOTE.ISDELETED AS WASDELETED
,       ZCLA_ROOMQUOTE.ORDI
,       ZCLA_ROOMQUOTE.DEALI
,       ZCLA_ROOMQUOTE.PDES
,       ZCLA_PLOTQUOTE.QUANTITY
,       ZCLA_ROOMQUOTE.PRICE
,       ZCLA_ROOMQUOTE.MARKUP
,       ZCLA_ROOMQUOTE.TOTPRICE
,       ZCLA_ROOMQUOTE.FIXID
,       ZCLA_ROOMQUOTE.ZCLA_COST
,       ZCLA_ROOMQUOTE.PROF
,       ZCLA_ROOMQUOTE.KLINE
FROM ZCLA_PLOTQUOTE ?
,    ZCLA_ROOMS
,    ZCLA_HTEDIT
,    ZCLA_HTEDITLOG
,    ZCLA_ROOMQUOTE
,    PROJACTS
WHERE 0=0
AND   ZCLA_HTEDIT.HTEDIT = ZCLA_HTEDITLOG.HTEDIT
AND   ZCLA_HTEDITLOG.GUID = ZCLA_ROOMQUOTE.GUID
AND   ZCLA_HTEDIT.HOUSETYPEID = ZCLA_ROOMQUOTE.HOUSETYPEID
AND   ZCLA_HTEDIT.HOUSETYPEID = PROJACTS.ZCLA_HOUSETYPEID
AND   ZCLA_ROOMS.ROOM = ZCLA_ROOMQUOTE.ROOM
AND   ZCLA_PLOTQUOTE.PROJACT = PROJACTS.PROJACT
AND   ZCLA_PLOTQUOTE.GUID = ZCLA_ROOMQUOTE.GUID
AND   ZCLA_HTEDIT.CLOSEFLAG <> 'Y'
AND   ZCLA_HTEDITLOG.EDITTYPE = 'S'
AND   ZCLA_HTEDIT.HTEDIT = :HTEDIT
AND   PROJACTS.PROJACT = :ELEMENT
;
/*
TOTPRICE */
INSERT INTO ZCLA_ELEDITLOG ( EDITID
,      PROJACT
,      UPDTYPE
,      EDITTYPE
,      ROOM
,      ROOMDES
,      GUID
,      GUID2
,      FIELD
,      OLDKEY
,      NEWKEY
,      OLDVALUE
,      NEWVALUE
,      OLDPRICE
,      NEWPRICE
,      ISDELETED
,      WASDELETED
,      INT1
,      INT2
,      TEXT1
,      INT3
,      REAL1
,      REAL2
,      REAL3
,      INT4
,      REAL4
,      KEY1
,      KEY2
)
SELECT :OPENEDIT
,       PROJACTS.PROJACT
,       ZCLA_HTEDITLOG.UPDTYPE
,       ZCLA_HTEDITLOG.EDITTYPE
,       ZCLA_ROOMQUOTE.ROOM
,       ZCLA_ROOMS.ROOMDES
,       ZCLA_ROOMQUOTE.GUID
,       ZCLA_PLOTQUOTE.GUID AS GUID2
,       'TOTPRICE' AS FIELD
,       0 AS OLDKEY
,       0 AS NEWKEY
,       RTOA(ZCLA_PLOTQUOTE.TOTPRICE,2) AS OLDVALUE
,       RTOA(ZCLA_ROOMQUOTE.TOTPRICE,2) AS NEWVALUE
,       ZCLA_PLOTQUOTE.TOTPRICE AS OLDPRICE
,       ZCLA_ROOMQUOTE.TOTPRICE AS NEWPRICE
,       ZCLA_ROOMQUOTE.ISDELETED
,       ZCLA_PLOTQUOTE.ISDELETED AS WASDELETED
,       ZCLA_ROOMQUOTE.ORDI
,       ZCLA_ROOMQUOTE.DEALI
,       ZCLA_ROOMQUOTE.PDES
,       ZCLA_PLOTQUOTE.QUANTITY
,       ZCLA_ROOMQUOTE.PRICE
,       ZCLA_ROOMQUOTE.MARKUP
,       ZCLA_ROOMQUOTE.TOTPRICE
,       ZCLA_ROOMQUOTE.FIXID
,       ZCLA_ROOMQUOTE.ZCLA_COST
,       ZCLA_ROOMQUOTE.PROF
,       ZCLA_ROOMQUOTE.KLINE
FROM ZCLA_PLOTQUOTE  ?
,    ZCLA_ROOMS
,    ZCLA_HTEDIT
,    ZCLA_HTEDITLOG
,    ZCLA_ROOMQUOTE
,    PROJACTS
WHERE 0=0
AND   ZCLA_HTEDIT.HTEDIT = ZCLA_HTEDITLOG.HTEDIT
AND   ZCLA_HTEDITLOG.GUID = ZCLA_ROOMQUOTE.GUID
AND   ZCLA_HTEDIT.HOUSETYPEID = ZCLA_ROOMQUOTE.HOUSETYPEID
AND   ZCLA_HTEDIT.HOUSETYPEID = PROJACTS.ZCLA_HOUSETYPEID
AND   ZCLA_ROOMS.ROOM = ZCLA_ROOMQUOTE.ROOM
AND   ZCLA_PLOTQUOTE.PROJACT = PROJACTS.PROJACT
AND   ZCLA_PLOTQUOTE.GUID = ZCLA_ROOMQUOTE.GUID
AND   ZCLA_HTEDIT.CLOSEFLAG <> 'Y'
AND   ZCLA_HTEDITLOG.EDITTYPE = 'S'
AND   ZCLA_HTEDIT.HTEDIT = :HTEDIT
AND   PROJACTS.PROJACT = :ELEMENT
;
/*
ORDI */
INSERT INTO ZCLA_ELEDITLOG ( EDITID
,      PROJACT
,      UPDTYPE
,      EDITTYPE
,      ROOM
,      ROOMDES
,      GUID
,      GUID2
,      FIELD
,      OLDKEY
,      NEWKEY
,      OLDVALUE
,      NEWVALUE
,      OLDPRICE
,      NEWPRICE
,      ISDELETED
,      WASDELETED
,      INT1
,      INT2
,      TEXT1
,      INT3
,      REAL1
,      REAL2
,      REAL3
,      INT4
,      REAL4
,      KEY1
,      KEY2
)
SELECT :OPENEDIT
,       PROJACTS.PROJACT
,       ZCLA_HTEDITLOG.UPDTYPE
,       ZCLA_HTEDITLOG.EDITTYPE
,       ZCLA_ROOMQUOTE.ROOM
,       ZCLA_ROOMS.ROOMDES
,       ZCLA_ROOMQUOTE.GUID
,       ZCLA_PLOTQUOTE.GUID AS GUID2
,       'ORDI' AS FIELD
,       ZCLA_PLOTQUOTE.ORDI AS OLDKEY
,       ZCLA_ROOMQUOTE.ORDI AS NEWKEY
,       ITOA(ZCLA_PLOTQUOTE.ORDI) AS OLDVALUE
,       ITOA(ZCLA_ROOMQUOTE.ORDI) AS NEWVALUE
,       0 AS OLDPRICE
,       0 AS NEWPRICE
,       ZCLA_ROOMQUOTE.ISDELETED
,       ZCLA_PLOTQUOTE.ISDELETED AS WASDELETED
,       ZCLA_ROOMQUOTE.ORDI
,       ZCLA_ROOMQUOTE.DEALI
,       ZCLA_ROOMQUOTE.PDES
,       ZCLA_PLOTQUOTE.QUANTITY
,       ZCLA_ROOMQUOTE.PRICE
,       ZCLA_ROOMQUOTE.MARKUP
,       ZCLA_ROOMQUOTE.TOTPRICE
,       ZCLA_ROOMQUOTE.FIXID
,       ZCLA_ROOMQUOTE.ZCLA_COST
,       ZCLA_ROOMQUOTE.PROF
,       ZCLA_ROOMQUOTE.KLINE
FROM ZCLA_PLOTQUOTE ?
,    ZCLA_ROOMS
,    ZCLA_HTEDIT
,    ZCLA_HTEDITLOG
,    ZCLA_ROOMQUOTE
,    PROJACTS
WHERE 0=0
AND   ZCLA_HTEDIT.HTEDIT = ZCLA_HTEDITLOG.HTEDIT
AND   ZCLA_HTEDITLOG.GUID = ZCLA_ROOMQUOTE.GUID
AND   ZCLA_HTEDIT.HOUSETYPEID = ZCLA_ROOMQUOTE.HOUSETYPEID
AND   ZCLA_HTEDIT.HOUSETYPEID = PROJACTS.ZCLA_HOUSETYPEID
AND   ZCLA_ROOMS.ROOM = ZCLA_ROOMQUOTE.ROOM
AND   ZCLA_PLOTQUOTE.PROJACT = PROJACTS.PROJACT
AND   ZCLA_PLOTQUOTE.GUID = ZCLA_ROOMQUOTE.GUID
AND   ZCLA_HTEDIT.HTEDIT = :HTEDIT
AND   ZCLA_HTEDIT.CLOSEFLAG <> 'Y'
AND   ZCLA_HTEDITLOG.EDITTYPE = 'S'
AND   PROJACTS.PROJACT = :ELEMENT
;
/*
DEALI */
INSERT INTO ZCLA_ELEDITLOG ( EDITID
,      PROJACT
,      UPDTYPE
,      EDITTYPE
,      ROOM
,      ROOMDES
,      GUID
,      GUID2
,      FIELD
,      OLDKEY
,      NEWKEY
,      OLDVALUE
,      NEWVALUE
,      OLDPRICE
,      NEWPRICE
,      ISDELETED
,      WASDELETED
,      INT1
,      INT2
,      TEXT1
,      INT3
,      REAL1
,      REAL2
,      REAL3
,      INT4
,      REAL4
,      KEY1
,      KEY2
)
SELECT :OPENEDIT
,       PROJACTS.PROJACT
,       ZCLA_HTEDITLOG.UPDTYPE
,       ZCLA_HTEDITLOG.EDITTYPE
,       ZCLA_ROOMQUOTE.ROOM
,       ZCLA_ROOMS.ROOMDES
,       ZCLA_ROOMQUOTE.GUID
,       ZCLA_PLOTQUOTE.GUID AS GUID2
,       'DEALI' AS FIELD
,       ZCLA_PLOTQUOTE.DEALI AS OLDKEY
,       ZCLA_ROOMQUOTE.DEALI AS NEWKEY
,       ITOA(ZCLA_PLOTQUOTE.DEALI) AS OLDVALUE
,       ITOA(ZCLA_ROOMQUOTE.DEALI) AS NEWVALUE
,       0 AS OLDPRICE
,       0 AS NEWPRICE
,       ZCLA_ROOMQUOTE.ISDELETED
,       ZCLA_PLOTQUOTE.ISDELETED AS WASDELETED
,       ZCLA_ROOMQUOTE.ORDI
,       ZCLA_ROOMQUOTE.DEALI
,       ZCLA_ROOMQUOTE.PDES
,       ZCLA_PLOTQUOTE.QUANTITY
,       ZCLA_ROOMQUOTE.PRICE
,       ZCLA_ROOMQUOTE.MARKUP
,       ZCLA_ROOMQUOTE.TOTPRICE
,       ZCLA_ROOMQUOTE.FIXID
,       ZCLA_ROOMQUOTE.ZCLA_COST
,       ZCLA_ROOMQUOTE.PROF
,       ZCLA_ROOMQUOTE.KLINE
FROM ZCLA_PLOTQUOTE ?
,    ZCLA_ROOMS
,    ZCLA_HTEDIT
,    ZCLA_HTEDITLOG
,    ZCLA_ROOMQUOTE
,    PROJACTS
WHERE 0=0
AND   ZCLA_HTEDIT.HTEDIT = ZCLA_HTEDITLOG.HTEDIT
AND   ZCLA_HTEDITLOG.GUID = ZCLA_ROOMQUOTE.GUID
AND   ZCLA_HTEDIT.HOUSETYPEID = ZCLA_ROOMQUOTE.HOUSETYPEID
AND   ZCLA_HTEDIT.HOUSETYPEID = PROJACTS.ZCLA_HOUSETYPEID
AND   ZCLA_ROOMS.ROOM = ZCLA_ROOMQUOTE.ROOM
AND   ZCLA_PLOTQUOTE.PROJACT = PROJACTS.PROJACT
AND   ZCLA_PLOTQUOTE.GUID = ZCLA_ROOMQUOTE.GUID
AND   ZCLA_HTEDIT.HTEDIT = :HTEDIT
AND   ZCLA_HTEDIT.CLOSEFLAG <> 'Y'
AND   ZCLA_HTEDITLOG.EDITTYPE = 'S'
AND   PROJACTS.PROJACT = :ELEMENT
;
/*
PDES */
INSERT INTO ZCLA_ELEDITLOG ( EDITID
,      PROJACT
,      UPDTYPE
,      EDITTYPE
,      ROOM
,      ROOMDES
,      GUID
,      GUID2
,      FIELD
,      OLDKEY
,      NEWKEY
,      OLDVALUE
,      NEWVALUE
,      OLDPRICE
,      NEWPRICE
,      ISDELETED
,      WASDELETED
,      INT1
,      INT2
,      TEXT1
,      INT3
,      REAL1
,      REAL2
,      REAL3
,      INT4
,      REAL4
,      KEY1
,      KEY2
)
SELECT :OPENEDIT
,       PROJACTS.PROJACT
,       ZCLA_HTEDITLOG.UPDTYPE
,       ZCLA_HTEDITLOG.EDITTYPE
,       ZCLA_ROOMQUOTE.ROOM
,       ZCLA_ROOMS.ROOMDES
,       ZCLA_ROOMQUOTE.GUID
,       ZCLA_PLOTQUOTE.GUID AS GUID2
,       'PDES' AS FIELD
,       0 AS OLDKEY
,       0 AS NEWKEY
,       ZCLA_PLOTQUOTE.PDES AS OLDVALUE
,       ZCLA_ROOMQUOTE.PDES AS NEWVALUE
,       0 AS OLDPRICE
,       0 AS NEWPRICE
,       ZCLA_ROOMQUOTE.ISDELETED
,       ZCLA_PLOTQUOTE.ISDELETED AS WASDELETED
,       ZCLA_ROOMQUOTE.ORDI
,       ZCLA_ROOMQUOTE.DEALI
,       ZCLA_ROOMQUOTE.PDES
,       ZCLA_PLOTQUOTE.QUANTITY
,       ZCLA_ROOMQUOTE.PRICE
,       ZCLA_ROOMQUOTE.MARKUP
,       ZCLA_ROOMQUOTE.TOTPRICE
,       ZCLA_ROOMQUOTE.FIXID
,       ZCLA_ROOMQUOTE.ZCLA_COST
,       ZCLA_ROOMQUOTE.PROF
,       ZCLA_ROOMQUOTE.KLINE
FROM ZCLA_PLOTQUOTE ?
,    ZCLA_ROOMS
,    ZCLA_HTEDIT
,    ZCLA_HTEDITLOG
,    ZCLA_ROOMQUOTE
,    PROJACTS
WHERE 0=0
AND   ZCLA_HTEDIT.HTEDIT = ZCLA_HTEDITLOG.HTEDIT
AND   ZCLA_HTEDITLOG.GUID = ZCLA_ROOMQUOTE.GUID
AND   ZCLA_HTEDIT.HOUSETYPEID = ZCLA_ROOMQUOTE.HOUSETYPEID
AND   ZCLA_HTEDIT.HOUSETYPEID = PROJACTS.ZCLA_HOUSETYPEID
AND   ZCLA_ROOMS.ROOM = ZCLA_ROOMQUOTE.ROOM
AND   ZCLA_PLOTQUOTE.PROJACT = PROJACTS.PROJACT
AND   ZCLA_PLOTQUOTE.GUID = ZCLA_ROOMQUOTE.GUID
AND   ZCLA_HTEDIT.HTEDIT = :HTEDIT
AND   ZCLA_HTEDIT.CLOSEFLAG <> 'Y'
AND   ZCLA_HTEDITLOG.EDITTYPE = 'S'
AND   PROJACTS.PROJACT = :ELEMENT
;
/*
FIXID */
INSERT INTO ZCLA_ELEDITLOG ( EDITID
,      PROJACT
,      UPDTYPE
,      EDITTYPE
,      ROOM
,      ROOMDES
,      GUID
,      GUID2
,      FIELD
,      OLDKEY
,      NEWKEY
,      OLDVALUE
,      NEWVALUE
,      OLDPRICE
,      NEWPRICE
,      ISDELETED
,      WASDELETED
,      INT1
,      INT2
,      TEXT1
,      INT3
,      REAL1
,      REAL2
,      REAL3
,      INT4
,      REAL4
,      KEY1
,      KEY2
)
SELECT :OPENEDIT
,       PROJACTS.PROJACT
,       ZCLA_HTEDITLOG.UPDTYPE
,       ZCLA_HTEDITLOG.EDITTYPE
,       ZCLA_ROOMQUOTE.ROOM
,       ZCLA_ROOMS.ROOMDES
,       ZCLA_ROOMQUOTE.GUID
,       ZCLA_PLOTQUOTE.GUID AS GUID2
,       'FIXID' AS FIELD
,       ZCLA_PLOTQUOTE.FIXID AS OLDKEY
,       ZCLA_ROOMQUOTE.FIXID AS NEWKEY
,       OLDVALUE.DESCRIPTION  AS OLDVALUE
,       NEWVALUE.DESCRIPTION  AS NEWVALUE
,       0 AS OLDPRICE
,       0 AS NEWPRICE
,       ZCLA_ROOMQUOTE.ISDELETED
,       ZCLA_PLOTQUOTE.ISDELETED AS WASDELETED
,       ZCLA_ROOMQUOTE.ORDI
,       ZCLA_ROOMQUOTE.DEALI
,       ZCLA_ROOMQUOTE.PDES
,       ZCLA_PLOTQUOTE.QUANTITY
,       ZCLA_ROOMQUOTE.PRICE
,       ZCLA_ROOMQUOTE.MARKUP
,       ZCLA_ROOMQUOTE.TOTPRICE
,       ZCLA_ROOMQUOTE.FIXID
,       ZCLA_ROOMQUOTE.ZCLA_COST
,       ZCLA_ROOMQUOTE.PROF
,       ZCLA_ROOMQUOTE.KLINE
FROM ZCLA_PLOTQUOTE ?
,    ZCLA_ROOMS
,    ZCLA_HTEDIT
,    ZCLA_HTEDITLOG
,    ZCLA_ROOMQUOTE
,    PROJACTS
,    ZCLA_FIXES NEWVALUE
,    ZCLA_FIXES OLDVALUE ?
WHERE 0=0
AND   NEWVALUE.FIXID = ZCLA_ROOMQUOTE.FIXID
AND   OLDVALUE.FIXID = ZCLA_PLOTQUOTE.FIXID
AND   ZCLA_HTEDIT.HTEDIT = ZCLA_HTEDITLOG.HTEDIT
AND   ZCLA_HTEDITLOG.GUID = ZCLA_ROOMQUOTE.GUID
AND   ZCLA_HTEDIT.HOUSETYPEID = ZCLA_ROOMQUOTE.HOUSETYPEID
AND   ZCLA_HTEDIT.HOUSETYPEID = PROJACTS.ZCLA_HOUSETYPEID
AND   ZCLA_ROOMS.ROOM = ZCLA_ROOMQUOTE.ROOM
AND   ZCLA_PLOTQUOTE.PROJACT = PROJACTS.PROJACT
AND   ZCLA_PLOTQUOTE.GUID = ZCLA_ROOMQUOTE.GUID
AND   ZCLA_HTEDIT.HTEDIT = :HTEDIT
AND   ZCLA_HTEDIT.CLOSEFLAG <> 'Y'
AND   ZCLA_HTEDITLOG.EDITTYPE = 'S'
AND   PROJACTS.PROJACT = :ELEMENT
;
/*
ZCLA_COST */
INSERT INTO ZCLA_ELEDITLOG ( EDITID
,      PROJACT
,      UPDTYPE
,      EDITTYPE
,      ROOM
,      ROOMDES
,      GUID
,      GUID2
,      FIELD
,      OLDKEY
,      NEWKEY
,      OLDVALUE
,      NEWVALUE
,      OLDPRICE
,      NEWPRICE
,      ISDELETED
,      WASDELETED
,      INT1
,      INT2
,      TEXT1
,      INT3
,      REAL1
,      REAL2
,      REAL3
,      INT4
,      REAL4
,      KEY1
,      KEY2
)
SELECT :OPENEDIT
,       PROJACTS.PROJACT
,       ZCLA_HTEDITLOG.UPDTYPE
,       ZCLA_HTEDITLOG.EDITTYPE
,       ZCLA_ROOMQUOTE.ROOM
,       ZCLA_ROOMS.ROOMDES
,       ZCLA_ROOMQUOTE.GUID
,       ZCLA_PLOTQUOTE.GUID AS GUID2
,       'ZCLA_COST' AS FIELD
,       0 AS OLDKEY
,       0 AS NEWKEY
,       RTOA(ZCLA_PLOTQUOTE.ZCLA_COST,2)  AS OLDVALUE
,       RTOA(ZCLA_ROOMQUOTE.ZCLA_COST,2)  AS NEWVALUE
,       ZCLA_PLOTQUOTE.ZCLA_COST  AS OLDPRICE
,       ZCLA_ROOMQUOTE.ZCLA_COST  AS NEWPRICE
,       ZCLA_ROOMQUOTE.ISDELETED
,       ZCLA_PLOTQUOTE.ISDELETED AS WASDELETED
,       ZCLA_ROOMQUOTE.ORDI
,       ZCLA_ROOMQUOTE.DEALI
,       ZCLA_ROOMQUOTE.PDES
,       ZCLA_PLOTQUOTE.QUANTITY
,       ZCLA_ROOMQUOTE.PRICE
,       ZCLA_ROOMQUOTE.MARKUP
,       ZCLA_ROOMQUOTE.TOTPRICE
,       ZCLA_ROOMQUOTE.FIXID
,       ZCLA_ROOMQUOTE.ZCLA_COST
,       ZCLA_ROOMQUOTE.PROF
,       ZCLA_ROOMQUOTE.KLINE
FROM ZCLA_PLOTQUOTE ?
,    ZCLA_ROOMS
,    ZCLA_HTEDIT
,    ZCLA_HTEDITLOG
,    ZCLA_ROOMQUOTE
,    PROJACTS
WHERE 0=0
AND   ZCLA_HTEDIT.HTEDIT = ZCLA_HTEDITLOG.HTEDIT
AND   ZCLA_HTEDITLOG.GUID = ZCLA_ROOMQUOTE.GUID
AND   ZCLA_HTEDIT.HOUSETYPEID = ZCLA_ROOMQUOTE.HOUSETYPEID
AND   ZCLA_HTEDIT.HOUSETYPEID = PROJACTS.ZCLA_HOUSETYPEID
AND   ZCLA_ROOMS.ROOM = ZCLA_ROOMQUOTE.ROOM
AND   ZCLA_PLOTQUOTE.PROJACT = PROJACTS.PROJACT
AND   ZCLA_PLOTQUOTE.GUID = ZCLA_ROOMQUOTE.GUID
AND   ZCLA_HTEDIT.HTEDIT = :HTEDIT
AND   ZCLA_HTEDIT.CLOSEFLAG <> 'Y'
AND   ZCLA_HTEDITLOG.EDITTYPE = 'S'
AND   PROJACTS.PROJACT = :ELEMENT
;
/*
*************** */
/*
House */
#INCLUDE func/ZCLA_DEBUGUSR
SELECT 'ZCLA_HTEDIT/H' , :ELEMENT , :HTEDIT , :OPENEDIT
FROM DUMMY
WHERE :DEBUG = 1
FORMAT ADDTO :DEBUGFILE
;
INSERT INTO ZCLA_ELEDITLOG ( EDITID
,      PROJACT
,      UPDTYPE
,      EDITTYPE
,      ROOM
,      ROOMDES
,      GUID
,      GUID2
,      FIELD
,      OLDKEY
,      NEWKEY
,      OLDVALUE
,      NEWVALUE
,      OLDPRICE
,      NEWPRICE
,      ISDELETED
,      WASDELETED
)
SELECT :OPENEDIT
,       PROJACTS.PROJACT
,       ZCLA_HTEDITLOG.UPDTYPE
,       ZCLA_HTEDITLOG.EDITTYPE
,       0 AS ROOM
,       '' AS ROOMDES
,       ZCLA_HOUSETYPE.GUID
,       PROJACTS.ZCLA_GUID AS GUID2
,       'ALT' AS FIELD
,       PROJACTS.ZCLA_ALT AS OLDKEY
,       ZCLA_HOUSETYPE.ALT AS NEWKEY
,       OLDVALUE.NAME AS OLDVALUE
,       NEWVALUE.NAME AS NEWVALUE
,       0 AS OLDPRICE
,       0 AS NEWPRICE
,       '' AS ISDELETED
,       '' AS WASDELETED
FROM ZCLA_ALTMANUF OLDVALUE
,    ZCLA_HOUSETYPE
,    PROJACTS
,    ZCLA_HTEDIT
,    ZCLA_HTEDITLOG
,    ZCLA_ALTMANUF NEWVALUE ?
WHERE 0 = 0
AND   ZCLA_HTEDIT.HTEDIT = ZCLA_HTEDITLOG.HTEDIT
AND   PROJACTS.ZCLA_HOUSETYPEID = ZCLA_HTEDIT.HOUSETYPEID
AND   ZCLA_HOUSETYPE.GUID = ZCLA_HTEDITLOG.GUID
AND   OLDVALUE.ALT = PROJACTS.ZCLA_ALT
AND   ZCLA_HOUSETYPE.ALT = NEWVALUE.ALT
AND   PROJACTS.PROJACT = :ELEMENT
AND   ZCLA_HTEDIT.HTEDIT = :HTEDIT
AND   ZCLA_HTEDITLOG.EDITTYPE = 'H'
AND   ZCLA_HTEDIT.CLOSEFLAG <> 'Y'
;
/*
*************** */
/*
Consumer Units */
/*
ROOM */
#INCLUDE func/ZCLA_DEBUGUSR
SELECT 'ZCLA_HTEDIT/C' , :ELEMENT , :HTEDIT , :OPENEDIT
FROM DUMMY
WHERE :DEBUG = 1
FORMAT ADDTO :DEBUGFILE
;
INSERT INTO ZCLA_ELEDITLOG ( EDITID
,      PROJACT
,      UPDTYPE
,      EDITTYPE
,      ROOM
,      ROOMDES
,      GUID
,      GUID2
,      FIELD
,      OLDKEY
,      NEWKEY
,      OLDVALUE
,      NEWVALUE
,      OLDPRICE
,      NEWPRICE
,      ISDELETED
,      WASDELETED
,      INT1
,      INT2 /*GergoM | 04/12/23*/
)
SELECT :OPENEDIT
,       PROJACTS.PROJACT
,       ZCLA_HTEDITLOG.UPDTYPE
,       ZCLA_HTEDITLOG.EDITTYPE
,       NEWVALUE.ROOM
,       NEWVALUE.ROOMDES
,       ZCLA_CONSUMERUNITS.GUID
,       ZCLA_PLOTCU.GUID AS GUID2
,       'ROOM' AS FIELD
,       ZCLA_PLOTCU.ROOM AS OLDKEY
,       ZCLA_CONSUMERUNITS.ROOM AS NEWKEY
,       OLDVALUE.ROOMDES AS OLDVALUE
,       NEWVALUE.ROOMDES AS NEWVALUE
,       0 AS OLDPRICE
,       0 AS NEWPRICE
,       ZCLA_CONSUMERUNITS.ISDELETED
,       ZCLA_PLOTCU.ISDELETED AS WASDELETED
,       ZCLA_CONSUMERUNITS.PART
,       ZCLA_CONSUMERUNITS.ZGEM_TQUANT AS INT2
FROM ZCLA_ROOMS NEWVALUE
,    ZCLA_CONSUMERUNITS
,    ZCLA_HTEDIT
,    ZCLA_HTEDITLOG
,    PROJACTS
,    ZCLA_PLOTCU ?
,    ZCLA_ROOMS OLDVALUE ?
WHERE 0=0
AND   ZCLA_HTEDIT.HTEDIT = ZCLA_HTEDITLOG.HTEDIT
AND   ZCLA_HTEDIT.HOUSETYPEID = PROJACTS.ZCLA_HOUSETYPEID
AND   ZCLA_CONSUMERUNITS.HOUSETYPEID = ZCLA_HTEDIT.HOUSETYPEID
AND   ZCLA_CONSUMERUNITS.GUID = ZCLA_HTEDITLOG.GUID
AND   NEWVALUE.ROOM = ZCLA_CONSUMERUNITS.ROOM
AND   ZCLA_PLOTCU.ROOM = OLDVALUE.ROOM
AND   PROJACTS.PROJACT = ZCLA_PLOTCU.PROJACT
AND   ZCLA_CONSUMERUNITS.GUID = ZCLA_PLOTCU.GUID
AND   ZCLA_HTEDIT.HTEDIT = :HTEDIT
AND   ZCLA_HTEDIT.CLOSEFLAG <> 'Y'
AND   ZCLA_HTEDITLOG.EDITTYPE = 'C'
AND   PROJACTS.PROJACT = :ELEMENT
;
/*
PART */
INSERT INTO ZCLA_ELEDITLOG ( EDITID
,      PROJACT
,      UPDTYPE
,      EDITTYPE
,      ROOM
,      ROOMDES
,      GUID
,      GUID2
,      FIELD
,      OLDKEY
,      NEWKEY
,      OLDVALUE
,      NEWVALUE
,      OLDPRICE
,      NEWPRICE
,      ISDELETED
,      WASDELETED
,      INT1
,      INT2 /*GergoM | 04/12/23*/
)
SELECT :OPENEDIT
,       PROJACTS.PROJACT
,       ZCLA_HTEDITLOG.UPDTYPE
,       ZCLA_HTEDITLOG.EDITTYPE
,       ZCLA_ROOMS.ROOM
,       ZCLA_ROOMS.ROOMDES
,       ZCLA_CONSUMERUNITS.GUID
,       ZCLA_PLOTCU.GUID AS GUID2
,       'PART' AS FIELD
,       ZCLA_PLOTCU.PART AS OLDKEY
,       ZCLA_CONSUMERUNITS.PART AS NEWKEY
,       OLDVALUE.PARTNAME AS OLDVALUE
,       NEWVALUE.PARTNAME AS NEWVALUE
,       0 AS OLDPRICE
,       0 AS NEWPRICE
,       ZCLA_CONSUMERUNITS.ISDELETED
,       ZCLA_PLOTCU.ISDELETED AS WASDELETED
,       ZCLA_CONSUMERUNITS.PART
,       ZCLA_CONSUMERUNITS.ZGEM_TQUANT AS INT2
FROM PART OLDVALUE
,    ZCLA_PLOTCU   ?
,    PART NEWVALUE
,    ZCLA_CONSUMERUNITS
,    ZCLA_HTEDIT
,    ZCLA_HTEDITLOG
,    PROJACTS
,    ZCLA_ROOMS
WHERE 0=0
AND   OLDVALUE.PART = ZCLA_PLOTCU.PART
AND   ZCLA_HTEDIT.HTEDIT = ZCLA_HTEDITLOG.HTEDIT
AND   ZCLA_HTEDIT.HOUSETYPEID = PROJACTS.ZCLA_HOUSETYPEID
AND   ZCLA_CONSUMERUNITS.HOUSETYPEID = ZCLA_HTEDIT.HOUSETYPEID
AND   ZCLA_CONSUMERUNITS.GUID = ZCLA_HTEDITLOG.GUID
AND   NEWVALUE.PART = ZCLA_CONSUMERUNITS.PART
AND   ZCLA_CONSUMERUNITS.ROOM = ZCLA_ROOMS.ROOM
AND   ZCLA_PLOTCU.PROJACT = PROJACTS.PROJACT
AND   ZCLA_PLOTCU.GUID = ZCLA_CONSUMERUNITS.GUID
AND   ZCLA_HTEDIT.HTEDIT = :HTEDIT
AND   ZCLA_HTEDIT.CLOSEFLAG <> 'Y'
AND   ZCLA_HTEDITLOG.EDITTYPE = 'C'
AND   PROJACTS.PROJACT = :ELEMENT
;
/*
GergoM | 04/11/23 |
CQUANT*/
INSERT INTO ZCLA_ELEDITLOG ( EDITID
,      PROJACT
,      UPDTYPE
,      EDITTYPE
,      ROOM
,      ROOMDES
,      GUID
,      GUID2
,      FIELD
,      OLDKEY
,      NEWKEY
,      OLDVALUE
,      NEWVALUE
,      OLDPRICE
,      NEWPRICE
,      ISDELETED
,      WASDELETED
,      INT1
,      INT2
)
SELECT :OPENEDIT
,       PROJACTS.PROJACT
,       ZCLA_HTEDITLOG.UPDTYPE
,       ZCLA_HTEDITLOG.EDITTYPE
,       NEWVALUE.ROOM
,       NEWVALUE.ROOMDES
,       ZCLA_CONSUMERUNITS.GUID
,       ZCLA_PLOTCU.GUID AS GUID2
,       'CQUANT' AS FIELD
,       ZCLA_PLOTCU.ZGEM_TQUANT AS OLDKEY
,       ZCLA_CONSUMERUNITS.ZGEM_TQUANT  AS NEWKEY
,       ITOA(ZCLA_PLOTCU.ZGEM_TQUANT) AS OLDVALUE
,       ITOA(ZCLA_CONSUMERUNITS.ZGEM_TQUANT) AS NEWVALUE
,       0 AS OLDPRICE
,       0 AS NEWPRICE
,       ZCLA_CONSUMERUNITS.ISDELETED
,       ZCLA_PLOTCU.ISDELETED AS WASDELETED
,       ZCLA_CONSUMERUNITS.PART
,       ZCLA_CONSUMERUNITS.ZGEM_TQUANT AS INT2
FROM ZCLA_ROOMS NEWVALUE
,    ZCLA_CONSUMERUNITS
,    ZCLA_HTEDIT
,    ZCLA_HTEDITLOG
,    PROJACTS
,    ZCLA_PLOTCU ?
,    ZCLA_ROOMS OLDVALUE ?
WHERE 0=0
AND   ZCLA_HTEDIT.HTEDIT = ZCLA_HTEDITLOG.HTEDIT
AND   ZCLA_HTEDIT.HOUSETYPEID = PROJACTS.ZCLA_HOUSETYPEID
AND   ZCLA_CONSUMERUNITS.HOUSETYPEID = ZCLA_HTEDIT.HOUSETYPEID
AND   ZCLA_CONSUMERUNITS.GUID = ZCLA_HTEDITLOG.GUID
AND   NEWVALUE.ROOM = ZCLA_CONSUMERUNITS.ROOM
AND   ZCLA_PLOTCU.ROOM = OLDVALUE.ROOM
AND   PROJACTS.PROJACT = ZCLA_PLOTCU.PROJACT
AND   ZCLA_CONSUMERUNITS.GUID = ZCLA_PLOTCU.GUID
AND   ZCLA_HTEDIT.HTEDIT = :HTEDIT
AND   ZCLA_HTEDIT.CLOSEFLAG <> 'Y'
AND   ZCLA_HTEDITLOG.EDITTYPE = 'C'
AND   PROJACTS.PROJACT = :ELEMENT
;
/*
-------------------------------
DELETE */
SUB 5112330 ;
SELECT 'SYNC: DELETE'
FROM DUMMY WHERE :DEBUG = 1
FORMAT ADDTO :DEBUGFILE
;
SELECT 'ZCLA_HTEDIT/D -- RUN', SQL.DATE
FROM DUMMY
FORMAT ADDTO '../../GergoM.txt'
;
/* */
GOSUB 5112331 WHERE :EDITTYPE ='W' ;
GOSUB 5112332 WHERE :EDITTYPE ='A' ;
GOSUB 5112333 WHERE :EDITTYPE ='R' ;
GOSUB 5112334 WHERE :EDITTYPE ='S' ;
/* GOSUB 5112335 WHERE :EDITTYPE ='H' ;
Cannot delete house type */
GOSUB 5112336 WHERE :EDITTYPE ='C' ;
GOSUB 5112337 WHERE :EDITTYPE ='P' ;
RETURN
;
SUB 5112331 ; /*  DELETE ='W' ; */
/*--*/
UPDATE ZCLA_PLOTCUCFG
SET    ISDELETED = 'Y'
WHERE  0=0
AND    GUID = :GUID
AND    CONSUMERUNIT IN (
SELECT CONSUMERUNIT
FROM   ZCLA_PLOTCU
WHERE  PROJACT = :ELEMENT
) ;
RETURN ;
SUB 5112332 ; /*  DELETE ='A' ; */
UPDATE EXTFILES
SET    ISDELETED = 'Y'
WHERE 0=0
AND   TYPE = 'T'
AND   GUID = :GUID
AND   IV = :ELEMENT
;
RETURN ;
SUB 5112333 ; /*  DELETE ='R' ; */
UPDATE ZCLA_PLOTROOMS
SET    ISDELETED = 'Y'
WHERE 0=0
AND   GUID = :GUID
AND   PROJACT = :ELEMENT
;
RETURN ;
SUB 5112334 ; /*  DELETE ='S' ; */
UPDATE ZCLA_PLOTQUOTE
SET    ISDELETED = 'Y'
WHERE 0=0
AND   GUID = :GUID
AND   PROJACT = :ELEMENT
;
RETURN ;
SUB 5112336 ; /*  DELETE ='C' ; */
UPDATE ZCLA_PLOTCU
SET    ISDELETED = 'Y'
WHERE 0=0
AND   GUID = :GUID
AND   PROJACT = :ELEMENT
;
RETURN ;
SUB 5112337 ; /*  DELETE ='P' ; */
UPDATE ZCLA_PLOTCOMPONENT
SET    ISDELETED = 'Y'
WHERE 0=0
AND   GUID = :GUID
AND   PROJACT = :ELEMENT
;
RETURN ;
/*
*************** */
/*
Small Works Parts */
/*
Part */
#INCLUDE func/ZCLA_DEBUGUSR
SELECT 'ZCLA_HTEDIT/K' , :ELEMENT , :HTEDIT , :OPENEDIT
FROM DUMMY
WHERE :DEBUG = 1
FORMAT ADDTO :DEBUGFILE
;
INSERT INTO ZCLA_ELEDITLOG ( EDITID
,      PROJACT
,      UPDTYPE
,      EDITTYPE
,      ROOM
,      ROOMDES
,      GUID
,      GUID2
,      FIELD
,      OLDKEY
,      NEWKEY
,      OLDVALUE
,      NEWVALUE
,      OLDPRICE
,      NEWPRICE
,      ISDELETED
,      WASDELETED
,      INT1
,      INT2
)
SELECT 0 + :OPENEDIT
,      PROJACTS.PROJACT
,      ZCLA_HTEDITLOG.UPDTYPE
,      ZCLA_HTEDITLOG.EDITTYPE
,      ZCLA_ROOMS.ROOM
,      ZCLA_ROOMS.ROOMDES
,      ZCLA_ROOMPARTS.GUID
,      ZCLA_PROJACTPARTS.GUID AS GUID2
,      'PART' AS FIELD
,      ZCLA_PROJACTPARTS.PART AS OLDKEY
,      ZCLA_ROOMPARTS.PART AS NEWKEY
,      OLDVALUE.PARTDES AS OLDVALUE
,      NEWVALUE.PARTDES AS NEWVALUE
,      0 AS OLDPRICE
,      0 AS NEWPRICE
,      ZCLA_ROOMPARTS.ISDELETED
,      ZCLA_PROJACTPARTS.ISDELETED AS WASDELETED
,      ZCLA_ROOMPARTS.PART
,      ZCLA_ROOMPARTS.TQUANT
FROM   ZCLA_ROOMS
,      ZCLA_HTEDITLOG
,      ZCLA_HTEDIT
,      PROJACTS
,      ZCLA_ROOMPARTS
,      PART NEWVALUE
,      PART OLDVALUE
,      ZCLA_PROJACTPARTS ?
WHERE  0=0
AND    ZCLA_HTEDITLOG.HTEDIT     = ZCLA_HTEDIT.HTEDIT
AND    ZCLA_HTEDIT.HOUSETYPEID   = PROJACTS.ZCLA_HOUSETYPEID
AND    ZCLA_HTEDITLOG.GUID       = ZCLA_ROOMPARTS.GUID
AND    ZCLA_ROOMPARTS.PART       = NEWVALUE.PART
AND    ZCLA_ROOMS.ROOM           = ZCLA_ROOMPARTS.ROOM
AND    ZCLA_ROOMS.HOUSETYPEID    = ZCLA_HTEDIT.HOUSETYPEID
AND    OLDVALUE.PART             = ZCLA_PROJACTPARTS.PART
AND    PROJACTS.PROJACT          = ZCLA_PROJACTPARTS.PROJACT
AND    ZCLA_ROOMPARTS.GUID       = ZCLA_PROJACTPARTS.GUID
AND    ZCLA_HTEDITLOG.EDITTYPE   = 'K'
AND    ZCLA_HTEDIT.CLOSEFLAG     <> 'Y'
AND   PROJACTS.PROJACT = :ELEMENT
AND   ZCLA_HTEDIT.HTEDIT = :HTEDIT
;
/*
TQUANT */
INSERT INTO ZCLA_ELEDITLOG ( EDITID
,      PROJACT
,      UPDTYPE
,      EDITTYPE
,      ROOM
,      ROOMDES
,      GUID
,      GUID2
,      FIELD
,      OLDKEY
,      NEWKEY
,      OLDVALUE
,      NEWVALUE
,      OLDPRICE
,      NEWPRICE
,      ISDELETED
,      WASDELETED
,      INT1
,      INT2
)
/*
medatech.si. 27/2/2024 */
SELECT 0 + :OPENEDIT
,      PROJACTS.PROJACT
,      ZCLA_HTEDITLOG.UPDTYPE
,      ZCLA_HTEDITLOG.EDITTYPE
,      ZCLA_ROOMS.ROOM
,      ZCLA_ROOMS.ROOMDES
,      ZCLA_ROOMPARTS.GUID
,      ZCLA_PROJACTPARTS.GUID AS GUID2
,      'TQUANT' AS FIELD
,      ZCLA_PROJACTPARTS.TQUANT AS OLDKEY
,      ZCLA_ROOMPARTS.TQUANT AS NEWKEY
,      ITOA( ZCLA_PROJACTPARTS.TQUANT / 1000 ) AS OLDVALUE
,      ITOA( ZCLA_ROOMPARTS.TQUANT /1000 ) AS NEWVALUE
,      0 AS OLDPRICE
,      0 AS NEWPRICE
,      ZCLA_ROOMPARTS.ISDELETED
,      ZCLA_PROJACTPARTS.ISDELETED AS WASDELETED
,      ZCLA_ROOMPARTS.PART
,      ZCLA_ROOMPARTS.TQUANT
FROM   PART OLDVALUE
,      ZCLA_PROJACTPARTS ?
,      ZCLA_HTEDITLOG
,      ZCLA_HTEDIT
,      PROJACTS
,      ZCLA_ROOMPARTS
,      PART NEWVALUE
,      ZCLA_ROOMS
WHERE  0=0
AND    OLDVALUE.PART             = ZCLA_PROJACTPARTS.PART
AND    ZCLA_HTEDITLOG.HTEDIT     = ZCLA_HTEDIT.HTEDIT
AND    ZCLA_HTEDIT.HOUSETYPEID   = PROJACTS.ZCLA_HOUSETYPEID
AND    ZCLA_PROJACTPARTS.PROJACT = PROJACTS.PROJACT
AND    ZCLA_ROOMPARTS.PART       = NEWVALUE.PART
AND    ZCLA_ROOMPARTS.ROOM       = ZCLA_ROOMS.ROOM
AND    ZCLA_PROJACTPARTS.GUID    = ZCLA_ROOMPARTS.GUID
AND    ZCLA_HTEDITLOG.GUID       = ZCLA_ROOMPARTS.GUID
AND    ZCLA_HTEDIT.HOUSETYPEID   = ZCLA_ROOMS.HOUSETYPEID
AND    ZCLA_HTEDITLOG.EDITTYPE   = 'K'
AND    ZCLA_HTEDIT.CLOSEFLAG     <> 'Y'
AND   PROJACTS.PROJACT = :ELEMENT
AND   ZCLA_HTEDIT.HTEDIT = :HTEDIT
;
/*
QPRICE  */
INSERT INTO ZCLA_ELEDITLOG ( EDITID
,      PROJACT
,      UPDTYPE
,      EDITTYPE
,      ROOM
,      ROOMDES
,      GUID
,      GUID2
,      FIELD
,      OLDKEY
,      NEWKEY
,      OLDVALUE
,      NEWVALUE
,      OLDPRICE
,      NEWPRICE
,      ISDELETED
,      WASDELETED
,      INT1
)
SELECT  :OPENEDIT
,       PROJACTS.PROJACT
,       ZCLA_HTEDITLOG.UPDTYPE
,       ZCLA_HTEDITLOG.EDITTYPE
,       ZCLA_ROOMS.ROOM
,       ZCLA_ROOMS.ROOMDES
,       ZCLA_ROOMPARTS.GUID
,       ZCLA_PROJACTPARTS.GUID AS GUID2
,       'QPRICE' AS FIELD
,       0 AS OLDKEY
,       0 AS NEWKEY
,       RTOA(ZCLA_PROJACTPARTS.QPRICE , 2) AS OLDVALUE
,       RTOA(ZCLA_ROOMPARTS.QPRICE , 2) AS NEWVALUE
,       ZCLA_PROJACTPARTS.QPRICE AS OLDPRICE
,       ZCLA_ROOMPARTS.QPRICE AS NEWPRICE
,     ZCLA_ROOMPARTS.ISDELETED AS ISDELETED
,     ZCLA_PROJACTPARTS.ISDELETED AS WASDELETED
,       ZCLA_ROOMPARTS.PART
FROM PART OLDVALUE
,    PART NEWVALUE
,    ZCLA_PROJACTPARTS ?
,    ZCLA_ROOMPARTS
,    PROJACTS
,    ZCLA_HTEDIT
,    ZCLA_HTEDITLOG
,    ZCLA_ROOMS
WHERE 0=0
AND   OLDVALUE.PART = ZCLA_PROJACTPARTS.PART
AND   ZCLA_HTEDIT.HTEDIT = ZCLA_HTEDITLOG.HTEDIT
AND   ZCLA_HTEDIT.HOUSETYPEID = PROJACTS.ZCLA_HOUSETYPEID
AND   ZCLA_ROOMPARTS.GUID = ZCLA_HTEDITLOG.GUID
AND   NEWVALUE.PART = ZCLA_ROOMPARTS.PART
AND   ZCLA_ROOMPARTS.ROOM = ZCLA_ROOMS.ROOM
AND   ZCLA_PROJACTPARTS.PROJACT = PROJACTS.PROJACT
AND   ZCLA_PROJACTPARTS.GUID = ZCLA_ROOMPARTS.GUID
AND   ZCLA_HTEDIT.CLOSEFLAG <> 'Y'
AND   ZCLA_HTEDITLOG.EDITTYPE = 'K'
AND   PROJACTS.PROJACT = :ELEMENT
AND   ZCLA_HTEDIT.HTEDIT = :HTEDIT
;
/*
TOTPRICE  */
INSERT INTO ZCLA_ELEDITLOG ( EDITID
,      PROJACT
,      UPDTYPE
,      EDITTYPE
,      ROOM
,      ROOMDES
,      GUID
,      GUID2
,      FIELD
,      OLDKEY
,      NEWKEY
,      OLDVALUE
,      NEWVALUE
,      OLDPRICE
,      NEWPRICE
,      ISDELETED
,      WASDELETED
,      INT1
)
SELECT  :OPENEDIT
,       PROJACTS.PROJACT
,       ZCLA_HTEDITLOG.UPDTYPE
,       ZCLA_HTEDITLOG.EDITTYPE
,       ZCLA_ROOMS.ROOM
,       ZCLA_ROOMS.ROOMDES
,       ZCLA_ROOMPARTS.GUID
,       ZCLA_PROJACTPARTS.GUID AS GUID2
,       'TOTPRICE' AS FIELD
,       0 AS OLDKEY
,       0 AS NEWKEY
,       RTOA(ZCLA_PROJACTPARTS.TOTPRICE , 2) AS OLDVALUE
,       RTOA(ZCLA_ROOMPARTS.TOTPRICE , 2) AS NEWVALUE
,       ZCLA_PROJACTPARTS.TOTPRICE AS OLDPRICE
,       ZCLA_ROOMPARTS.TOTPRICE AS NEWPRICE
,     ZCLA_ROOMPARTS.ISDELETED AS ISDELETED
,     ZCLA_PROJACTPARTS.ISDELETED AS WASDELETED
,       ZCLA_ROOMPARTS.PART
FROM PART OLDVALUE
,    PART NEWVALUE
,    ZCLA_PROJACTPARTS ?
,    ZCLA_ROOMPARTS
,    PROJACTS
,    ZCLA_HTEDIT
,    ZCLA_HTEDITLOG
,    ZCLA_ROOMS
WHERE 0=0
AND   OLDVALUE.PART = ZCLA_PROJACTPARTS.PART
AND   ZCLA_HTEDIT.HTEDIT = ZCLA_HTEDITLOG.HTEDIT
AND   ZCLA_HTEDIT.HOUSETYPEID = PROJACTS.ZCLA_HOUSETYPEID
AND   NEWVALUE.PART = ZCLA_ROOMPARTS.PART
AND   ZCLA_ROOMPARTS.ROOM = ZCLA_ROOMS.ROOM
AND   ZCLA_PROJACTPARTS.PROJACT = PROJACTS.PROJACT
AND   ZCLA_PROJACTPARTS.GUID = ZCLA_ROOMPARTS.GUID
AND   ZCLA_HTEDIT.HTEDIT = :HTEDIT
AND   ZCLA_HTEDIT.CLOSEFLAG <> 'Y'
AND   ZCLA_HTEDITLOG.EDITTYPE = 'K'
AND   PROJACTS.PROJACT = :ELEMENT
;
/*
FIXID */
INSERT INTO ZCLA_ELEDITLOG ( EDITID
,      PROJACT
,      UPDTYPE
,      EDITTYPE
,      ROOM
,      ROOMDES
,      GUID
,      GUID2
,      FIELD
,      OLDKEY
,      NEWKEY
,      OLDVALUE
,      NEWVALUE
,      OLDPRICE
,      NEWPRICE
,      ISDELETED
,      WASDELETED
)
/*
medatech.si. 27/2/2024 */
SELECT :OPENEDIT AS EDITID
,      PROJACTS.PROJACT
,      ZCLA_HTEDITLOG.UPDTYPE
,      ZCLA_HTEDITLOG.EDITTYPE
,      ZCLA_ROOMS.ROOM
,      ZCLA_ROOMS.ROOMDES
,      ZCLA_ROOMPARTS.GUID
,      ZCLA_PROJACTPARTS.GUID AS GUID2
,      'FIXID' AS FIELD
,      ZCLA_PROJACTPARTS.FIXID AS OLDKEY
,      ZCLA_ROOMPARTS.FIXID AS NEWKEY
,      OLDFIX.DESCRIPTION AS OLDVALUE
,      NEWFIX.DESCRIPTION AS NEWVALUE
,       0 AS OLDPRICE
,       0 AS NEWPRICE
,      ZCLA_ROOMPARTS.ISDELETED
,      ZCLA_PROJACTPARTS.ISDELETED AS WASDELETED
FROM   ZCLA_PROJACTPARTS ?
,      ZCLA_FIXES NEWFIX
,      ZCLA_HTEDITLOG
,      ZCLA_HTEDIT
,      PROJACTS
,      ZCLA_FIXES OLDFIX
,      ZCLA_ROOMPARTS
,      ZCLA_ROOMS
WHERE  0=0
AND    ZCLA_PROJACTPARTS.FIXID   = NEWFIX.FIXID
AND    ZCLA_HTEDITLOG.HTEDIT     = ZCLA_HTEDIT.HTEDIT
AND    ZCLA_HTEDIT.HOUSETYPEID   = PROJACTS.ZCLA_HOUSETYPEID
AND    OLDFIX.FIXID              = ZCLA_ROOMPARTS.FIXID
AND    ZCLA_ROOMPARTS.ROOM       = ZCLA_ROOMS.ROOM
AND    ZCLA_HTEDITLOG.GUID       = ZCLA_ROOMPARTS.GUID
AND    ZCLA_PROJACTPARTS.GUID    = ZCLA_ROOMPARTS.GUID
AND    ZCLA_HTEDITLOG.EDITTYPE   = 'K'
AND    ZCLA_HTEDIT.CLOSEFLAG     <> 'Y'
AND    PROJACTS.PROJACT          = :ELEMENT
AND    ZCLA_HTEDIT.HTEDIT        = :HTEDIT
;
/*
*************** */
/*
Parts */
/*
TQUANT */
SELECT 'ZCLA_HTEDIT/P' , :ELEMENT , :HTEDIT , :OPENEDIT
FROM DUMMY
WHERE :DEBUG = 1
FORMAT ADDTO :DEBUGFILE
;
INSERT INTO ZCLA_ELEDITLOG ( EDITID
,      PROJACT
,      UPDTYPE
,      EDITTYPE
,      ROOM
,      ROOMDES
,      GUID
,      GUID2
,      FIELD
,      OLDKEY
,      NEWKEY
,      OLDVALUE
,      NEWVALUE
,      OLDPRICE
,      NEWPRICE
,      ISDELETED
,      WASDELETED
,      INT1
,      INT2
)
SELECT :OPENEDIT
,       PROJACTS.PROJACT
,       ZCLA_HTEDITLOG.UPDTYPE
,       ZCLA_HTEDITLOG.EDITTYPE
,       ZCLA_COMPONENT.ROOM
,       ZCLA_ROOMS.ROOMDES
,       ZCLA_COMPONENT.GUID
,       ZCLA_PLOTCOMPONENT.GUID AS GUID2
,       'TQUANT' AS FIELD
,       ZCLA_PLOTCOMPONENT.TQUANT AS OLDKEY
,       ZCLA_COMPONENT.TQUANT AS NEWKEY
,       ITOA(ZCLA_PLOTCOMPONENT.TQUANT / 1000 ) AS OLDVALUE
,       ITOA(ZCLA_COMPONENT.TQUANT / 1000 ) AS NEWVALUE
,       0 AS OLDPRICE
,       0 AS NEWPRICE
,       ZCLA_COMPONENT.ISDELETED
,       ZCLA_PLOTCOMPONENT.ISDELETED AS WASDELETED
,       ZCLA_COMPONENT.PART
,       ZCLA_COMPONENT.TQUANT
FROM ZCLA_PLOTCOMPONENT  ?
,    PROJACTS
,    ZCLA_HTEDITLOG
,    ZCLA_HTEDIT
,    ZCLA_COMPONENT
,    ZCLA_ROOMS
WHERE 0 = 0
AND   ZCLA_HTEDITLOG.HTEDIT = ZCLA_HTEDIT.HTEDIT
AND   ZCLA_HTEDITLOG.GUID = ZCLA_COMPONENT.GUID
AND   PROJACTS.ZCLA_HOUSETYPEID = ZCLA_HTEDIT.HOUSETYPEID
AND   ZCLA_COMPONENT.ROOM = ZCLA_ROOMS.ROOM
AND   ZCLA_PLOTCOMPONENT.PROJACT = PROJACTS.PROJACT
AND   ZCLA_PLOTCOMPONENT.GUID = ZCLA_COMPONENT.GUID
AND   ZCLA_COMPONENT.ROOM > 0
AND   PROJACTS.PROJACT = :ELEMENT
AND   ZCLA_HTEDIT.HTEDIT = :HTEDIT
AND   ZCLA_HTEDITLOG.EDITTYPE = 'P'
AND   ZCLA_HTEDIT.CLOSEFLAG <> 'Y'
;
/*
PART */
INSERT INTO ZCLA_ELEDITLOG ( EDITID
,      PROJACT
,      UPDTYPE
,      EDITTYPE
,      ROOM
,      ROOMDES
,      GUID
,      GUID2
,      FIELD
,      OLDKEY
,      NEWKEY
,      OLDVALUE
,      NEWVALUE
,      OLDPRICE
,      NEWPRICE
,      ISDELETED
,      WASDELETED
,      INT1
,      INT2
)
SELECT :OPENEDIT
,       PROJACTS.PROJACT
,       ZCLA_HTEDITLOG.UPDTYPE
,       ZCLA_HTEDITLOG.EDITTYPE
,       ZCLA_COMPONENT.ROOM
,       ZCLA_ROOMS.ROOMDES
,       ZCLA_COMPONENT.GUID
,       ZCLA_PLOTCOMPONENT.GUID AS GUID2
,       'PART' AS FIELD
,       ZCLA_PLOTCOMPONENT.PART AS OLDKEY
,       ZCLA_COMPONENT.PART AS NEWKEY
,       OLDVALUE.PARTDES AS OLDVALUE
,       NEWVALUE.PARTDES AS NEWVALUE
,       0 AS OLDPRICE
,       0 AS NEWPRICE
,       ZCLA_COMPONENT.ISDELETED
,       ZCLA_PLOTCOMPONENT.ISDELETED AS WASDELETED
,       ZCLA_COMPONENT.PART
,       ZCLA_COMPONENT.TQUANT
FROM PROJACTS
,    ZCLA_HTEDITLOG
,    ZCLA_HTEDIT
,    ZCLA_COMPONENT
,    ZCLA_ROOMS
,    PART NEWVALUE
,    ZCLA_PLOTCOMPONENT ?
,    PART OLDVALUE ?
WHERE 0 = 0
AND   ZCLA_HTEDITLOG.HTEDIT = ZCLA_HTEDIT.HTEDIT
AND   ZCLA_HTEDITLOG.GUID = ZCLA_COMPONENT.GUID
AND   PROJACTS.ZCLA_HOUSETYPEID = ZCLA_HTEDIT.HOUSETYPEID
AND   ZCLA_COMPONENT.ROOM = ZCLA_ROOMS.ROOM
AND   ZCLA_COMPONENT.PART = NEWVALUE.PART
AND   ZCLA_PLOTCOMPONENT.PART = OLDVALUE.PART
AND   PROJACTS.PROJACT = ZCLA_PLOTCOMPONENT.PROJACT
AND   ZCLA_COMPONENT.GUID = ZCLA_PLOTCOMPONENT.GUID
AND   ZCLA_COMPONENT.ROOM > 0
AND   PROJACTS.PROJACT = :ELEMENT
AND   ZCLA_HTEDIT.HTEDIT = :HTEDIT
AND   ZCLA_HTEDITLOG.EDITTYPE = 'P'
AND   ZCLA_HTEDIT.CLOSEFLAG <> 'Y'
;
/*
-------------------------------
INSERT */
SUB 5112310 ;
SELECT 'SYNC: INSERT'
FROM DUMMY WHERE :DEBUG = 1
FORMAT ADDTO :DEBUGFILE
;
/**/
GOSUB 5112311 WHERE :EDITTYPE ='W' ;
GOSUB 240325 WHERE :EDITTYPE = 'O' ;
GOSUB 5112313 WHERE :EDITTYPE ='R' ;
GOSUB 5112318 WHERE :EDITTYPE ='K' ;
GOSUB 5112314 WHERE :EDITTYPE ='S' ;
/* GOSUB 5112315 WHERE :EDITTYPE ='H' ;
cannot insert house type */
GOSUB 5112317 WHERE :EDITTYPE ='P' ;
GOSUB 5112312 WHERE :EDITTYPE ='A' ;
GOSUB 5112316 WHERE :EDITTYPE ='C' ;
GOSUB 240324 WHERE :EDITTYPE = 'E' ;
RETURN
;
/*
:INSERT ='W' ; */
SUB 5112311 ;
GOTO 6112310 WHERE :WASDELETED = 'Y' ;
:CU = 0 ;
SELECT CONSUMERUNIT INTO :CU
FROM   ZCLA_PLOTCU
WHERE  PROJACT  = :ELEMENT
AND    GUID     = :PARENT
;
INSERT INTO ZCLA_PLOTCUCFG ( CONSUMERUNIT , GUID , KLINE , PART ,
DEVICE , WAYNO , RCD )
SELECT :CU , :GUID , :KEY1 , :INT1 , :INT2 , :INT3 , :TEXT1
FROM DUMMY
;
GOTO 6112315 ;
LABEL 6112310 ; /* Was Deleted */
UPDATE ZCLA_PLOTCUCFG
SET    PART         = :INT1
,      DEVICE       = :INT2
,      WAYNO        = :INT3
,      RCD          = :TEXT1
,      ISDELETED    = 'N'
WHERE  0=0
AND    GUID = :GUID
AND    CONSUMERUNIT IN (
SELECT CONSUMERUNIT
FROM   ZCLA_PLOTCU
WHERE  PROJACT = :ELEMENT
) ;
LABEL 6112315 ;
RETURN ;
/*
:INSERT ='A' ; */
/*GergoM | 14/11/23 | EXTFILEDES <-- :TEXT2
GUID <-- :GUID
*/
SUB 5112312 ;
GOTO 6112320 WHERE :WASDELETED = 'Y' ;
/*GergoM | 16/11/23 | hide old attachments*/
UPDATE EXTFILES
SET ISDELETED = 'Y'
WHERE IV = :ELEMENT
AND ZCLA_FILECATEGORY = :INT1
AND GUID <> :GUID
;
INSERT INTO EXTFILES ( IV
,      TYPE
,      ZCLA_FILECATEGORY
,      EXTFILENUM
,      EXTFILENAME
,      EXTFILEDES
,      GUID
,      CURDATE )
SELECT :ELEMENT
,      'T'
,      :INT1
,      :INT2
,      :TEXT1
,      :TEXT2
,      :GUID
,      :DATE1
FROM DUMMY
;
GOTO 6112325 ;
LABEL 6112320 ; /* Was Deleted */
UPDATE EXTFILES
SET    ZCLA_FILECATEGORY    = :INT1
,      EXTFILENUM           = :INT2
,      EXTFILENAME          = :TEXT1
,      EXTFILEDES           = :TEXT2
,      CURDATE              = :DATE1
,      ISDELETED            = 'N'
WHERE  0=0
AND    GUID = :GUID
AND    TYPE = 'T'
AND    IV   = :ELEMENT
;
LABEL 6112325 ;
RETURN ;
/*
:INSERT ='R' ; */
SUB 5112313 ;
GOTO 6112330 WHERE :WASDELETED = 'Y' ;
:COL = 0;
:STYLE = '' ;
SELECT ZCLA_COL , ZCLA_STYLE INTO :COL , :STYLE
FROM PROJACTS
WHERE 0=0
AND   PROJACT = :ELEMENT
;
SELECT 'INSERT ROOM > ', :ELEMENT , :GUID , :ROOM , :INT2 , :COL ,
:STYLE
FROM DUMMY
WHERE :DEBUG = 1
FORMAT ADDTO :DEBUGFILE
;
INSERT INTO ZCLA_PLOTROOMS ( PROJACT , GUID , ROOM , SUP , COL ,
ZCLA_STYLE )
SELECT :ELEMENT , :GUID , :ROOM , :INT2 , :COL , :STYLE
FROM DUMMY
;
GOTO 6112335 ;
LABEL 6112330 ; /* Was Deleted */
UPDATE ZCLA_PLOTROOMS
SET    SUP          = :INT2
,      ISDELETED    = 'N'
WHERE  0=0
AND    GUID         = :GUID
AND    PROJACT      = :ELEMENT
;
LABEL 6112335 ;
RETURN ;
/*
:INSERT ='S' ; */
SUB 5112314 ;
GOTO 6112340 WHERE :WASDELETED = 'Y' ;
INSERT INTO ZCLA_PLOTQUOTE ( PROJACT , GUID , PROF , KLINE , ROOM
,       ORDI
,       DEALI
,       PDES
,       QUANTITY
,       PRICE
,       MARKUP
,       TOTPRICE
,       FIXID
,       ZCLA_COST
)
SELECT :ELEMENT , :GUID , :KEY1 , :KEY2 , :ROOM
,      :INT1
,      :INT2
,      :TEXT1
,      :INT3
,      :REAL1
,      :REAL2
,      :REAL3
,      :INT4
,      :REAL4
FROM DUMMY
;
GOTO 6112345 ;
LABEL 6112340 ; /* Was Deleted */
UPDATE ZCLA_PLOTQUOTE
SET    ORDI        = :INT1
,      DEALI       = :INT2
,      PDES        = :TEXT1
,      QUANTITY    = :INT3
,      PRICE       = :REAL1
,      MARKUP      = :REAL2
,      TOTPRICE    = :REAL3
,      FIXID       = :INT4
,      ZCLA_COST   = :REAL4
,      ISDELETED   = 'N'
WHERE  0=0
AND    GUID = :GUID
AND    ROOM = :ROOM
;
LABEL 6112345 ;
/*
:INSERT ='C' ; */
SUB 5112316 ;
GOTO 6112360 WHERE :WASDELETED = 'Y' ;
/*GergoM | 04/12/23 | :INT2 -> ZGEM_TQUANT*/
INSERT INTO ZCLA_PLOTCU ( PROJACT , GUID , PART , ROOM , ZGEM_TQUANT
)
SELECT :ELEMENT , :GUID , :INT1 , :ROOM, :INT2
FROM DUMMY
;
GOTO 6112365 ;
LABEL 6112360 ; /* Was Deleted */
UPDATE ZCLA_PLOTCU
SET    PART         = :INT1
,      ROOM         =   :ROOM
,      ZGEM_TQUANT  = :INT2
,      ISDELETED    =  'N'
WHERE  0=0
AND    GUID         = :GUID
AND    PROJACT      = :ELEMENT
;
LABEL 6112365 ;
RETURN ;
/*
:INSERT ='P' ; */
SUB 5112317 ;
GOTO 6112370 WHERE :WASDELETED = 'Y' ;
:COL = 0;
:STYLE = '' ;
SELECT COL , ZCLA_STYLE INTO :COL , :STYLE
FROM ZCLA_PLOTROOMS
WHERE 0=0
AND   PROJACT = :ELEMENT
AND   ROOM = :ROOM
;
/*Gergo | 09/11/23 | EXTRA field = 'N'*/
INSERT INTO ZCLA_PLOTCOMPONENT ( PROJACT , GUID , ROOM , PART,
TQUANT , COL , STYLE, EXTRA, ISDELETED )
SELECT :ELEMENT , :GUID , :ROOM , :INT1 , :INT2 , :COL , :STYLE,
'N', 'N'
FROM DUMMY
;
GOTO 6112375 ;
LABEL 6112370 ; /* Was Deleted */
UPDATE ZCLA_PLOTCOMPONENT
SET    PART     = :INT1
,      TQUANT   = :INT2
,      ISDELETED =  'N'
WHERE  0=0
AND    GUID     = :GUID
AND    PROJACT  = :ELEMENT
;
LABEL 6112375 ;
RETURN ;
/*
:INSERT ='K' ; */
SUB 5112318 ;
GOTO 6112380 WHERE :WASDELETED = 'Y' ;
/*Gergo | 09/11/23 | EXTRA field = 'N'*/
INSERT INTO ZCLA_PROJACTPARTS  ( PROJACT , GUID , ROOM , PART,
TQUANT , QPRICE , TOTPRICE , FIXID, ISDELETED )
SELECT :ELEMENT , :GUID , :ROOM , :INT1 , :INT2 , :REAL1 , :REAL2 ,
:NEWKEY
, 'N'
FROM DUMMY
;
GOTO 6112385 ;
LABEL 6112380 ; /* Was Deleted */
UPDATE ZCLA_PROJACTPARTS
SET    PART     = :INT1
,      TQUANT   = :INT2
,      QPRICE   = :REAL1
,      TOTPRICE = :REAL2
,      FIXID    = :INT3
,      ISDELETED =  'N'
WHERE  0=0
AND    GUID     = :GUID
AND    PROJACT  = :ELEMENT
;
LABEL 6112385 ;
RETURN ;
/*
:INSERT ='E' ; */
SUB 240324 ;
INSERT INTO ZCLA_PLOTROOMFIXES ( GUID
, FIX
, PROJACT
, POINT
)
SELECT :GUID
,      :OLDKEY
,      :ELEMENT
,      :NEWPRICE
FROM DUMMY
;
RETURN ;
/*
:INSERT ='O' ; */
SUB 240325 ;
INSERT INTO ZCLA_SMALLWORKSPLOT ( FIX
, PROJACT
, SMALLPOINTS
)
SELECT :OLDKEY
,      :ELEMENT
,      :NEWPRICE
FROM DUMMY
;
RETURN ;
/*
-------------------------------
UPDATE */
SUB 5112320 ;
SELECT 'SYNC: UPDATE'
FROM DUMMY WHERE :DEBUG = 1
FORMAT ADDTO :DEBUGFILE
;
/* */
GOSUB 5112321 WHERE :EDITTYPE ='W' ;
GOSUB 250324 WHERE :EDITTYPE = 'O' ;
GOSUB 5112323 WHERE :EDITTYPE ='R' ;
GOSUB 5112328 WHERE :EDITTYPE ='K' ;
GOSUB 5112324 WHERE :EDITTYPE ='S' ;
GOSUB 5112325 WHERE :EDITTYPE ='H' ;
GOSUB 5112327 WHERE :EDITTYPE ='P' ;
GOSUB 5112322 WHERE :EDITTYPE ='A' ;
GOSUB 5112326 WHERE :EDITTYPE ='C' ;
GOSUB 220324 WHERE :EDITTYPE = 'E' ;
/*--*/
RETURN
;
SUB 5112321 ; /*  UPDATE ='W' ; */
GOSUB 5112340 WHERE :FIELD = 'PART' ;
GOSUB 5112341 WHERE :FIELD = 'RCD' ;
GOSUB 5112342 WHERE :FIELD = 'DEVICE' ;
GOSUB 5112343 WHERE :FIELD = 'WAYNO' ;
RETURN ;
SUB 5112322 ; /*  UPDATE ='A' ; */
GOSUB 5112350 WHERE :FIELD = 'EXTFILENAME' ;
GOSUB 5112351 WHERE :FIELD = 'EXTFILEDES' ;
GOSUB 5112352 WHERE :FIELD = 'ZCLA_FILECATEGORY' ;
RETURN ;
SUB 5112323 ; /*  UPDATE ='R' ; */
GOSUB 5112339 WHERE :FIELD = 'SUP' ;
RETURN ;
SUB 5112324 ; /*  UPDATE ='S' ; */
GOSUB 5112360 WHERE :FIELD = 'QUANTITY' ;
/* GOSUB 5112361 WHERE :FIELD = 'PART' ; */
GOSUB 5112362 WHERE :FIELD = 'PRICE' ;
GOSUB 5112363 WHERE :FIELD = 'MARKUP' ;
GOSUB 5112364 WHERE :FIELD = 'TOTPRICE' ;
GOSUB 5112365 WHERE :FIELD = 'ORDI' ;
GOSUB 5112366 WHERE :FIELD = 'DEALI' ;
GOSUB 5112367 WHERE :FIELD = 'PDES' ;
GOSUB 5112368 WHERE :FIELD = 'FIXID' ;
GOSUB 5112369 WHERE :FIELD = 'ZCLA_COST' ;
RETURN ;
SUB 5112325 ; /*  UPDATE ='H' ; */
GOSUB 5112370 WHERE :FIELD = 'ALT' ;
RETURN ;
SUB 5112326 ; /*  UPDATE ='C' ; */
GOSUB 5112380 WHERE :FIELD = 'ROOM' ;
GOSUB 5112381 WHERE :FIELD = 'PART' ;
/*GergoM | 04/12/23 | CQUANT*/
GOSUB 5112382 WHERE :FIELD = 'CQUANT' ;
RETURN ;
SUB 5112327 ; /*  UPDATE ='P' ; */
GOSUB 5112390 WHERE :FIELD = 'TQUANT' ;
GOSUB 5112391 WHERE :FIELD = 'PART' ;
RETURN ;
SUB 5112328 ; /*  UPDATE ='K' ; */
GOSUB 24012401 WHERE :FIELD = 'PART' ;
GOSUB 24012402 WHERE :FIELD = 'TQUANT' ;
GOSUB 24012403 WHERE :FIELD = 'QPRICE' ;
GOSUB 24012404 WHERE :FIELD = 'TOTPRICE' ;
GOSUB 24012405 WHERE :FIELD = 'FIXID' ;
RETURN ;
/*
-------------------------------
*/
/*  UPDATE ='W' ;  */
SUB 5112340 /* :FIELD = 'PART' */ ;
UPDATE ZCLA_PLOTCUCFG
SET    PART = :NEWKEY
WHERE  0=0
AND    GUID = :GUID
AND    CONSUMERUNIT IN (
SELECT CONSUMERUNIT
FROM   ZCLA_PLOTCU
WHERE  PROJACT = :ELEMENT
);
RETURN ;
SUB 5112341 /* :FIELD = 'RCD' */ ;
UPDATE ZCLA_PLOTCUCFG
SET    RCD = :NEWVALUE
WHERE  0=0
AND    GUID = :GUID
AND    CONSUMERUNIT IN (
SELECT CONSUMERUNIT
FROM   ZCLA_PLOTCU
WHERE  PROJACT = :ELEMENT
);
RETURN ;
SUB 5112342 /* :FIELD = 'DEVICE' */ ;
UPDATE ZCLA_PLOTCUCFG
SET    DEVICE = :NEWKEY
WHERE  0=0
AND    GUID = :GUID
AND    CONSUMERUNIT IN (
SELECT CONSUMERUNIT
FROM   ZCLA_PLOTCU
WHERE  PROJACT = :ELEMENT
);
RETURN ;
SUB 5112343 /* :FIELD = 'WAYNO' */ ;
UPDATE ZCLA_PLOTCUCFG
SET    WAYNO = :NEWKEY
WHERE  0=0
AND    GUID = :GUID
AND    CONSUMERUNIT IN (
SELECT CONSUMERUNIT
FROM   ZCLA_PLOTCU
WHERE  PROJACT = :ELEMENT
);
RETURN ;
/*
-------------------------------
*/
/*  UPDATE ='A' ; */
SUB 5112350 /* :FIELD = 'EXTFILENAME' */ ;
UPDATE EXTFILES
SET    EXTFILENAME = :NEWVALUE
WHERE  0=0
AND    TYPE = 'T'
AND    IV =     :ELEMENT
AND    GUID =   :GUID
;
RETURN ;
SUB 5112351 /* :FIELD = 'EXTFILEDES' */ ;
UPDATE EXTFILES
SET    EXTFILEDES = :NEWVALUE
WHERE  0=0
AND    TYPE = 'T'
AND    IV =     :ELEMENT
AND    GUID =   :GUID
;
RETURN ;
SUB 5112352 /* :FIELD = 'ZCLA_FILECATEGORY' */ ;
UPDATE EXTFILES
SET    ZCLA_FILECATEGORY = :NEWKEY
WHERE  0=0
AND    TYPE = 'T'
AND    IV =     :ELEMENT
AND    GUID =   :GUID
;
RETURN ;
/*
-------------------------------
*/
/*  UPDATE ='R' ; */
SUB 5112339 /* :FIELD = 'SUP' */ ;
UPDATE ZCLA_PLOTROOMS
SET    SUP = :NEWKEY
WHERE  0=0
AND    GUID     = :GUID
AND    PROJACT  = :ELEMENT
;
RETURN ;
/*
-------------------------------
*/
/*  UPDATE ='S' ; */
SUB 5112360 /* :FIELD = 'QUANTITY' */ ;
UPDATE ZCLA_PLOTQUOTE
SET    QUANTITY = :NEWKEY
WHERE  0=0
AND    GUID = :GUID
AND    ROOM IN ( SELECT ROOM
FROM ZCLA_PLOTROOMS
WHERE PROJACT =  :ELEMENT
);
RETURN ;
SUB 5112362 /* :FIELD = 'PRICE' */ ;
UPDATE ZCLA_PLOTQUOTE
SET    PRICE = :NEWPRICE
WHERE  0=0
AND    GUID = :GUID
AND    ROOM IN ( SELECT ROOM
FROM ZCLA_PLOTROOMS
WHERE PROJACT =  :ELEMENT
);
RETURN ;
SUB 5112363 /* :FIELD = 'MARKUP' */ ;
UPDATE ZCLA_PLOTQUOTE
SET    MARKUP = :NEWPRICE
WHERE  0=0
AND    GUID = :GUID
AND    ROOM IN ( SELECT ROOM
FROM ZCLA_PLOTROOMS
WHERE PROJACT =  :ELEMENT
);
RETURN ;
SUB 5112364 /* :FIELD = 'TOTPRICE' */ ;
UPDATE ZCLA_PLOTQUOTE
SET    TOTPRICE = :NEWPRICE
WHERE  0=0
AND    GUID = :GUID
AND    ROOM IN ( SELECT ROOM
FROM ZCLA_PLOTROOMS
WHERE PROJACT =  :ELEMENT
);
RETURN ;
SUB 5112365 /* :FIELD = 'ORDI' */ ;
UPDATE ZCLA_PLOTQUOTE
SET    ORDI = :NEWKEY
WHERE  0=0
AND    GUID = :GUID
AND    ROOM IN ( SELECT ROOM
FROM ZCLA_PLOTROOMS
WHERE PROJACT =  :ELEMENT
);
RETURN ;
SUB 5112366 /* :FIELD = 'DEALI' */ ;
UPDATE ZCLA_PLOTQUOTE
SET    DEALI = :NEWKEY
WHERE  0=0
AND    GUID = :GUID
AND    ROOM IN ( SELECT ROOM
FROM ZCLA_PLOTROOMS
WHERE PROJACT =  :ELEMENT
);
RETURN ;
SUB 5112367 /* :FIELD = 'PDES' */ ;
UPDATE ZCLA_PLOTQUOTE
SET    PDES = :NEWVALUE
WHERE  0=0
AND    GUID = :GUID
AND    ROOM IN ( SELECT ROOM
FROM ZCLA_PLOTROOMS
WHERE PROJACT =  :ELEMENT
);
RETURN ;
SUB 5112368 /* :FIELD = 'FIXID' */ ;
UPDATE ZCLA_PLOTQUOTE
SET    FIXID = :NEWKEY
WHERE  0=0
AND    GUID = :GUID
AND    ROOM IN ( SELECT ROOM
FROM ZCLA_PLOTROOMS
WHERE PROJACT =  :ELEMENT
);
RETURN ;
SUB 5112369 /* :FIELD = 'ZCLA_COST' */ ;
UPDATE ZCLA_PLOTQUOTE
SET    ZCLA_COST = :NEWPRICE
WHERE  0=0
AND    GUID = :GUID
AND    ROOM IN ( SELECT ROOM
FROM ZCLA_PLOTROOMS
WHERE PROJACT =  :ELEMENT
);
RETURN ;
/*
-------------------------------
*/
/*  UPDATE ='H' ; */
SUB 5112370 /* :FIELD = 'ALT' */ ;
UPDATE PROJACTS
SET ZCLA_ALT = :NEWKEY
WHERE 0=0
AND   PROJACT = :ELEMENT
AND   ZCLA_GUID    = :GUID
;
RETURN ;
/*
-------------------------------
*/
/*  UPDATE ='C' ; */
SUB 5112380 /* :FIELD = 'ROOM' */ ;
UPDATE ZCLA_PLOTCU
SET     ROOM = :NEWKEY
WHERE  0=0
AND    GUID = :GUID
AND    PROJACT = :ELEMENT
;
RETURN ;
SUB 5112381 /* :FIELD = 'PART' */ ;
UPDATE ZCLA_PLOTCU
SET     PART = :NEWKEY
WHERE  0=0
AND    GUID = :GUID
AND    PROJACT = :ELEMENT
;
RETURN ;
/*GergoM | 04/12/23 | CQUANT*/
SUB 5112382 /* :FIELD = 'CQUANT' */ ;
UPDATE ZCLA_PLOTCU
SET     ZGEM_TQUANT = :NEWKEY
WHERE  0=0
AND    GUID = :GUID
AND    PROJACT = :ELEMENT
;
RETURN;
/*
-------------------------------
*/
/*  UPDATE ='P' ; */
SUB 5112390 /* :FIELD = 'TQUANT' */ ;
UPDATE ZCLA_PLOTCOMPONENT
SET     TQUANT = :NEWKEY
WHERE  0=0
AND    GUID = :GUID
/*GergoM | 24/11/2023 |
PROJACT = :ELEMENT, because it updated all the component under all
plots
*/
AND PROJACT = :ELEMENT
AND    ROOM IN ( SELECT ROOM
FROM ZCLA_PLOTROOMS
WHERE PROJACT =  :ELEMENT
);
RETURN ;
SUB 5112391 /* :FIELD = 'PART' */ ;
UPDATE ZCLA_PLOTCOMPONENT
SET     PART = :NEWKEY
WHERE  0=0
AND    GUID = :GUID
/*GergoM | 24/11/2023 |
PROJACT = :ELEMENT, because it updated the component under all plots
*/
AND PROJACT = :ELEMENT
AND    ROOM IN ( SELECT ROOM
FROM ZCLA_PLOTROOMS
WHERE PROJACT =  :ELEMENT
);
RETURN ;
/*
-------------------------------
*/
/*  UPDATE ='K' ; */
SUB 24012401 /* :FIELD = 'PART' */ ;
UPDATE ZCLA_PROJACTPARTS
SET     PART = :INT1
WHERE  0=0
AND    GUID = :GUID
AND    PROJACT = :ELEMENT
AND    ROOM = :ROOM
;
RETURN ;
SUB 24012402 /* :FIELD = 'TQUANT' */ ;
UPDATE ZCLA_PROJACTPARTS
SET    TQUANT = :INT2
WHERE  0=0
AND    GUID = :GUID
AND    PROJACT = :ELEMENT
AND    ROOM = :ROOM
;
RETURN ;
SUB 24012403 /* :FIELD = 'QPRICE' */ ;
UPDATE ZCLA_PROJACTPARTS
SET     QPRICE = :REAL1
WHERE  0=0
AND    GUID = :GUID
AND    PROJACT = :ELEMENT
AND    ROOM = :ROOM
;
RETURN ;
SUB 24012404 /* :FIELD = 'TOTPRICE' */ ;
UPDATE ZCLA_PROJACTPARTS
SET     TOTPRICE = :REAL2
WHERE  0=0
AND    GUID = :GUID
AND    PROJACT = :ELEMENT
AND    ROOM = :ROOM
;
RETURN ;
SUB 24012405 /* :FIELD = 'FIXID' */ ;
UPDATE ZCLA_PROJACTPARTS
SET     FIXID = :NEWKEY
WHERE  0=0
AND    GUID    = :GUID
AND    PROJACT = :ELEMENT
AND    ROOM    = :ROOM
;
RETURN ;
/* Subcontract Fix Points */
SUB 220324 ;
UPDATE ZCLA_PLOTROOMFIXES
SET POINT = :NEWPRICE
WHERE  0=0
AND    GUID    = :GUID
AND    FIX     = :OLDKEY
AND    PROJACT = :ELEMENT
;
RETURN ;
/* Small Works Fix Points */
SUB 250324 ;
UPDATE ZCLA_SMALLWORKSPLOT
SET SMALLPOINTS = :NEWPRICE
WHERE  0=0
AND    ROOM    = :ROOM
AND    FIX     = :OLDKEY
AND    PROJACT = :ELEMENT
;
RETURN ;
/* Update aggregate COST/PRICE for the housetype
*/
#INCLUDE func/ZCLA_DEBUGUSR
SELECT 'ZCLA_HOUSETYPE/ZCLA_BUF5' , :HOUSETYPE , SQL.USER
FROM DUMMY
WHERE :DEBUG = 2
FORMAT ADDTO :DEBUGFILE ;
:ZCLA_SUNDRY = :PARTCOST = :LABCOST = :MILEAGECOST = 0.0 ;
:ZCLA_TOTPRICE = :ZCLA_TOTCOST = 0.0 ;
/*
*/
SELECT SUM( ZCLA_SUNDRY + ZCLA_PARTSUM )
,      SUM( ZCLA_LABTOTAL + ZCLA_TRAVEL ) - SUM( ZCLA_NEGPOINT )
,      SUM( ZCLA_MILEAGE )
,      SUM( ZCLA_SUNDRY )
,      SUM(ZCLA_TOTPRICE)
,      SUM(ZCLA_TOTCOST)
INTO :PARTCOST
,    :LABCOST
,    :MILEAGECOST
,    :ZCLA_SUNDRY
,    :ZCLA_TOTPRICE
,    :ZCLA_TOTCOST
FROM ZCLA_HOUSETYPEFIX
WHERE 0=0
AND   HOUSETYPEID = :HOUSETYPE ;
/*
*/
SELECT :PARTCOST
,    :LABCOST
,    :MILEAGECOST
,    :ZCLA_SUNDRY
,    :ZCLA_TOTPRICE
,    :ZCLA_TOTCOST
FROM DUMMY
WHERE :DEBUG = 2
FORMAT ADDTO :DEBUGFILE ;
/*
*/
UPDATE ZCLA_HOUSETYPE
SET PARTCOST = :PARTCOST
,   LABCOST = :LABCOST
,   MILEAGECOST = :MILEAGECOST
,   ZCLA_SUNDRY = :ZCLA_SUNDRY
,   ZCLA_TOTPRICE = :ZCLA_TOTPRICE
,   ZCLA_TOTCOST = :ZCLA_TOTCOST
WHERE 0=0
AND   HOUSETYPEID = :HOUSETYPE ;
/*
Update screen values */
#INCLUDE func/ZCLA_DEBUGUSR
SELECT 'ZCLA_HOUSETYPE/ZCLA_BUF8' , :$.HOUSETYPEID
FROM DUMMY
WHERE :DEBUG = 2
FORMAT ADDTO :DEBUGFILE ;
/*
*/
SELECT PARTCOST , LABCOST , MILEAGECOST
,      ZCLA_MISSINGREPL , ZCLA_SUNDRY
,      ZCLA_TOTCOST , ZCLA_TOTPRICE
FROM ZCLA_HOUSETYPE
WHERE 0=0
AND   HOUSETYPEID = :$.HOUSETYPEID
AND   :DEBUG = 2
FORMAT ADDTO :DEBUGFILE ;
/*
*/
SELECT PARTCOST , LABCOST , MILEAGECOST
,      ZCLA_MISSINGREPL , ZCLA_SUNDRY
,      ZCLA_TOTCOST , ZCLA_TOTPRICE
INTO :$.PARTCOST ,    :$.LABCOST
,    :$.MILEAGECOST , :$.ZCLA_MISSINGREPL
,    :$.ZCLA_SUNDRY
,    :$.ZCLA_TOTCOST , :$.ZCLA_TOTPRICE
FROM ZCLA_HOUSETYPE
WHERE 0=0
AND   HOUSETYPEID = :$.HOUSETYPEID ;
/* */
#INCLUDE func/ZCLA_DEBUGUSR
SELECT 'ZCLA_HOUSETYPE/ZCLA_BUF6'
FROM DUMMY
WHERE :DEBUG = 1
FORMAT ADDTO :DEBUGFILE ;
/* refresh the selected House Type */
/* Link GENERALOAD */
SELECT SQL.TMPFILE
INTO :GEN FROM DUMMY;
LINK GENERALLOAD TO :GEN;
ERRMSG 1 WHERE :RETVAL = 0 ;
:LN = 0 ;
/* insert Proj line */
SELECT MAX(LINE) + 1 INTO :LN FROM GENERALLOAD;
INSERT INTO GENERALLOAD (LINE , RECORDTYPE, KEY1)
SELECT :LN , '1' , ITOA(:$$$.DOC)
FROM DUMMY
;
/* insert Housetype line */
INSERT INTO GENERALLOAD (LINE , RECORDTYPE, KEY1 , DATE1 , TEXT1)
SELECT :LN + 1 , '2' , ITOA(:$$.HOUSETYPEID) , SQL.DATE , SQL.GUID
FROM DUMMY
;
/*
*/
#INCLUDE func/ZCLA_RESETERR
GOTO 50 WHERE :$$$.TYPE = '¬' ;
SELECT 'ZCLA_COPYSITEHT' FROM DUMMY
WHERE :DEBUG = 1 FORMAT ADDTO :DEBUGFILE ;
EXECUTE INTERFACE 'ZCLA_COPYSITEHT', SQL.TMPFILE, '-L', :GEN ;
GOTO 90 ;
LABEL 50 ;
SELECT 'ZCLA_COPYCUSTHT' FROM DUMMY
WHERE :DEBUG = 1 FORMAT ADDTO :DEBUGFILE ;
EXECUTE INTERFACE 'ZCLA_COPYCUSTHT', SQL.TMPFILE, '-L', :GEN ;
LABEL 90;
:i_LOGGEDBY = 'ZCLA_COPYHT';
#INCLUDE func/ZEMG_ERRMSGLOG
SELECT LINE , RECORDTYPE, KEY1 , LOADED , DATE1 , TEXT1
FROM GENERALLOAD
WHERE :DEBUG = 1
FORMAT ADDTO :DEBUGFILE ;
#INCLUDE func/ZCLA_ERRMSG
UNLINK GENERALLOAD ;
GOTO 500 ; /* WHERE :$$$.TYPE = '¬' ; */
/*
Update plots with this house type*/
:SITE = :PL2 = :EL = :LN = 0 ;
SELECT SQL.TMPFILE
INTO :GEN FROM DUMMY;
LINK GENERALLOAD TO :GEN;
ERRMSG 1 WHERE :RETVAL = 0
;
DECLARE @ELSEL CURSOR FOR
SELECT SITE.DOC AS SITE
,   PLOT.PROJACT AS PLOT
,   EL.PROJACT AS EL
FROM PROJACTS EL , PROJACTS PLOT , DOCUMENTS SITE , STEPSTATUSES
WHERE 0 = 0
AND   SITE.DOC > 0
AND   STEPSTATUSES.STEPSTATUS = EL.STEPSTATUS
AND   EL.ZCLA_PLOT = PLOT.PROJACT
AND   PLOT.DOC = SITE.DOC
AND   EL.ZCLA_HOUSETYPEID = :$$.HOUSETYPEID
/* update ONLY elements in initial status */
AND   STEPSTATUSES.INITFLAG = 'Y'
;
OPEN @ELSEL ;
GOTO 9999 WHERE :RETVAL = 0 ;
LABEL 5009;
FETCH @ELSEL INTO :SITE , :PL2, :EL ;
GOTO 6009 WHERE :RETVAL = 0 ;
/*
*/
SELECT MAX(LINE) + 1 INTO :LN FROM GENERALLOAD;
INSERT INTO GENERALLOAD (LINE , RECORDTYPE, KEY1)
SELECT :LN + 0, '1' , ITOA(:SITE)
FROM DUMMY ;
INSERT INTO GENERALLOAD (LINE , RECORDTYPE, KEY1)
SELECT :LN + 1, '2', ITOA(:PL2)
FROM DUMMY;
INSERT INTO GENERALLOAD (LINE , RECORDTYPE, KEY1, DATE1, TEXT1)
SELECT :LN + 2, '3', ITOA(:EL), SQL.DATE , SQL.GUID
FROM DUMMY;
/*
*/
LOOP 5009 ;
LABEL 6009 ;
CLOSE @ELSEL ;
LABEL 9999 ;
/*
*/
#INCLUDE func/ZCLA_RESETERR
EXECUTE INTERFACE 'ZCLA_LOADPLOT', SQL.TMPFILE, '-L', :GEN ;
:i_LOGGEDBY = 'ZCLA_LOADPLOT' ;
#INCLUDE func/ZEMG_ERRMSGLOG
SELECT LINE , RECORDTYPE, KEY1 , LOADED , DATE1 , TEXT1
FROM GENERALLOAD
WHERE :DEBUG = 1
FORMAT ADDTO :DEBUGFILE ;
#INCLUDE func/ZCLA_ERRMSG
UNLINK GENERALLOAD ;
LABEL 500 ;
/* create task with attachments */
/* input: :ZCLA_TL - Team Leader
:ZCLA_PROJ - Projact id (fix)  */
/* GB Jan. 2024 */
/************************************************************/
/**               Raise Task for Attachments               **/
/************************************************************/
#INCLUDE func/ZCLA_DEBUGUSR
SELECT 'ZCLA_FIXACTSTAT/BUF2'
, 'ATTACHMENT TASK'
, 'INPUTS >>'
, :ZCLA_TL
, :ZCLA_PROJ
FROM DUMMY
WHERE :DEBUG = 1
FORMAT ADDTO :DEBUGFILE
;
/*get customer name */
:CUST = 0 ;
:ZCLA_CUSTNAME = '' ;
SELECT CUSTOMERS.CUST , CUSTNAME
INTO :CUST , :ZCLA_CUSTNAME
FROM CUSTOMERS, PROJACTS, DOCUMENTS
WHERE DOCUMENTS.CUST = CUSTOMERS.CUST
AND PROJACTS.DOC = DOCUMENTS.DOC
AND  PROJACTS.PROJACT = :ZCLA_PROJ
AND  PROJACTS.PROJACT > 0
;
/* get doc, fix, commercial group numbers */
:ZCLA_DOCNO = :ZCLA_DOCDES = '' ;
:ZCLA_EL = '' ;
:ZCLA_UGROUP = 0 ;
SELECT DOCNO, PROJACTS.WBS, DOCPROJ.PROJDES, DOCUMENTS.ZGEM_UGROUP
INTO :ZCLA_DOCNO, :ZCLA_EL, :ZCLA_DOCDES, :ZCLA_UGROUP
FROM PROJACTS, DOCUMENTS, DOCPROJ
WHERE PROJACT > 0
AND PROJACT = :ZCLA_PROJ
AND PROJACTS.DOC = DOCUMENTS.DOC
AND DOCPROJ.DOC =  DOCUMENTS.DOC
;
/* Now create the Task */
:TSK = '' ;
SELECT SQL.TMPFILE  INTO :TSK FROM DUMMY ;
LINK GENERALLOAD TO :TSK ;
GOTO 261023 WHERE :RETVAL <= 0 ;
/* get task type */
:ZTYPE = '' ;
SELECT CUSTNOTETYPEDES INTO :ZTYPE
FROM CUSTNOTETYPES
WHERE ZCLA_ATTACHMENTS = 'Y'
;
INSERT INTO GENERALLOAD (LINE, RECORDTYPE, TEXT1, TEXT2, TEXT4,
TEXT3,
/* TEXT14, */
INT1, DATE1,ZGEM_TIME1 ,ZGEM_TIME2,TEXT15, INT3)
SELECT SQL.LINE, '1',
STRCAT('Attachments for - ',:ZCLA_DOCDES,' - ',:ZCLA_EL),
:ZCLA_CUSTNAME , WBS, :ZCLA_DOCNO,  /*:ZCLA_QUESTFCODE ,*/
:ZCLA_UGROUP, STARTDATE, 07:00, 16:00, :ZTYPE, :ZCLA_TL
FROM  PROJACTS
WHERE PROJACT = :ZCLA_PROJ
;
INSERT INTO GENERALLOAD (LINE, RECORDTYPE, INT1, INT2, TEXT8)
SELECT SQL.LINE + 2, '2', EXTFILENUM, :CUST, EXTFILENAME
FROM EXTFILES , PROJACTS, ZCLA_FILECATEGORIES
WHERE 0=0
AND EXTFILES.IV = PROJACTS.ZCLA_PLOT
AND PROJACTS.PROJACT = :ZCLA_PROJ
AND ZCLA_FILECATEGORIES.FILECATEGORY = EXTFILES.ZCLA_FILECATEGORY
AND ZCLA_FILECATEGORIES.APPDISPLAY = 'Y'
;
SELECT 'ZCLA_FIXACTSTAT/BUF2'
, 'ATTACHMENT TASK'
, 'RECORDTYPE 2'
, LINE, RECORDTYPE
FROM GENERALLOAD
WHERE :DEBUG = 1
FORMAT ADDTO :DEBUGFILE
;
GOTO  261023
WHERE NOT EXISTS (SELECT 'X' FROM GENERALLOAD
WHERE RECORDTYPE = '2')
;
/**/
EXECUTE INTERFACE 'ZCLA_RAISEQTASK', SQL.TMPFILE, '-L' , :TSK;
/* Error Logging */
:i_LOGGEDBY = 'ZCLA_RAISEQTASK';
#INCLUDE func/ZEMG_ERRMSGLOG
/*--*/
SELECT 'ATTACHMENT TASK'
, KEY1
, LOADED
, LINE
, RECORDTYPE
, TEXT1
, TEXT2
, TEXT4
, TEXT3 /*, TEXT14 */
, INT1
, DATE1
, ZGEM_TIME1
, ZGEM_TIME2
, TEXT15
, INT2
, INT3
FROM GENERALLOAD
WHERE :DEBUG = 1
FORMAT ADDTO :DEBUGFILE
;
LABEL 261023 ;
UNLINK AND REMOVE GENERALLOAD ;
UNLINK STACK4 ;
LABEL 19042410189;
/**************************
Sum Extra Prices
**************************/
/*
Sums the extra prices into the package price if EXTRA = 'Y'
*/
/*INPUT
:EDITID - INT
*/
/*OUTPUT
:PACKAGEPRICE - REAL
*/
#INCLUDE func/ZCLA_DEBUGUSR
SELECT 'ZCLA_ELEDIT/ZGEM_SUMEXTRAPRICES'
, :EDITID
FROM DUMMY
WHERE :DEBUG = 1
FORMAT ADDTO :DEBUGFILE
;
:PACKAGEPRICE = 0.0;
SELECT SUM(INT2 * ZGEM_EXTRAPRICE)
INTO :PACKAGEPRICE
FROM ZCLA_ELEDITLOG
WHERE EDITID = :EDITID
AND INT2 <> 0
AND ZGEM_EXTRAPRICE <> 0
;
SELECT 'PACKAGEPRICE' ,:PACKAGEPRICE
FROM DUMMY
WHERE :DEBUG = 1
FORMAT ADDTO :DEBUGFILE;
/*--*/
UPDATE ZCLA_ELEDIT
SET PACKAGEPRICE = :PACKAGEPRICE
WHERE EDITID = :EDITID
AND EXTRA = 'Y'
;
/* ZCLA_HOUSETYPE POST UPDATE/INSERT
*/
:DOC = :CUST = :HOUSETYPE = :HOUSETYPEID = :COPIEDFROMTYPE = 0 ;
:ZCLA_COPY = :TYPE = '' ;
SELECT :$.HOUSETYPEID
,   :$.COPIEDFROMTYPE
,   :$.HOUSETYPEID
,   :$.ZCLA_COPY
,   :$$.TYPE
,   :$$.DOC
,   :$$.CUST
INTO :HOUSETYPEID
,   :COPIEDFROMTYPE
,   :HOUSETYPE
,   :ZCLA_COPY
,   :TYPE
,   :DOC
,   :CUST
FROM DUMMY ;
SELECT :HOUSETYPEID , :COPIEDFROMTYPE , :ZCLA_COPY
,   :TYPE
,   :DOC
,   :CUST
FROM DUMMY FORMAT ADDTO :DEBUGFILE ;
/*
Get Split and Markup */
#INCLUDE func/ZCLA_DEBUGUSR
SELECT 'ZCLA_HOUSETYPE/ZCLA_BUF10' , :HOUSETYPE
FROM DUMMY
WHERE :DEBUG = 1
FORMAT ADDTO :DEBUGFILE ;
/*
Use the default or housetype split ? */
:HTSPLIT = 0 ;
SELECT (SUM ( ZCLA_SITEELFIX.SPLIT ) = 100 ? 1 : 0)
INTO :HTSPLIT
FROM ZCLA_SITEELFIX , ZCLA_HOUSETYPE
WHERE 0=0
AND   ZCLA_HOUSETYPE.EL = ZCLA_SITEELFIX.EL
AND   HOUSETYPEID = :HOUSETYPE
/*GergoM | 7/12/23 | DOC = DOC*/
AND   ZCLA_SITEELFIX.DOC = ZCLA_HOUSETYPE.DOC
;
/*
*/
INSERT INTO ZCLA_SPLIT (FIXID , SPLIT)
SELECT  ZCLA_ELEMENTFIX.FIXID
,       0.0 + (:HTSPLIT = 1
?       ( ZCLA_SITEELFIX.SPLIT > 0 ? ( ZCLA_SITEELFIX.SPLIT / 100 )
: 0 )
:       ( ZCLA_ELEMENTFIX.SPLIT > 0 ? ( ZCLA_ELEMENTFIX.SPLIT / 100
) : 0 )
)
FROM   ZCLA_SITEELFIX ?
,      ZCLA_HOUSETYPE
,      ZCLA_ELEMENTFIX
WHERE 0=0
AND   ZCLA_HOUSETYPE.EL = ZCLA_ELEMENTFIX.EL
AND   ZCLA_SITEELFIX.FIXID = ZCLA_ELEMENTFIX.FIXID
AND   ZCLA_SITEELFIX.EL = ZCLA_ELEMENTFIX.EL
AND   ZCLA_HOUSETYPE.HOUSETYPEID = :HOUSETYPE
;
/*
*/
/*
*/
:MARKUP = 0.0 ;
SELECT  1.0 + ((ZCLA_SITEELSPLIT.MARKUP > 0 ?
ZCLA_SITEELSPLIT.MARKUP : ZCLA_PLOTELEMENT.MARKUP) / 100)
INTO    :MARKUP
FROM    ZCLA_SITEELSPLIT ?
,       ZCLA_HOUSETYPE
,       ZCLA_PLOTELEMENT
WHERE 0=0
AND   ZCLA_HOUSETYPE.EL = ZCLA_PLOTELEMENT.EL
AND   ZCLA_SITEELSPLIT.DOC = ZCLA_HOUSETYPE.DOC
AND   ZCLA_SITEELSPLIT.ELTYPE = ZCLA_HOUSETYPE.EL
AND   ZCLA_HOUSETYPE.HOUSETYPEID = :HOUSETYPE
;
/*
*/
SELECT :MARKUP FROM DUMMY
WHERE :DEBUG = 1
FORMAT ADDTO :DEBUGFILE
;
/*
Calculate Uplifts by HOUSETYPE */
#INCLUDE func/ZCLA_DEBUGUSR
SELECT 'ZCLA_HOUSETYPE/RECALC' , :HOUSETYPE
FROM DUMMY
WHERE :DEBUG = 1
FORMAT ADDTO :DEBUGFILE ;
/*
*/
:DOC = :ZCLA_TIMETOSITE =  0 ;
:ZCLA_MILESTOSITE = 0.0 ;
:TEMPKIT = '\0';
/*
*/
SELECT DOC
INTO :DOC
FROM ZCLA_HOUSETYPE
WHERE  HOUSETYPEID = :HOUSETYPE
;
SELECT :DOC , :HOUSETYPE
FROM DUMMY WHERE :DEBUG = 1
FORMAT ADDTO :DEBUGFILE
;
/*
Update fix and house type modifiers */
#INCLUDE ZCLA_FIXES/ZCLA_HOUSETYPE
#INCLUDE ZCLA_CHARACTERISTIC/ZCLA_HOUSETYPE
/*
Is it a project ? */
GOTO 2550 WHERE EXISTS (
SELECT 'x' FROM ZCLA_HOUSETYPE
WHERE 0=0
AND   CORE = 'Y'
AND   HOUSETYPEID = :HOUSETYPE
);
/*
Get site modifiers */
#INCLUDE ZCLA_SITECHARS/ZCLA_HOUSETYPE
#INCLUDE DOCUMENTS_p/ZCLA_HOUSETYPE
/*
Select :TEMPKIT value from siteattribs */
SELECT 'Y'
INTO :TEMPKIT
FROM ZCLA_SITECHARS , ZCLA_SITEATTRIB , ZCLA_SITEPERMITVALS
WHERE 0=0
AND   ZCLA_SITECHARS.CHARID = ZCLA_SITEATTRIB.CHARID
AND   ZCLA_SITEPERMITVALS.VALUEID = ZCLA_SITEATTRIB.VALUEID
AND   ZCLA_SITECHARS.INACTIVE <> 'Y'
AND   ZCLA_SITEATTRIB.DOC  = :DOC
AND   CHARNAME = 'Temp Kit'
AND   VALUE = 'Yes'
;
/*
Set Travel Values for site */
:ZCLA_MILESTOSITE = 0.0;
:ZCLA_TIMETOSITE = 0;
SELECT ZCLA_MILESTOSITE , ZCLA_TIMETOSITE
INTO :ZCLA_MILESTOSITE , :ZCLA_TIMETOSITE
FROM DOCUMENTS
WHERE 0=0
AND   DOCUMENTS.DOC = :DOC ;
/*
*/
GOTO 2590 ;
LABEL 2550 ;
/*
It's a core, so set site modifiers to 1 */
#INCLUDE DOCUMENTS_p/ZCLA_CORETYPE
UPDATE ZCLA_HOUSETYPEFIX
SET   ZCLA_NEGPOINT = 0
,     MOD_ST = 1
WHERE 0=0
AND   ZCLA_HOUSETYPEFIX.HOUSETYPEID = :HOUSETYPE ;
LABEL 2590 ;
/*
Calculate points */
#INCLUDE ZCLA_HOUSETYPE/POINTS
/*
Set Flags */
#INCLUDE ZCLA_HOUSETYPE/ZCLA_BUF9
#INCLUDE PARTARC/ZCLA_HOUSETYPE
/*
Split*/
#INCLUDE ZCLA_HOUSETYPE/ZGEM_BUF11
UPDATE ZCLA_HOUSETYPEFIX
SET ZGEM_DISPLAYFIX = (ZCLA_TOTCOST + ZCLA_TOTPRICE = 0 ? 'N' : 'Y')
WHERE HOUSETYPEID = :HOUSETYPE
;
/*
Reset refresh flag */
UPDATE ZCLA_HOUSETYPE
SET   DOREFRESH = '\0'
,     WASRECALC  = 'Y'
WHERE   HOUSETYPEID = :HOUSETYPE
;
/*
Calculate Uplifts by HOUSETYPE */
#INCLUDE func/ZCLA_DEBUGUSR
SELECT 'ZCLA_HOUSETYPE/ZCLA_BUF2' FROM DUMMY
WHERE :DEBUG = 1
FORMAT ADDTO :DEBUGFILE ;
/*
*/
:DOC = :HOUSETYPE = :ZCLA_TIMETOSITE =  0 ;
:ZCLA_MILESTOSITE = 0.0 ;
SELECT :$$.DOC , :$.HOUSETYPEID
INTO :DOC , :HOUSETYPE
FROM DUMMY ;
SELECT :DOC , :HOUSETYPE
FROM DUMMY
WHERE :DEBUG = 1
FORMAT ADDTO :DEBUGFILE ;
/*
Update fix and house type modifiers */
#INCLUDE ZCLA_FIXES/ZCLA_HOUSETYPE
#INCLUDE ZCLA_CHARACTERISTIC/ZCLA_HOUSETYPE
/*
Is it a project ? */
GOTO 2550 WHERE EXISTS (
SELECT 'x' FROM ZCLA_HOUSETYPE
WHERE 0=0
AND   CORE = 'Y'
AND   HOUSETYPEID = :HOUSETYPE
);
/*
Get site modifiers */
#INCLUDE ZCLA_SITECHARS/ZCLA_HOUSETYPE
#INCLUDE DOCUMENTS_p/ZCLA_HOUSETYPE
/*
Set Travel Values for site */
SELECT ZCLA_MILESTOSITE , ZCLA_TIMETOSITE
INTO :ZCLA_MILESTOSITE , :ZCLA_TIMETOSITE
FROM DOCUMENTS
WHERE 0=0
AND   DOCUMENTS.DOC = :DOC ;
SELECT 'ZCLA_HOUSETYPE/ZCLA_BUF2'
,      :ZCLA_MILESTOSITE
,      :ZCLA_TIMETOSITE
FROM DUMMY
WHERE :DEBUG = 1
FORMAT ADDTO :DEBUGFILE ;
/*
*/
GOTO 2590 ;
LABEL 2550 ;
/*
It's a core, so set site modifiers to 1 */
#INCLUDE DOCUMENTS_p/ZCLA_CORETYPE
UPDATE ZCLA_HOUSETYPEFIX
SET   ZCLA_NEGPOINT = 0
,     MOD_ST = 1
WHERE 0=0
AND   ZCLA_HOUSETYPEFIX.HOUSETYPEID = :HOUSETYPE ;
LABEL 2590 ;
/*
Calculate points */
#INCLUDE ZCLA_HOUSETYPE/ZCLA_BUF4
/*
Refresh House totals */
#INCLUDE ZCLA_HOUSETYPE/ZCLA_BUF5
/* Update aggregate COST/PRICE for the housetype
*/
#INCLUDE func/ZCLA_DEBUGUSR
SELECT 'ZCLA_HOUSETYPE/ZCLA_BUF5' , :HOUSETYPE , SQL.USER
FROM DUMMY
WHERE :DEBUG = 1
FORMAT ADDTO :DEBUGFILE ;
:ZCLA_SUNDRY = :PARTCOST = :LABCOST = :MILEAGECOST = 0.0 ;
:ZCLA_TOTPRICE = :ZCLA_TOTCOST = 0.0 ;
/*
*/
SELECT SUM( ZCLA_SUNDRY + ZCLA_PARTSUM )
,      SUM( ZCLA_LABTOTAL + ZCLA_TRAVEL ) - SUM( ZCLA_NEGPOINT )
,      SUM( ZCLA_MILEAGE )
,      SUM( ZCLA_SUNDRY )
,      SUM(ZCLA_TOTPRICE)
,      SUM(ZCLA_TOTCOST)
INTO :PARTCOST
,    :LABCOST
,    :MILEAGECOST
,    :ZCLA_SUNDRY
,    :ZCLA_TOTPRICE
,    :ZCLA_TOTCOST
FROM ZCLA_HOUSETYPEFIX
WHERE 0=0
AND   HOUSETYPEID = :HOUSETYPE ;
/*
*/
SELECT :PARTCOST
,    :LABCOST
,    :MILEAGECOST
,    :ZCLA_SUNDRY
,    :ZCLA_TOTPRICE
,    :ZCLA_TOTCOST
FROM DUMMY
WHERE :DEBUG = 1
FORMAT ADDTO :DEBUGFILE ;
/*
*/
UPDATE ZCLA_HOUSETYPE
SET PARTCOST = :PARTCOST
,   LABCOST = :LABCOST
,   MILEAGECOST = :MILEAGECOST
,   ZCLA_SUNDRY = :ZCLA_SUNDRY
,   ZCLA_TOTPRICE = :ZCLA_TOTPRICE
,   ZCLA_TOTCOST = :ZCLA_TOTCOST
WHERE 0=0
AND   HOUSETYPEID = :HOUSETYPE ;
/*
Update screen values */
#INCLUDE func/ZCLA_DEBUGUSR
SELECT 'ZCLA_HOUSETYPE/ZCLA_BUF8' , :$.HOUSETYPEID
FROM DUMMY
WHERE :DEBUG = 2
FORMAT ADDTO :DEBUGFILE ;
/*
*/
SELECT PARTCOST , LABCOST , MILEAGECOST
,      ZCLA_MISSINGREPL , ZCLA_SUNDRY
,      ZCLA_TOTCOST , ZCLA_TOTPRICE
FROM ZCLA_HOUSETYPE
WHERE 0=0
AND   HOUSETYPEID = :$.HOUSETYPEID
AND   :DEBUG = 2
FORMAT ADDTO :DEBUGFILE ;
/*
*/
SELECT PARTCOST , LABCOST , MILEAGECOST
,      ZCLA_MISSINGREPL , ZCLA_SUNDRY
,      ZCLA_TOTCOST , ZCLA_TOTPRICE
INTO :$.PARTCOST ,    :$.LABCOST
,    :$.MILEAGECOST , :$.ZCLA_MISSINGREPL
,    :$.ZCLA_SUNDRY
,    :$.ZCLA_TOTCOST , :$.ZCLA_TOTPRICE
FROM ZCLA_HOUSETYPE
WHERE 0=0
AND   HOUSETYPEID = :$.HOUSETYPEID ;
/* */
#INCLUDE func/ZCLA_DEBUGUSR
SELECT 'ZCLA_HOUSETYPE/ZCLA_BUF6'
FROM DUMMY
WHERE :DEBUG = 1
FORMAT ADDTO :DEBUGFILE ;
/* refresh the selected House Type */
/* Link GENERALOAD */
SELECT SQL.TMPFILE
INTO :GEN FROM DUMMY;
LINK GENERALLOAD TO :GEN;
ERRMSG 1 WHERE :RETVAL = 0 ;
:LN = 0 ;
/* insert Proj line */
SELECT MAX(LINE) + 1 INTO :LN FROM GENERALLOAD;
INSERT INTO GENERALLOAD (LINE , RECORDTYPE, KEY1)
SELECT :LN , '1' , ITOA(:$$$.DOC)
FROM DUMMY
;
/* insert Housetype line */
INSERT INTO GENERALLOAD (LINE , RECORDTYPE, KEY1 , DATE1 , TEXT1)
SELECT :LN + 1 , '2' , ITOA(:$$.HOUSETYPEID) , SQL.DATE , SQL.GUID
FROM DUMMY
;
/*
*/
#INCLUDE func/ZCLA_RESETERR
GOTO 50 WHERE :$$$.TYPE = '¬' ;
SELECT 'ZCLA_COPYSITEHT' FROM DUMMY
WHERE :DEBUG = 1 FORMAT ADDTO :DEBUGFILE ;
EXECUTE INTERFACE 'ZCLA_COPYSITEHT', SQL.TMPFILE, '-L', :GEN ;
GOTO 90 ;
LABEL 50 ;
SELECT 'ZCLA_COPYCUSTHT' FROM DUMMY
WHERE :DEBUG = 1 FORMAT ADDTO :DEBUGFILE ;
EXECUTE INTERFACE 'ZCLA_COPYCUSTHT', SQL.TMPFILE, '-L', :GEN ;
LABEL 90;
:i_LOGGEDBY = 'ZCLA_COPYHT';
#INCLUDE func/ZEMG_ERRMSGLOG
SELECT LINE , RECORDTYPE, KEY1 , LOADED , DATE1 , TEXT1
FROM GENERALLOAD
WHERE :DEBUG = 1
FORMAT ADDTO :DEBUGFILE ;
#INCLUDE func/ZCLA_ERRMSG
UNLINK GENERALLOAD ;
GOTO 500 ; /* WHERE :$$$.TYPE = '¬' ; */
/*
Update plots with this house type*/
:SITE = :PL2 = :EL = :LN = 0 ;
SELECT SQL.TMPFILE
INTO :GEN FROM DUMMY;
LINK GENERALLOAD TO :GEN;
ERRMSG 1 WHERE :RETVAL = 0
;
DECLARE @ELSEL CURSOR FOR
SELECT SITE.DOC AS SITE
,   PLOT.PROJACT AS PLOT
,   EL.PROJACT AS EL
FROM PROJACTS EL , PROJACTS PLOT , DOCUMENTS SITE , STEPSTATUSES
WHERE 0 = 0
AND   SITE.DOC > 0
AND   STEPSTATUSES.STEPSTATUS = EL.STEPSTATUS
AND   EL.ZCLA_PLOT = PLOT.PROJACT
AND   PLOT.DOC = SITE.DOC
AND   EL.ZCLA_HOUSETYPEID = :$$.HOUSETYPEID
/* update ONLY elements in initial status */
AND   STEPSTATUSES.INITFLAG = 'Y'
;
OPEN @ELSEL ;
GOTO 9999 WHERE :RETVAL = 0 ;
LABEL 5009;
FETCH @ELSEL INTO :SITE , :PL2, :EL ;
GOTO 6009 WHERE :RETVAL = 0 ;
/*
*/
SELECT MAX(LINE) + 1 INTO :LN FROM GENERALLOAD;
INSERT INTO GENERALLOAD (LINE , RECORDTYPE, KEY1)
SELECT :LN + 0, '1' , ITOA(:SITE)
FROM DUMMY ;
INSERT INTO GENERALLOAD (LINE , RECORDTYPE, KEY1)
SELECT :LN + 1, '2', ITOA(:PL2)
FROM DUMMY;
INSERT INTO GENERALLOAD (LINE , RECORDTYPE, KEY1, DATE1, TEXT1)
SELECT :LN + 2, '3', ITOA(:EL), SQL.DATE , SQL.GUID
FROM DUMMY;
/*
*/
LOOP 5009 ;
LABEL 6009 ;
CLOSE @ELSEL ;
LABEL 9999 ;
/*
*/
#INCLUDE func/ZCLA_RESETERR
EXECUTE INTERFACE 'ZCLA_LOADPLOT', SQL.TMPFILE, '-L', :GEN ;
:i_LOGGEDBY = 'ZCLA_LOADPLOT' ;
#INCLUDE func/ZEMG_ERRMSGLOG
SELECT LINE , RECORDTYPE, KEY1 , LOADED , DATE1 , TEXT1
FROM GENERALLOAD
WHERE :DEBUG = 1
FORMAT ADDTO :DEBUGFILE ;
#INCLUDE func/ZCLA_ERRMSG
UNLINK GENERALLOAD ;
LABEL 500 ;
/*
Skip if there's a open edit */
GOTO 291023 WHERE EXISTS (
SELECT 'x'
FROM ZCLA_HTEDIT
WHERE 0=0
AND   HOUSETYPEID = :HOUSETYPE
AND   CLOSEFLAG <> 'Y'
AND   PACKAGEFLAG = 'Y'
);
/*
Create New edit */
SELECT '>> New edit' , :HOUSETYPE
FROM DUMMY
WHERE :DEBUG = 1
FORMAT ADDTO :DEBUGFILE
;
INSERT INTO ZCLA_HTEDIT
( HOUSETYPEID , OPENEDBY , OPENDATE , PACKAGEFLAG
, OPEN_TOTPRICE , OPEN_TOTCOST  )
SELECT :HOUSETYPE
,      SQL.USER
,      SQL.DATE
,      'Y'
,      ZCLA_TOTPRICE
,      ZCLA_TOTCOST
FROM ZCLA_HOUSETYPE
WHERE HOUSETYPEID = :HOUSETYPE
;
:OPENEDIT = 0 ;
SELECT HTEDIT INTO :OPENEDIT
FROM ZCLA_HTEDIT
WHERE 0=0
AND   HOUSETYPEID = :HOUSETYPE
AND   CLOSEFLAG <> 'Y'
;
/* Create the edit split */
INSERT INTO ZCLA_HTEDITSPLIT (EDITID , HOUSETYPE , FIXID , SPLIT)
SELECT :OPENEDIT
,      :HOUSETYPE
,      ZCLA_FIXES.FIXID
,     (ZCLA_SITEELFIX.SPLIT > 0
?      ZCLA_SITEELFIX.SPLIT : ZCLA_ELEMENTFIX.SPLIT )
FROM  ZCLA_HOUSETYPE
,     ZCLA_SITEELFIX ?
,     ZCLA_ELEMENTFIX
,     ZCLA_FIXES
WHERE  0=0
AND    ZCLA_SITEELFIX.DOC     = ZCLA_HOUSETYPE.DOC
AND    ZCLA_ELEMENTFIX.EL     = ZCLA_HOUSETYPE.EL
AND    ZCLA_HOUSETYPE.EL      = ZCLA_SITEELFIX.EL
AND    ZCLA_ELEMENTFIX.FIXID  = ZCLA_SITEELFIX.FIXID
AND    ZCLA_ELEMENTFIX.FIXID  = ZCLA_FIXES.FIXID
AND    ZCLA_HOUSETYPE.HOUSETYPEID   = :HOUSETYPE
AND    ZCLA_FIXES.ISPAYMENT   = 'Y'
;
LABEL 291023 ;
/*
Skip create log line if one exists */
GOTO 2910231 WHERE EXISTS(
SELECT 'x'
FROM ZCLA_HTEDITLOG , ZCLA_HTEDIT
WHERE 0=0
AND   ZCLA_HTEDIT.HTEDIT = ZCLA_HTEDITLOG.HTEDIT
AND   ZCLA_HTEDITLOG.GUID = :$.GUID
AND   ZCLA_HTEDIT.HOUSETYPEID = :HOUSETYPE
AND   ZCLA_HTEDIT.CLOSEFLAG <> 'Y'
AND   ZCLA_HTEDIT.PACKAGEFLAG = 'Y'
);
/*
Create log line */
INSERT INTO ZCLA_HTEDITLOG
(      HTEDIT
,      GUID
,      UPDTYPE
,      EDITTYPE)
SELECT HTEDIT
,      :$.GUID
,      :UPDTYPE
,      :$.EDITTYPE
FROM ZCLA_HTEDIT
WHERE 0=0
AND   HOUSETYPEID = :HOUSETYPE
AND   CLOSEFLAG <> 'Y'
AND   PACKAGEFLAG = 'Y'
;
GOTO 2910239 ;
LABEL 2910231;
/*
Get current log line update type */
:UPD = '\0' ;
SELECT UPDTYPE INTO :UPD
FROM ZCLA_HTEDITLOG , ZCLA_HTEDIT
WHERE 0=0
AND   ZCLA_HTEDIT.HTEDIT = ZCLA_HTEDITLOG.HTEDIT
AND   ZCLA_HTEDITLOG.GUID = :$.GUID
AND   ZCLA_HTEDIT.HOUSETYPEID = :HOUSETYPE
AND   ZCLA_HTEDIT.CLOSEFLAG <> 'Y'
AND   ZCLA_HTEDIT.PACKAGEFLAG = 'Y'
;
/*
Update current log line update type */
GOSUB 2112310 WHERE :UPD = 'U' AND :UPDTYPE = 'D' ;
GOSUB 2112320 WHERE :UPD = 'I' AND :UPDTYPE = 'D' ;
LABEL 2910239;
/*
*/
SUB 2112310 ;
/*
Update existing edit */
UPDATE ZCLA_HTEDITLOG
SET    UPDTYPE = :UPDTYPE
WHERE 0=0
AND   GUID = :$.GUID
AND   EDITTYPE = :$.EDITTYPE
AND   HTEDIT IN (
SELECT HTEDIT
FROM ZCLA_HTEDIT
WHERE 0=0
AND   HOUSETYPEID = :HOUSETYPE
AND   CLOSEFLAG <> 'Y'
AND   PACKAGEFLAG = 'Y'
);
RETURN ;
/*
*/
SUB 2112320 ;
/*
delete existing edit */
DELETE FROM ZCLA_HTEDITLOG
WHERE 0=0
AND   GUID = :$.GUID
AND   UPDTYPE = :UPD
AND   EDITTYPE = :$.EDITTYPE
AND   HTEDIT IN (
SELECT HTEDIT
FROM ZCLA_HTEDIT
WHERE 0=0
AND   HOUSETYPEID = :HOUSETYPE
AND   CLOSEFLAG <> 'Y'
AND   PACKAGEFLAG = 'Y'
);
RETURN ;
/*
*/
SELECT 'ZCLA_HTEDIT/ZCLA_BUF5'
FROM DUMMY
WHERE :DEBUG = 1
FORMAT ADDTO :DEBUGFILE;
/*
Iterate change @LOG */
/*GergoM |
LOGID - > :LOGID, ORDER BY LOGID ASC |
14/11/23*/
DECLARE @LOG CURSOR FOR
SELECT LOGID
,     EDITID
,     PROJACT
,     UPDTYPE
,     EDITTYPE
,     ROOM
,     ROOMDES
,     GUID
,     GUID2
,     FIELD
,     OLDKEY
,     NEWKEY
,     OLDVALUE
,     NEWVALUE
,     OLDPRICE
,     NEWPRICE
,     ISDELETED
,     WASDELETED
,     INT1
,     INT2
,     INT3
,     INT4
,     TEXT1
,     TEXT2
,     TEXT3
,     REAL1
,     REAL2
,     REAL3
,     INT4
,     REAL4
,     DATE1
,     DATE2
,     KEY1
,     KEY2
,     PARENT
FROM ZCLA_ELEDITLOG
WHERE EDITID = :OPENEDIT
ORDER BY LOGID ASC;
OPEN @LOG ;
GOTO 511239 WHERE :RETVAL = 0 ;
LABEL 511231 ;
:LOGID = 0;
:EDITID = :PROJACT = :ROOM = 0 ;
:UPDTYPE = :EDITTYPE = :ISDELETED = :WASDELETED = '\0' ;
:ROOMDES = :GUID = :GUID2 = :PARENT = :FIELD = '' ;
:OLDKEY = :NEWKEY = 0 ;
:OLDVALUE = :NEWVALUE = '' ;
:OLDPRICE = :NEWPRICE = 0.0 ;
:INT1 = :INT2 = :INT3 = :INT4 = 0 ;
:TEXT1 = :TEXT2 = :TEXT3  = '' ;
:REAL1 = :REAL2 = :REAL3 = :REAL4 = 0.0 ;
:DATE1 = :DATE2 = :KEY1 = :KEY2 = 0 ;
FETCH @LOG INTO :LOGID
,    :EDITID
,    :PROJACT
,    :UPDTYPE
,    :EDITTYPE
,    :ROOM
,    :ROOMDES
,    :GUID
,    :GUID2
,    :FIELD
,    :OLDKEY
,    :NEWKEY
,    :OLDVALUE
,    :NEWVALUE
,    :OLDPRICE
,    :NEWPRICE
,    :ISDELETED
,    :WASDELETED
,    :INT1
,    :INT2
,    :INT3
,    :INT4
,    :TEXT1
,    :TEXT2
,    :TEXT3
,    :REAL1
,    :REAL2
,    :REAL3
,    :INT4
,    :REAL4
,    :DATE1
,    :DATE2
,    :KEY1
,    :KEY2
,    :PARENT
;
GOTO 511238 WHERE :RETVAL = 0
;
SELECT :EDITID
,    :PROJACT
,    :UPDTYPE
,    :EDITTYPE
,    :ROOM
,    :ROOMDES
,    :GUID
,    :GUID2
,    :FIELD
,    :OLDKEY
,    :NEWKEY
,    :OLDVALUE
,    :NEWVALUE
,    :OLDPRICE
,    :NEWPRICE
,    :ISDELETED
,    :WASDELETED
,    :INT1
,    :INT2
,    :INT3
,    :INT4
,    :TEXT1
,    :TEXT2
,    :TEXT3
,    :REAL1
,    :REAL2
,    :REAL3
,    :INT4
,    :REAL4
,    :DATE1
,    :DATE2
,    :KEY1
,    :KEY2
,    :PARENT
FROM DUMMY
WHERE 0=0
AND   :DEBUG = 1
FORMAT ADDTO :DEBUGFILE
;
GOSUB 5112310 WHERE :UPDTYPE = 'I' ;
GOSUB 5112320 WHERE :UPDTYPE = 'U' ;
GOSUB 5112330 WHERE :UPDTYPE = 'D' ;
/*
*/
LOOP 511231 ;
LABEL 511238 ;
CLOSE @LOG ;
LABEL 511239 ;
/*
*/
SELECT 'ZCLA_HTEDIT/ZCLA_BUF5/END'
FROM DUMMY
WHERE :DEBUG = 1
FORMAT ADDTO :DEBUGFILE;
/* ZCLA_HOUSETYPE POST UPDATE/INSERT
*/
:DOC = :CUST = :HOUSETYPE = :HOUSETYPEID = :COPIEDFROMTYPE = 0 ;
:ZCLA_COPY = :TYPE = '' ;
SELECT :$.HOUSETYPEID
,   :$.COPIEDFROMTYPE
,   :$.HOUSETYPEID
,   :$.ZCLA_COPY
,   :$$.TYPE
,   :$$.DOC
,   :$$.CUST
INTO :HOUSETYPEID
,   :COPIEDFROMTYPE
,   :HOUSETYPE
,   :ZCLA_COPY
,   :TYPE
,   :DOC
,   :CUST
FROM DUMMY ;
SELECT :HOUSETYPEID , :COPIEDFROMTYPE , :ZCLA_COPY
,   :TYPE
,   :DOC
,   :CUST
FROM DUMMY FORMAT ADDTO :DEBUGFILE ;
/*
Get Split and Markup */
#INCLUDE func/ZCLA_DEBUGUSR
SELECT 'ZCLA_HOUSETYPE/ZCLA_BUF10' , :HOUSETYPE
FROM DUMMY
WHERE :DEBUG = 1
FORMAT ADDTO :DEBUGFILE ;
/*
Use the default or housetype split ? */
:HTSPLIT = 0 ;
SELECT (SUM ( ZCLA_SITEELFIX.SPLIT ) = 100 ? 1 : 0)
INTO :HTSPLIT
FROM ZCLA_SITEELFIX , ZCLA_HOUSETYPE
WHERE 0=0
AND   ZCLA_HOUSETYPE.EL = ZCLA_SITEELFIX.EL
AND   HOUSETYPEID = :HOUSETYPE
;
INSERT INTO ZCLA_SPLIT (FIXID , SPLIT)
SELECT  ZCLA_ELEMENTFIX.FIXID
,       0.0 + (:HTSPLIT = 1
?       ( ZCLA_SITEELFIX.SPLIT > 0 ? ( ZCLA_SITEELFIX.SPLIT / 100 )
: 0 )
:       ( ZCLA_ELEMENTFIX.SPLIT > 0 ? ( ZCLA_ELEMENTFIX.SPLIT / 100
) : 0 )
)
FROM   ZCLA_SITEELFIX ?
,      ZCLA_HOUSETYPE
,      ZCLA_ELEMENTFIX
WHERE 0=0
AND   ZCLA_HOUSETYPE.EL = ZCLA_ELEMENTFIX.EL
AND   ZCLA_SITEELFIX.FIXID = ZCLA_ELEMENTFIX.FIXID
AND   ZCLA_SITEELFIX.EL = ZCLA_ELEMENTFIX.EL
AND   ZCLA_HOUSETYPE.HOUSETYPEID = :HOUSETYPE
;
/*
*/
/*
*/
:MARKUP = 0.0 ;
SELECT  1.0 + ((ZCLA_SITEELSPLIT.MARKUP > 0 ?
ZCLA_SITEELSPLIT.MARKUP : ZCLA_PLOTELEMENT.MARKUP) / 100)
INTO    :MARKUP
FROM    ZCLA_SITEELSPLIT ?
,       ZCLA_HOUSETYPE
,       ZCLA_PLOTELEMENT
WHERE 0=0
AND   ZCLA_HOUSETYPE.EL = ZCLA_PLOTELEMENT.EL
AND   ZCLA_SITEELSPLIT.DOC = ZCLA_HOUSETYPE.DOC
AND   ZCLA_SITEELSPLIT.ELTYPE = ZCLA_HOUSETYPE.EL
AND   ZCLA_HOUSETYPE.HOUSETYPEID = :HOUSETYPE
;
/*
*/
SELECT :MARKUP FROM DUMMY
WHERE :DEBUG = 1
FORMAT ADDTO :DEBUGFILE
;
/*Add applicant to Apprentice Assess Morn event*/
/*LABELS: 9991, 9992, 9993*/
/*ERRMSG: 8881*/
SELECT :$.CUSTNOTETYPEDES, :$.CURDATE, :$$.NSCUST, :$.ZGEM_EVENTFLAG
FROM DUMMY
FORMAT '../../ZGEM_BUF1.TXT';
/*--*/
GOTO 9991 WHERE :$.ZGEM_EVENTFLAG <> 'Y';
/*Check if event exists on that date*/
/*LINK GENERALLOAD*/
SELECT SQL.TMPFILE INTO :GEM_TMP
FROM DUMMY;
LINK GENERALLOAD TO :GEM_TMP;
ERRMSG 8881 WHERE :RETVAL = 0;
/*--*/
DELETE FROM GENERALLOAD WHERE 0=0;
/*Link the event*/
:TREATMENT = '';
SELECT ITOA(:$.ZGEM_EVENTID) INTO :TREATMENT
FROM DUMMY
;
/*--*/
INSERT INTO GENERALLOAD (LINE, RECORDTYPE, KEY1)
VALUES (1, '1', :TREATMENT);
/*--*/
/*:PARTICIPANT*/
:PARTICIPANT = 0;
:PARTICIPANTTYPE = '';
:NAME = '';
:IV = :$$.NSCUST;
/*--*/
SELECT U.USERB, (U.USERID < 0 ? 'Candidate' : 'Employee'), SNAME
INTO :PARTICIPANT, :PARTICIPANTTYPE, :NAME
FROM JOBCANDIDATES C, USERSB U
WHERE C.JOBCANDIDATE = :IV
AND C.CANDIDATE = U.USERB
;
/*--*/
SELECT :PARTICIPANTTYPE, :NAME, :PARTICIPANT, :TREATMENT
FROM DUMMY
FORMAT ADDTO '../../ZGEM_BUF1.TXT';
/*--*/
INSERT INTO GENERALLOAD (LINE, RECORDTYPE, TEXT1, INT1, TEXT2)
VALUES (2, '2', :PARTICIPANTTYPE, :PARTICIPANT, :$.STATDES);
/*--*/
SELECT LINE, RECORDTYPE, TEXT1, INT1, KEY1
FROM GENERALLOAD
FORMAT ADDTO '../../ZGEM_BUF1.TXT';
/*--*/
EXECUTE INTERFACE 'ZGEM_ADDTOEVENT', SQL.TMPFILE, '-L', :GEM_TMP;
/*--*/
UNLINK GENERALLOAD;
LABEL 9991;
/*-UPDATE THE STATUS OF THE PARTICIPANT-*/
GOTO 8881 WHERE :$.ZGEM_EVENTFLAG <> 'Y';
/*LINK GENERALLOAD*/
SELECT SQL.TMPFILE INTO :GEM_TMP
FROM DUMMY;
LINK GENERALLOAD TO :GEM_TMP;
ERRMSG 8881 WHERE :RETVAL = 0;
/*--*/
DELETE FROM GENERALLOAD WHERE 0=0;
/*Link the event*/
:TREATMENT = '';
SELECT ITOA(:$.ZGEM_EVENTID) INTO :TREATMENT
FROM DUMMY
;
/*--*/
INSERT INTO GENERALLOAD (LINE, RECORDTYPE, KEY1)
VALUES (1, '1', :TREATMENT);
/*--*/
/*:PARTICIPANT*/
:PARTICIPANT = 0;
:PARTICIPANTTYPE = '';
:NAME = '';
:IV = :$$.NSCUST;
/*--*/
SELECT U.USERB, (U.USERID < 0 ? 'Candidate' : 'Employee'),
SNAME
INTO :PARTICIPANT, :PARTICIPANTTYPE, :NAME
FROM JOBCANDIDATES C, USERSB U
WHERE C.JOBCANDIDATE = :IV
AND C.CANDIDATE = U.USERB
;
/*--*/
SELECT ITOA(PARTICIPANTID)
INTO :PARTICIPANTID
FROM ZGEM_PARTICIPANTS
WHERE TREATMENT = ATOI(:TREATMENT)
AND PARTICIPANTTYPE = :PARTICIPANTTYPE
AND PARTICIPANT = :PARTICIPANT
;
/*--*/
SELECT :PARTICIPANTTYPE, :NAME, :PARTICIPANT, :PARTICIPANTID,
:TREATMENT
FROM DUMMY
FORMAT ADDTO '../../ZGEM_BUF1.TXT';
/*--*/
INSERT INTO GENERALLOAD (LINE, RECORDTYPE, TEXT1, KEY1, TEXT2)
VALUES (2, '2', :PARTICIPANTTYPE, :PARTICIPANTID, :$.STATDES);
/*--*/
SELECT LINE, RECORDTYPE, TEXT1, INT1, KEY1, TEXT2
FROM GENERALLOAD
FORMAT ADDTO '../../ZGEM_BUF1.TXT';
/*--*/
EXECUTE INTERFACE 'ZGEM_ADDTOEVENT', SQL.TMPFILE, '-L', :GEM_TMP;
/*--*/
/*--*/
UNLINK GENERALLOAD;
LABEL 8881;
GOTO 8889 WHERE :$.STATDES <> 'Scheduled' AND :$.STATDES <>
'Active';
SELECT 'ACTIVE-SCHEDULED', :$.STATDES
FROM DUMMY
FORMAT ADDTO '../../GergoM.txt'
;
SELECT SQL.TMPFILE INTO :GEM_TMP FROM DUMMY;
/*--*/
LINK GENERALLOAD TO :GEM_TMP;
ERRMSG 8881 WHERE :RETVAL = 0;
/*--*/
DELETE FROM GENERALLOAD WHERE 0=0;
/*--*/
SELECT ITOA(JOB), ITOA(JOBCANDIDATE)
INTO :ZGEM_J_O_B, :JOBCANDIDATE
FROM JOBCANDIDATES J, CUSTNOTES C
WHERE C.IV = J.JOBCANDIDATE
AND C.CUSTNOTE = :$.CUSTNOTE
;
INSERT INTO GENERALLOAD (RECORDTYPE, LINE, KEY1)
VALUES ('1', 1, :ZGEM_J_O_B);
/*---*/
INSERT INTO GENERALLOAD (RECORDTYPE, LINE, KEY1, TEXT1)
VALUES ('2', 2, :JOBCANDIDATE, 'Interviewing');
/*--*/
SELECT RECORDTYPE, LINE, KEY1, TEXT1
FROM GENERALLOAD
FORMAT ADDTO '../../GergoM.txt'
;
/*--*/
EXECUTE INTERFACE 'ZGEM_SETAPPLICANTSTA', SQL.TMPFILE, '-L',
:GEM_TMP;
/*-*/
UNLINK GENERALLOAD;
LABEL 8889;
#INCLUDE GENCUSTNOTES/ZGEM_BUF2 /*Flag to send int invite*/
/*
Ways */
#INCLUDE func/ZCLA_DEBUGUSR
SELECT 'ZCLA_HTEDIT/W' , :ELEMENT , :HTEDIT , :OPENEDIT
FROM DUMMY
WHERE :DEBUG = 1
FORMAT ADDTO :DEBUGFILE
;
INSERT INTO ZCLA_ELEDITLOG ( EDITID
,      PROJACT
,      UPDTYPE
,      EDITTYPE
,      ROOM
,      ROOMDES
,      GUID
,      GUID2
,      FIELD
,      OLDKEY
,      NEWKEY
,      OLDVALUE
,      NEWVALUE
,      OLDPRICE
,      NEWPRICE
,      ISDELETED
,      WASDELETED
,      INT1
,      INT2
,      INT3
,      TEXT1
,      KEY1
,      PARENT
)
SELECT :OPENEDIT
,      PROJACTS.PROJACT
,      ZCLA_HTEDITLOG.UPDTYPE
,      ZCLA_HTEDITLOG.EDITTYPE
,      ZCLA_ROOMS.ROOM
,      ZCLA_ROOMS.ROOMDES
,      ZCLA_CUNITCONFIG.GUID
,      ZCLA_PLOTCUCFG.GUID AS GUID2
,      'PART' AS FIELD
/* GergoM | 14/11/23 | Switch line 43 with 44*/
,      ZCLA_PLOTCUCFG.PART AS OLDKEY
,      ZCLA_CUNITCONFIG.PART AS NEWKEY
,      OLDVALUE.PARTNAME AS OLDVALUE
,      NEWVALUE.PARTNAME AS NEWVALUE
,      0 AS OLDPRICE
,      0 AS NEWPRICE
,      ZCLA_CUNITCONFIG.ISDELETED
,      ZCLA_PLOTCU.ISDELETED AS WASDELETED
,      ZCLA_CUNITCONFIG.PART
,      ZCLA_CUNITCONFIG.DEVICE
,      ZCLA_CUNITCONFIG.WAYNO
,      ZCLA_CUNITCONFIG.RCD
,      ZCLA_CUNITCONFIG.KLINE
,      ZCLA_CONSUMERUNITS.GUID
FROM   ZCLA_PLOTCU
,      ZCLA_PLOTCUCFG ?
,      PART NEWVALUE
,      ZCLA_CONSUMERUNITS
,      ZCLA_HTEDIT
,      ZCLA_HTEDITLOG
,      PROJACTS
,      ZCLA_CUNITCONFIG
,      PART OLDVALUE ?
,      ZCLA_ROOMS
WHERE        (0 = 0)
AND   ZCLA_CUNITCONFIG.PART = NEWVALUE.PART
AND   ZCLA_PLOTCUCFG.PART = OLDVALUE.PART
AND   ZCLA_PLOTCU.GUID = ZCLA_CONSUMERUNITS.GUID
AND   ZCLA_HTEDIT.HOUSETYPEID = PROJACTS.ZCLA_HOUSETYPEID
AND   ZCLA_PLOTCU.CONSUMERUNIT = ZCLA_PLOTCUCFG.CONSUMERUNIT
AND   ZCLA_HTEDIT.HTEDIT = ZCLA_HTEDITLOG.HTEDIT
AND   ZCLA_HTEDITLOG.GUID = ZCLA_CUNITCONFIG.GUID
AND   ZCLA_CONSUMERUNITS.CONSUMERUNIT =
ZCLA_CUNITCONFIG.CONSUMERUNIT
AND   ZCLA_CONSUMERUNITS.ROOM = ZCLA_ROOMS.ROOM
AND   ZCLA_PLOTCU.PROJACT = PROJACTS.PROJACT
AND   ZCLA_PLOTCUCFG.GUID = ZCLA_CUNITCONFIG.GUID
AND   (PROJACTS.PROJACT = :ELEMENT)
AND   (ZCLA_HTEDIT.HTEDIT = :HTEDIT)
AND   (ZCLA_HTEDITLOG.EDITTYPE = 'W')
AND   (ZCLA_HTEDIT.CLOSEFLAG <> 'Y')
;
/*
RCD */
INSERT INTO ZCLA_ELEDITLOG ( EDITID
,      PROJACT
,      UPDTYPE
,      EDITTYPE
,      ROOM
,      ROOMDES
,      GUID
,      GUID2
,      FIELD
,      OLDKEY
,      NEWKEY
,      OLDVALUE
,      NEWVALUE
,      OLDPRICE
,      NEWPRICE
,      ISDELETED
,      WASDELETED
,      INT1
,      INT2
,      INT3
,      TEXT1
,      KEY1
,      PARENT
)
SELECT :OPENEDIT
,      PROJACTS.PROJACT
,      ZCLA_HTEDITLOG.UPDTYPE
,      ZCLA_HTEDITLOG.EDITTYPE
,      ZCLA_PLOTCU.ROOM
,      ZCLA_ROOMS.ROOMDES
,      ZCLA_CUNITCONFIG.GUID
,      ZCLA_PLOTCUCFG.GUID AS GUID2
,      'RCD' AS FIELD
,      0 AS OLDKEY
,      0 AS NEWKEY
,      ZCLA_PLOTCUCFG.RCD  AS OLDVALUE
,      ZCLA_CUNITCONFIG.RCD AS NEWVALUE
,      0 AS OLDPRICE
,      0 AS NEWPRICE
,      ZCLA_CUNITCONFIG.ISDELETED
,      ZCLA_PLOTCU.ISDELETED AS WASDELETED
,      ZCLA_CUNITCONFIG.PART
,      ZCLA_CUNITCONFIG.DEVICE
,      ZCLA_CUNITCONFIG.WAYNO
,      ZCLA_CUNITCONFIG.RCD
,      ZCLA_CUNITCONFIG.KLINE
,      ZCLA_CONSUMERUNITS.GUID
FROM ZCLA_CUNITCONFIG
,      ZCLA_HTEDITLOG
,      ZCLA_HTEDIT
,      PROJACTS
,      ZCLA_ROOMS
,      ZCLA_PLOTCUCFG ?
,      ZCLA_PLOTCU
,      ZCLA_CONSUMERUNITS
WHERE 0 = 0
AND   ZCLA_PLOTCU.GUID = ZCLA_CONSUMERUNITS.GUID
AND   ZCLA_CONSUMERUNITS.CONSUMERUNIT =
ZCLA_CUNITCONFIG.CONSUMERUNIT
AND   ZCLA_HTEDITLOG.HTEDIT = ZCLA_HTEDIT.HTEDIT
AND   ZCLA_HTEDIT.HOUSETYPEID = PROJACTS.ZCLA_HOUSETYPEID
AND   ZCLA_CUNITCONFIG.GUID = ZCLA_HTEDITLOG.GUID
AND   ZCLA_PLOTCUCFG.CONSUMERUNIT = ZCLA_PLOTCU.CONSUMERUNIT
AND   ZCLA_CONSUMERUNITS.ROOM = ZCLA_ROOMS.ROOM
AND   PROJACTS.PROJACT = ZCLA_PLOTCU.PROJACT
AND   ZCLA_CUNITCONFIG.GUID = ZCLA_PLOTCUCFG.GUID
AND   PROJACTS.PROJACT = :ELEMENT
AND   ZCLA_HTEDIT.HTEDIT = :HTEDIT
AND   ZCLA_HTEDITLOG.EDITTYPE = 'W'
AND   ZCLA_HTEDIT.CLOSEFLAG <> 'Y'
;
/*
Device */
INSERT INTO ZCLA_ELEDITLOG ( EDITID
,      PROJACT
,      UPDTYPE
,      EDITTYPE
,      ROOM
,      ROOMDES
,      GUID
,      GUID2
,      FIELD
,      OLDKEY
,      NEWKEY
,      OLDVALUE
,      NEWVALUE
,      OLDPRICE
,      NEWPRICE
,      ISDELETED
,      WASDELETED
,      INT1
,      INT2
,      INT3
,      TEXT1
,      KEY1
,      PARENT
)
SELECT :OPENEDIT
,      PROJACTS.PROJACT
,      ZCLA_HTEDITLOG.UPDTYPE
,      ZCLA_HTEDITLOG.EDITTYPE
,      ZCLA_PLOTCU.ROOM
,      ZCLA_ROOMS.ROOMDES
,      ZCLA_CUNITCONFIG.GUID
,      ZCLA_PLOTCUCFG.GUID AS GUID2
,      'DEVICE' AS FIELD
,      ZCLA_PLOTCUCFG.DEVICE AS OLDKEY
,      ZCLA_CUNITCONFIG.DEVICE AS NEWKEY
,      OLDVALUE.DEVICEDES AS OLDVALUE
,      NEWVALUE.DEVICEDES AS NEWVALUE
,      0 AS OLDPRICE
,      0 AS NEWPRICE
,      ZCLA_CUNITCONFIG.ISDELETED
,      ZCLA_PLOTCU.ISDELETED AS WASDELETED
,      ZCLA_CUNITCONFIG.PART
,      ZCLA_CUNITCONFIG.DEVICE
,      ZCLA_CUNITCONFIG.WAYNO
,      ZCLA_CUNITCONFIG.RCD
,      ZCLA_CUNITCONFIG.KLINE
,      ZCLA_CONSUMERUNITS.GUID
FROM ZCLA_CUCONFIG_OPT NEWVALUE ?
,      ZCLA_ROOMS
,      ZCLA_PLOTCUCFG ?
,      ZCLA_PLOTCU
,      ZCLA_CUNITCONFIG
,      ZCLA_HTEDITLOG
,      ZCLA_HTEDIT
,      PROJACTS
,      ZCLA_CUCONFIG_OPT OLDVALUE
,      ZCLA_CONSUMERUNITS
WHERE 0 = 0
AND   ZCLA_PLOTCU.GUID = ZCLA_CONSUMERUNITS.GUID
AND   ZCLA_CONSUMERUNITS.CONSUMERUNIT =
ZCLA_CUNITCONFIG.CONSUMERUNIT
AND   ZCLA_ROOMS.ROOM = ZCLA_CONSUMERUNITS.ROOM
/*GergoM | 14/11/23 | OLDVALUE*/
AND   OLDVALUE.DEVICE = ZCLA_PLOTCUCFG.DEVICE
AND   ZCLA_HTEDITLOG.HTEDIT = ZCLA_HTEDIT.HTEDIT
AND   ZCLA_HTEDIT.HOUSETYPEID = PROJACTS.ZCLA_HOUSETYPEID
AND   ZCLA_CUNITCONFIG.GUID = ZCLA_HTEDITLOG.GUID
/*GergoM | 14/11/23 | NEWVALUE*/
AND   ZCLA_CUNITCONFIG.DEVICE = NEWVALUE.DEVICE
AND   ZCLA_PLOTCU.PROJACT = PROJACTS.PROJACT
AND   ZCLA_PLOTCUCFG.GUID = ZCLA_CUNITCONFIG.GUID
AND   PROJACTS.PROJACT = :ELEMENT
AND   ZCLA_HTEDIT.HTEDIT = :HTEDIT
AND   ZCLA_HTEDITLOG.EDITTYPE = 'W'
AND   ZCLA_HTEDIT.CLOSEFLAG <> 'Y'
;
/*
Way number */
INSERT INTO ZCLA_ELEDITLOG ( EDITID
,      PROJACT
,      UPDTYPE
,      EDITTYPE
,      ROOM
,      ROOMDES
,      GUID
,      GUID2
,      FIELD
,      OLDKEY
,      NEWKEY
,      OLDVALUE
,      NEWVALUE
,      OLDPRICE
,      NEWPRICE
,      ISDELETED
,      WASDELETED
,      INT1
,      INT2
,      INT3
,      TEXT1
,      KEY1
,      PARENT
)
SELECT :OPENEDIT
,      PROJACTS.PROJACT
,      ZCLA_HTEDITLOG.UPDTYPE
,      ZCLA_HTEDITLOG.EDITTYPE
,      ZCLA_PLOTCU.ROOM
,      ZCLA_ROOMS.ROOMDES
,      ZCLA_CUNITCONFIG.GUID
,      ZCLA_PLOTCUCFG.GUID AS GUID2
,      'WAYNO' AS FIELD
,      ZCLA_PLOTCUCFG.WAYNO AS OLDKEY
,      ZCLA_CUNITCONFIG.WAYNO AS NEWKEY
,      ITOA(ZCLA_PLOTCUCFG.WAYNO) AS OLDVALUE
,      ITOA(ZCLA_CUNITCONFIG.WAYNO) AS NEWVALUE
,      0 AS OLDPRICE
,      0 AS NEWPRICE
,      ZCLA_CUNITCONFIG.ISDELETED
,      ZCLA_PLOTCU.ISDELETED AS WASDELETED
,      ZCLA_CUNITCONFIG.PART
,      ZCLA_CUNITCONFIG.DEVICE
,      ZCLA_CUNITCONFIG.WAYNO
,      ZCLA_CUNITCONFIG.RCD
,      ZCLA_CUNITCONFIG.KLINE
,      ZCLA_CONSUMERUNITS.GUID
FROM ZCLA_CUNITCONFIG
,      ZCLA_HTEDITLOG
,      ZCLA_HTEDIT
,      PROJACTS
,      ZCLA_ROOMS
,      ZCLA_PLOTCUCFG ?
,      ZCLA_PLOTCU
,      ZCLA_CONSUMERUNITS
WHERE 0 = 0
AND   ZCLA_PLOTCU.GUID = ZCLA_CONSUMERUNITS.GUID
AND   ZCLA_CONSUMERUNITS.CONSUMERUNIT =
ZCLA_CUNITCONFIG.CONSUMERUNIT
AND   ZCLA_HTEDITLOG.HTEDIT = ZCLA_HTEDIT.HTEDIT
AND   ZCLA_HTEDIT.HOUSETYPEID = PROJACTS.ZCLA_HOUSETYPEID
AND   ZCLA_CUNITCONFIG.GUID = ZCLA_HTEDITLOG.GUID
AND   ZCLA_PLOTCUCFG.CONSUMERUNIT = ZCLA_PLOTCU.CONSUMERUNIT
AND   ZCLA_CONSUMERUNITS.ROOM = ZCLA_ROOMS.ROOM
AND   PROJACTS.PROJACT = ZCLA_PLOTCU.PROJACT
AND   ZCLA_CUNITCONFIG.GUID = ZCLA_PLOTCUCFG.GUID
AND   PROJACTS.PROJACT = :ELEMENT
AND   ZCLA_HTEDIT.HTEDIT = :HTEDIT
AND   ZCLA_HTEDITLOG.EDITTYPE = 'W'
AND   ZCLA_HTEDIT.CLOSEFLAG <> 'Y'
;
/*
*************** */
/*
Attachments */
/*
EXTFILENAME */
#INCLUDE func/ZCLA_DEBUGUSR
SELECT 'ZCLA_HTEDIT/A' , :ELEMENT , :HTEDIT , :OPENEDIT
FROM DUMMY
WHERE :DEBUG = 1
FORMAT ADDTO :DEBUGFILE
;
/*GergoM | 14/11/23 | TEXT2 <- HTFILES.EXTFILEDES*/
INSERT INTO ZCLA_ELEDITLOG ( EDITID
,      PROJACT
,      UPDTYPE
,      EDITTYPE
,      ROOM
,      ROOMDES
,      GUID
,      GUID2
,      FIELD
,      OLDKEY
,      NEWKEY
,      OLDVALUE
,      NEWVALUE
,      OLDPRICE
,      NEWPRICE
,      ISDELETED
,      WASDELETED
,      INT1
,      INT2
,      TEXT1
,      TEXT2
,      DATE1
)
SELECT :OPENEDIT
,       PROJACTS.PROJACT
,       ZCLA_HTEDITLOG.UPDTYPE
,       ZCLA_HTEDITLOG.EDITTYPE
,       0 AS ROOM
,       '' AS ROOMDES
,       HTFILES.GUID
,       PLFILES.GUID AS GUID2
,       'EXTFILENAME' AS FIELD
,       0 AS OLDKEY
,       0 AS NEWKEY
,       PLFILES.EXTFILENAME AS OLDVALUE
,       HTFILES.EXTFILENAME AS NEWVALUE
,       0 AS OLDPRICE
,       0 AS NEWPRICE
,       PLFILES.ISDELETED
,       HTFILES.ISDELETED AS WASDELETED
,       HTFILES.ZCLA_FILECATEGORY
,       HTFILES.EXTFILENUM
,       HTFILES.EXTFILENAME
,       HTFILES.EXTFILEDES
,       HTFILES.CURDATE
FROM ZCLA_HTEDITLOG
,    ZCLA_HTEDIT
,    PROJACTS
,    EXTFILES HTFILES
,    EXTFILES PLFILES ?
WHERE 0 = 0
AND   ZCLA_HTEDITLOG.HTEDIT = ZCLA_HTEDIT.HTEDIT
AND   ZCLA_HTEDIT.HOUSETYPEID = PROJACTS.ZCLA_HOUSETYPEID
AND   ZCLA_HTEDITLOG.GUID = HTFILES.GUID
AND   PROJACTS.PROJACT = PLFILES.IV
AND   HTFILES.GUID = PLFILES.GUID
AND   PROJACTS.PROJACT = :ELEMENT
AND   ZCLA_HTEDIT.HTEDIT = :HTEDIT
AND   ZCLA_HTEDITLOG.EDITTYPE = 'A'
AND   ZCLA_HTEDIT.CLOSEFLAG <> 'Y'
AND   HTFILES.TYPE = '¬'
AND   PLFILES.TYPE = 'T'
;
/*
EXTFILEDES */
INSERT INTO ZCLA_ELEDITLOG ( EDITID
,      PROJACT
,      UPDTYPE
,      EDITTYPE
,      ROOM
,      ROOMDES
,      GUID
,      GUID2
,      FIELD
,      OLDKEY
,      NEWKEY
,      OLDVALUE
,      NEWVALUE
,      OLDPRICE
,      NEWPRICE
,      ISDELETED
,      WASDELETED
,      INT1
,      INT2
,      TEXT1
,      TEXT2
,      DATE1
)
SELECT :OPENEDIT
,       PROJACTS.PROJACT
,       ZCLA_HTEDITLOG.UPDTYPE
,       ZCLA_HTEDITLOG.EDITTYPE
,       0 AS ROOM
,       '' AS ROOMDES
,       HTFILES.GUID
,       PLFILES.GUID AS GUID2
,       'EXTFILEDES' AS FIELD
,       0 AS OLDKEY
,       0 AS NEWKEY
,       PLFILES.EXTFILEDES AS OLDVALUE
,       HTFILES.EXTFILEDES AS NEWVALUE
,       0 AS OLDPRICE
,       0 AS NEWPRICE
,       HTFILES.ISDELETED
,       PLFILES.ISDELETED AS WASDELETED
,       HTFILES.ZCLA_FILECATEGORY
,       HTFILES.EXTFILENUM
,       HTFILES.EXTFILENAME
,       HTFILES.EXTFILEDES
,       HTFILES.CURDATE
FROM ZCLA_HTEDITLOG
,    ZCLA_HTEDIT
,    PROJACTS
,    EXTFILES HTFILES
,    EXTFILES PLFILES ?
WHERE 0 = 0
AND   ZCLA_HTEDITLOG.HTEDIT = ZCLA_HTEDIT.HTEDIT
AND   ZCLA_HTEDIT.HOUSETYPEID = PROJACTS.ZCLA_HOUSETYPEID
AND   ZCLA_HTEDITLOG.GUID = HTFILES.GUID
AND   PROJACTS.PROJACT = PLFILES.IV
AND   HTFILES.GUID = PLFILES.GUID
AND   PROJACTS.PROJACT = :ELEMENT
AND   ZCLA_HTEDIT.HTEDIT = :HTEDIT
AND   ZCLA_HTEDITLOG.EDITTYPE = 'A'
AND   ZCLA_HTEDIT.CLOSEFLAG <> 'Y'
AND   HTFILES.TYPE = '¬'
AND   PLFILES.TYPE = 'T'
;
/*
ZCLA_FILECATEGORY */
INSERT INTO ZCLA_ELEDITLOG ( EDITID
,      PROJACT
,      UPDTYPE
,      EDITTYPE
,      ROOM
,      ROOMDES
,      GUID
,      GUID2
,      FIELD
,      OLDKEY
,      NEWKEY
,      OLDVALUE
,      NEWVALUE
,      OLDPRICE
,      NEWPRICE
,      ISDELETED
,      WASDELETED
,      INT1
,      INT2
,      TEXT1
,      TEXT2
,      DATE1
)
SELECT :OPENEDIT
,       PROJACTS.PROJACT
,       ZCLA_HTEDITLOG.UPDTYPE
,       ZCLA_HTEDITLOG.EDITTYPE
,       0 AS ROOM
,       '' AS ROOMDES
,       HTFILES.GUID
,       PLFILES.GUID AS GUID2
,       'ZCLA_FILECATEGORY' AS FIELD
,       PLFILES.ZCLA_FILECATEGORY AS OLDKEY
,       HTFILES.ZCLA_FILECATEGORY AS NEWKEY
,       OLDVALUE.CATEGORYNAME AS OLDVALUE
,       NEWVALUE.CATEGORYNAME AS NEWVALUE
,       0 AS OLDPRICE
,       0 AS NEWPRICE
,       HTFILES.ISDELETED
,       PLFILES.ISDELETED AS WASDELETED
,       HTFILES.ZCLA_FILECATEGORY
,       HTFILES.EXTFILENUM
,       HTFILES.EXTFILENAME
,       HTFILES.EXTFILEDES
,       HTFILES.CURDATE
FROM ZCLA_HTEDITLOG
,    ZCLA_HTEDIT
,    PROJACTS
,    EXTFILES HTFILES
,    EXTFILES PLFILES ?
,    ZCLA_FILECATEGORIES OLDVALUE ?
,    ZCLA_FILECATEGORIES NEWVALUE
WHERE 0 = 0
AND   HTFILES.ZCLA_FILECATEGORY = NEWVALUE.FILECATEGORY
AND   PLFILES.ZCLA_FILECATEGORY = OLDVALUE.FILECATEGORY
AND   ZCLA_HTEDITLOG.HTEDIT = ZCLA_HTEDIT.HTEDIT
AND   ZCLA_HTEDIT.HOUSETYPEID = PROJACTS.ZCLA_HOUSETYPEID
AND   ZCLA_HTEDITLOG.GUID = HTFILES.GUID
AND   PROJACTS.PROJACT = PLFILES.IV
AND   HTFILES.GUID = PLFILES.GUID
AND   PROJACTS.PROJACT = :ELEMENT
AND   ZCLA_HTEDIT.HTEDIT = :HTEDIT
AND   ZCLA_HTEDITLOG.EDITTYPE = 'A'
AND   ZCLA_HTEDIT.CLOSEFLAG <> 'Y'
AND   HTFILES.TYPE = '¬'
AND   PLFILES.TYPE = 'T'
;
/*
*************** */
/*
House */
#INCLUDE func/ZCLA_DEBUGUSR
SELECT 'ZCLA_HTEDIT/H' , :ELEMENT , :HTEDIT , :OPENEDIT
FROM DUMMY
WHERE :DEBUG = 1
FORMAT ADDTO :DEBUGFILE
;
INSERT INTO ZCLA_ELEDITLOG ( EDITID
,      PROJACT
,      UPDTYPE
,      EDITTYPE
,      ROOM
,      ROOMDES
,      GUID
,      GUID2
,      FIELD
,      OLDKEY
,      NEWKEY
,      OLDVALUE
,      NEWVALUE
,      OLDPRICE
,      NEWPRICE
,      ISDELETED
,      WASDELETED
)
SELECT :OPENEDIT
,       PROJACTS.PROJACT
,       ZCLA_HTEDITLOG.UPDTYPE
,       ZCLA_HTEDITLOG.EDITTYPE
,       0 AS ROOM
,       '' AS ROOMDES
,       ZCLA_HOUSETYPE.GUID
,       PROJACTS.ZCLA_GUID AS GUID2
,       'ALT' AS FIELD
,       PROJACTS.ZCLA_ALT AS OLDKEY
,       ZCLA_HOUSETYPE.ALT AS NEWKEY
,       OLDVALUE.NAME AS OLDVALUE
,       NEWVALUE.NAME AS NEWVALUE
,       0 AS OLDPRICE
,       0 AS NEWPRICE
,       '' AS ISDELETED
,       '' AS WASDELETED
FROM ZCLA_ALTMANUF OLDVALUE
,    ZCLA_HOUSETYPE
,    PROJACTS
,    ZCLA_HTEDIT
,    ZCLA_HTEDITLOG
,    ZCLA_ALTMANUF NEWVALUE ?
WHERE 0 = 0
AND   ZCLA_HTEDIT.HTEDIT = ZCLA_HTEDITLOG.HTEDIT
AND   PROJACTS.ZCLA_HOUSETYPEID = ZCLA_HTEDIT.HOUSETYPEID
AND   ZCLA_HOUSETYPE.GUID = ZCLA_HTEDITLOG.GUID
AND   OLDVALUE.ALT = PROJACTS.ZCLA_ALT
AND   ZCLA_HOUSETYPE.ALT = NEWVALUE.ALT
AND   PROJACTS.PROJACT = :ELEMENT
AND   ZCLA_HTEDIT.HTEDIT = :HTEDIT
AND   ZCLA_HTEDITLOG.EDITTYPE = 'H'
AND   ZCLA_HTEDIT.CLOSEFLAG <> 'Y'
;
/*
*************** */
/*
Consumer Units */
/*
ROOM */
#INCLUDE func/ZCLA_DEBUGUSR
SELECT 'ZCLA_HTEDIT/C' , :ELEMENT , :HTEDIT , :OPENEDIT
FROM DUMMY
WHERE :DEBUG = 1
FORMAT ADDTO :DEBUGFILE
;
INSERT INTO ZCLA_ELEDITLOG ( EDITID
,      PROJACT
,      UPDTYPE
,      EDITTYPE
,      ROOM
,      ROOMDES
,      GUID
,      GUID2
,      FIELD
,      OLDKEY
,      NEWKEY
,      OLDVALUE
,      NEWVALUE
,      OLDPRICE
,      NEWPRICE
,      ISDELETED
,      WASDELETED
,      INT1
,      INT2 /*GergoM | 04/12/23*/
)
SELECT :OPENEDIT
,       PROJACTS.PROJACT
,       ZCLA_HTEDITLOG.UPDTYPE
,       ZCLA_HTEDITLOG.EDITTYPE
,       NEWVALUE.ROOM
,       NEWVALUE.ROOMDES
,       ZCLA_CONSUMERUNITS.GUID
,       ZCLA_PLOTCU.GUID AS GUID2
,       'ROOM' AS FIELD
,       ZCLA_PLOTCU.ROOM AS OLDKEY
,       ZCLA_CONSUMERUNITS.ROOM AS NEWKEY
,       OLDVALUE.ROOMDES AS OLDVALUE
,       NEWVALUE.ROOMDES AS NEWVALUE
,       0 AS OLDPRICE
,       0 AS NEWPRICE
,       ZCLA_CONSUMERUNITS.ISDELETED
,       ZCLA_PLOTCU.ISDELETED AS WASDELETED
,       ZCLA_CONSUMERUNITS.PART
,       ZCLA_CONSUMERUNITS.ZGEM_TQUANT AS INT2
FROM ZCLA_ROOMS NEWVALUE
,    ZCLA_CONSUMERUNITS
,    ZCLA_HTEDIT
,    ZCLA_HTEDITLOG
,    PROJACTS
,    ZCLA_PLOTCU ?
,    ZCLA_ROOMS OLDVALUE ?
WHERE 0=0
AND   ZCLA_HTEDIT.HTEDIT = ZCLA_HTEDITLOG.HTEDIT
AND   ZCLA_HTEDIT.HOUSETYPEID = PROJACTS.ZCLA_HOUSETYPEID
AND   ZCLA_CONSUMERUNITS.HOUSETYPEID = ZCLA_HTEDIT.HOUSETYPEID
AND   ZCLA_CONSUMERUNITS.GUID = ZCLA_HTEDITLOG.GUID
AND   NEWVALUE.ROOM = ZCLA_CONSUMERUNITS.ROOM
AND   ZCLA_PLOTCU.ROOM = OLDVALUE.ROOM
AND   PROJACTS.PROJACT = ZCLA_PLOTCU.PROJACT
AND   ZCLA_CONSUMERUNITS.GUID = ZCLA_PLOTCU.GUID
AND   ZCLA_HTEDIT.HTEDIT = :HTEDIT
AND   ZCLA_HTEDIT.CLOSEFLAG <> 'Y'
AND   ZCLA_HTEDITLOG.EDITTYPE = 'C'
AND   PROJACTS.PROJACT = :ELEMENT
;
/*
PART */
INSERT INTO ZCLA_ELEDITLOG ( EDITID
,      PROJACT
,      UPDTYPE
,      EDITTYPE
,      ROOM
,      ROOMDES
,      GUID
,      GUID2
,      FIELD
,      OLDKEY
,      NEWKEY
,      OLDVALUE
,      NEWVALUE
,      OLDPRICE
,      NEWPRICE
,      ISDELETED
,      WASDELETED
,      INT1
,      INT2 /*GergoM | 04/12/23*/
)
SELECT :OPENEDIT
,       PROJACTS.PROJACT
,       ZCLA_HTEDITLOG.UPDTYPE
,       ZCLA_HTEDITLOG.EDITTYPE
,       ZCLA_ROOMS.ROOM
,       ZCLA_ROOMS.ROOMDES
,       ZCLA_CONSUMERUNITS.GUID
,       ZCLA_PLOTCU.GUID AS GUID2
,       'PART' AS FIELD
,       ZCLA_PLOTCU.PART AS OLDKEY
,       ZCLA_CONSUMERUNITS.PART AS NEWKEY
,       OLDVALUE.PARTNAME AS OLDVALUE
,       NEWVALUE.PARTNAME AS NEWVALUE
,       0 AS OLDPRICE
,       0 AS NEWPRICE
,       ZCLA_CONSUMERUNITS.ISDELETED
,       ZCLA_PLOTCU.ISDELETED AS WASDELETED
,       ZCLA_CONSUMERUNITS.PART
,       ZCLA_CONSUMERUNITS.ZGEM_TQUANT AS INT2
FROM PART OLDVALUE
,    ZCLA_PLOTCU   ?
,    PART NEWVALUE
,    ZCLA_CONSUMERUNITS
,    ZCLA_HTEDIT
,    ZCLA_HTEDITLOG
,    PROJACTS
,    ZCLA_ROOMS
WHERE 0=0
AND   OLDVALUE.PART = ZCLA_PLOTCU.PART
AND   ZCLA_HTEDIT.HTEDIT = ZCLA_HTEDITLOG.HTEDIT
AND   ZCLA_HTEDIT.HOUSETYPEID = PROJACTS.ZCLA_HOUSETYPEID
AND   ZCLA_CONSUMERUNITS.HOUSETYPEID = ZCLA_HTEDIT.HOUSETYPEID
AND   ZCLA_CONSUMERUNITS.GUID = ZCLA_HTEDITLOG.GUID
AND   NEWVALUE.PART = ZCLA_CONSUMERUNITS.PART
AND   ZCLA_CONSUMERUNITS.ROOM = ZCLA_ROOMS.ROOM
AND   ZCLA_PLOTCU.PROJACT = PROJACTS.PROJACT
AND   ZCLA_PLOTCU.GUID = ZCLA_CONSUMERUNITS.GUID
AND   ZCLA_HTEDIT.HTEDIT = :HTEDIT
AND   ZCLA_HTEDIT.CLOSEFLAG <> 'Y'
AND   ZCLA_HTEDITLOG.EDITTYPE = 'C'
AND   PROJACTS.PROJACT = :ELEMENT
;
/*
GergoM | 04/11/23 |
CQUANT*/
INSERT INTO ZCLA_ELEDITLOG ( EDITID
,      PROJACT
,      UPDTYPE
,      EDITTYPE
,      ROOM
,      ROOMDES
,      GUID
,      GUID2
,      FIELD
,      OLDKEY
,      NEWKEY
,      OLDVALUE
,      NEWVALUE
,      OLDPRICE
,      NEWPRICE
,      ISDELETED
,      WASDELETED
,      INT1
,      INT2
)
SELECT :OPENEDIT
,       PROJACTS.PROJACT
,       ZCLA_HTEDITLOG.UPDTYPE
,       ZCLA_HTEDITLOG.EDITTYPE
,       NEWVALUE.ROOM
,       NEWVALUE.ROOMDES
,       ZCLA_CONSUMERUNITS.GUID
,       ZCLA_PLOTCU.GUID AS GUID2
,       'CQUANT' AS FIELD
,       ZCLA_PLOTCU.ZGEM_TQUANT AS OLDKEY
,       ZCLA_CONSUMERUNITS.ZGEM_TQUANT  AS NEWKEY
,       ITOA(ZCLA_PLOTCU.ZGEM_TQUANT) AS OLDVALUE
,       ITOA(ZCLA_CONSUMERUNITS.ZGEM_TQUANT) AS NEWVALUE
,       0 AS OLDPRICE
,       0 AS NEWPRICE
,       ZCLA_CONSUMERUNITS.ISDELETED
,       ZCLA_PLOTCU.ISDELETED AS WASDELETED
,       ZCLA_CONSUMERUNITS.PART
,       ZCLA_CONSUMERUNITS.ZGEM_TQUANT AS INT2
FROM ZCLA_ROOMS NEWVALUE
,    ZCLA_CONSUMERUNITS
,    ZCLA_HTEDIT
,    ZCLA_HTEDITLOG
,    PROJACTS
,    ZCLA_PLOTCU ?
,    ZCLA_ROOMS OLDVALUE ?
WHERE 0=0
AND   ZCLA_HTEDIT.HTEDIT = ZCLA_HTEDITLOG.HTEDIT
AND   ZCLA_HTEDIT.HOUSETYPEID = PROJACTS.ZCLA_HOUSETYPEID
AND   ZCLA_CONSUMERUNITS.HOUSETYPEID = ZCLA_HTEDIT.HOUSETYPEID
AND   ZCLA_CONSUMERUNITS.GUID = ZCLA_HTEDITLOG.GUID
AND   NEWVALUE.ROOM = ZCLA_CONSUMERUNITS.ROOM
AND   ZCLA_PLOTCU.ROOM = OLDVALUE.ROOM
AND   PROJACTS.PROJACT = ZCLA_PLOTCU.PROJACT
AND   ZCLA_CONSUMERUNITS.GUID = ZCLA_PLOTCU.GUID
AND   ZCLA_HTEDIT.HTEDIT = :HTEDIT
AND   ZCLA_HTEDIT.CLOSEFLAG <> 'Y'
AND   ZCLA_HTEDITLOG.EDITTYPE = 'C'
AND   PROJACTS.PROJACT = :ELEMENT
;
/*
-------------------------------
DELETE */
SUB 5112330 ;
SELECT 'SYNC: DELETE'
FROM DUMMY WHERE :DEBUG = 1
FORMAT ADDTO :DEBUGFILE
;
SELECT 'ZCLA_HTEDIT/D -- RUN', SQL.DATE
FROM DUMMY
FORMAT ADDTO '../../GergoM.txt'
;
/* */
GOSUB 5112331 WHERE :EDITTYPE ='W' ;
GOSUB 5112332 WHERE :EDITTYPE ='A' ;
GOSUB 5112333 WHERE :EDITTYPE ='R' ;
GOSUB 5112334 WHERE :EDITTYPE ='S' ;
/* GOSUB 5112335 WHERE :EDITTYPE ='H' ;
Cannot delete house type */
GOSUB 5112336 WHERE :EDITTYPE ='C' ;
GOSUB 5112337 WHERE :EDITTYPE ='P' ;
RETURN
;
SUB 5112331 ; /*  DELETE ='W' ; */
/*--*/
UPDATE ZCLA_PLOTCUCFG
SET    ISDELETED = 'Y'
WHERE  0=0
AND    GUID = :GUID
AND    CONSUMERUNIT IN (
SELECT CONSUMERUNIT
FROM   ZCLA_PLOTCU
WHERE  PROJACT = :ELEMENT
) ;
RETURN ;
SUB 5112332 ; /*  DELETE ='A' ; */
UPDATE EXTFILES
SET    ISDELETED = 'Y'
WHERE 0=0
AND   TYPE = 'T'
AND   GUID = :GUID
AND   IV = :ELEMENT
;
RETURN ;
SUB 5112333 ; /*  DELETE ='R' ; */
UPDATE ZCLA_PLOTROOMS
SET    ISDELETED = 'Y'
WHERE 0=0
AND   GUID = :GUID
AND   PROJACT = :ELEMENT
;
RETURN ;
SUB 5112334 ; /*  DELETE ='S' ; */
UPDATE ZCLA_PLOTQUOTE
SET    ISDELETED = 'Y'
WHERE 0=0
AND   GUID = :GUID
AND   PROJACT = :ELEMENT
;
RETURN ;
SUB 5112336 ; /*  DELETE ='C' ; */
UPDATE ZCLA_PLOTCU
SET    ISDELETED = 'Y'
WHERE 0=0
AND   GUID = :GUID
AND   PROJACT = :ELEMENT
;
RETURN ;
SUB 5112337 ; /*  DELETE ='P' ; */
UPDATE ZCLA_PLOTCOMPONENT
SET    ISDELETED = 'Y'
WHERE 0=0
AND   GUID = :GUID
AND   PROJACT = :ELEMENT
;
RETURN ;
/* */
#INCLUDE func/ZCLA_DEBUGUSR
SELECT 'PROJACTTREE/PRE-FORM'
FROM DUMMY
WHERE :DEBUG = 1
FORMAT ADDTO :DEBUGFILE ;
/*
*/
:ERR = '' ;
:FIXACT = :$$.PROJACT ;
:DOC = :$$$$.DOC ;
:HOUSETYPEID = :$$$.ZCLA_HOUSETYPEID ;
:FIX = :$$.ZCLA_FIX ;
:ELACT = :$$$.PROJACT ;
:KITFLAG = 'N' ;
:IGNOREROOM = 1 ;
/*
*/
SELECT 'PROJACTTREE/PRE-FORM'
,  :FIXACT
,  :DOC
,  :HOUSETYPEID
,  :FIX
,  :ELACT
,  :KITFLAG
,  :IGNOREROOM
FROM DUMMY
WHERE :DEBUG = 1
FORMAT ADDTO :DEBUGFILE ;
/*
GergoM | New BOM Fix Sundries sub-form
#IN C LUDE PARTARC/ZCLA_TREEREPLACE
WRNMSG 800 WHERE :ERR = 'Y' ;
*/
/* update status of fix to done where reported 100% */
/* get scheduled status */
GOTO 081123 WHERE NOT EXISTS ( SELECT 'X' FROM ZCLA_HOURS
WHERE REALQUANT(PERCENTAGE) = 100.0
AND   PROJACT = :$$.PROJACT
AND   DOC = :$$.DOC
AND   :$$.STATDES <> 'Fix Done')
;
:ZCLA_STAT = 0 ;
SELECT STEPSTATUS INTO :ZCLA_STAT
FROM ZCLA_FIXSTATUSES
WHERE CLOSEFLAG = 'Y'
;
:TMP = '' ;
SELECT SQL.TMPFILE INTO :TMP FROM DUMMY ;
LINK GENERALLOAD TO :TMP ;
GOTO 081123 WHERE :RETVAL <= 0 ;
/*Get FICASTSTAT ID*/
:FIXACT = 0;
SELECT FIXACT
INTO :FIXACT
FROM ZCLA_FIXACTSTAT
WHERE PROJACT = :$$.PROJACT
;
:USERLOGIN = '';
SELECT USERLOGIN
INTO :USERLOGIN
FROM USERS
WHERE USER = SQL.USER
;
INSERT INTO GENERALLOAD (LINE, RECORDTYPE, KEY1, KEY2, INT1, INT2,
TEXT11)
VALUES (1, '1' , ITOA(:FIXACT), ITOA(:$$.PROJACT)
, :$$.PROJACT,
:ZCLA_STAT, :ZCLA_USERLOGIN)
;
/*Now Do form Load*/
EXECUTE INTERFACE 'ZCLA_CHANGESTATUS', SQL.TMPFILE, '-L' , :TMP;
SELECT 'ZCLA_HOURSA/ZGEM_BUF1','CHANGE TO FIX DONE',LINE,
RECORDTYPE, LOADED
, KEY1, KEY2, INT1, INT2,
TEXT11
FROM GENERALLOAD
WHERE :DEBUG = 1
FORMAT ADDTO :DEBUGFILE
;
/* Error Logging */
:i_LOGGEDBY = 'ZCLA_CHANGESTATUS';
#INCLUDE func/ZEMG_ERRMSGLOG
UNLINK AND REMOVE GENERALLOAD ;
/**/
LABEL 081123 ;
#INCLUDE func/ZCLA_DEBUGUSR
SELECT 'ZCLA_HOURSA/ZGEM_POST-FORM'
FROM DUMMY
WHERE :DEBUG = 1
FORMAT ADDTO :DEBUGFILE;
#INCLUDE ZCLA_HOURSA/ZGEM_BUF1
:ACTIVATE_POST_FORM = 'Y' ;
/**/
#INCLUDE func/ZCLA_DEBUGUSR
SELECT 'ZCLA_PLOTPARTARC/PRE-FORM' , SQL.USER
FROM DUMMY FORMAT ADDTO :DEBUGFILE ;
:ELEMENT = 0 ;
SELECT :$$$$.PROJACT INTO :ELEMENT
FROM DUMMY ;
:PART = :$$.PART ;
:TYPE = :$$$$$.TYPE ;
:CUST = :$$$$$.CUST ;
:DOC = :$$$$$.DOC ;
#INCLUDE ZCLA_ALTDEFMANF/ZCLA_ELEMENT
#INCLUDE PARTARC/ZCLA_PARTREPLACE
:ACTIVATE_POST_FORM = 'Y' ;
/**/
#INCLUDE func/ZCLA_DEBUGUSR
SELECT 'ZCLA_CUPARTARC/PRE-FORM' , SQL.USER
FROM DUMMY
WHERE :DEBUG = 1
FORMAT ADDTO :DEBUGFILE ;
:HOUSETYPE = 0 ;
SELECT :$$$.HOUSETYPEID INTO :HOUSETYPE
FROM DUMMY ;
:PART = :$$.PART ;
:TYPE = :$$$$.TYPE ;
:CUST = :$$$$.CUST ;
:DOC = :$$$$.DOC ;
#INCLUDE ZCLA_ALTDEFMANF/ZCLA_HOUSETYPE
#INCLUDE PARTARC/ZCLA_PARTREPLACE
/*
*************** */
/*
Small Works Parts */
/*
Part */
#INCLUDE func/ZCLA_DEBUGUSR
SELECT 'ZCLA_HTEDIT/K' , :ELEMENT , :HTEDIT , :OPENEDIT
FROM DUMMY
WHERE :DEBUG = 1
FORMAT ADDTO :DEBUGFILE
;
INSERT INTO ZCLA_ELEDITLOG ( EDITID
,      PROJACT
,      UPDTYPE
,      EDITTYPE
,      ROOM
,      ROOMDES
,      GUID
,      GUID2
,      FIELD
,      OLDKEY
,      NEWKEY
,      OLDVALUE
,      NEWVALUE
,      OLDPRICE
,      NEWPRICE
,      ISDELETED
,      WASDELETED
,      INT1
,      INT2
)
SELECT 0 + :OPENEDIT
,      PROJACTS.PROJACT
,      ZCLA_HTEDITLOG.UPDTYPE
,      ZCLA_HTEDITLOG.EDITTYPE
,      ZCLA_ROOMS.ROOM
,      ZCLA_ROOMS.ROOMDES
,      ZCLA_ROOMPARTS.GUID
,      ZCLA_PROJACTPARTS.GUID AS GUID2
,      'PART' AS FIELD
,      ZCLA_PROJACTPARTS.PART AS OLDKEY
,      ZCLA_ROOMPARTS.PART AS NEWKEY
,      OLDVALUE.PARTDES AS OLDVALUE
,      NEWVALUE.PARTDES AS NEWVALUE
,      0 AS OLDPRICE
,      0 AS NEWPRICE
,      ZCLA_ROOMPARTS.ISDELETED
,      ZCLA_PROJACTPARTS.ISDELETED AS WASDELETED
,      ZCLA_ROOMPARTS.PART
,      ZCLA_ROOMPARTS.TQUANT
FROM   ZCLA_ROOMS
,      ZCLA_HTEDITLOG
,      ZCLA_HTEDIT
,      PROJACTS
,      ZCLA_ROOMPARTS
,      PART NEWVALUE
,      PART OLDVALUE
,      ZCLA_PROJACTPARTS ?
WHERE  0=0
AND    ZCLA_HTEDITLOG.HTEDIT     = ZCLA_HTEDIT.HTEDIT
AND    ZCLA_HTEDIT.HOUSETYPEID   = PROJACTS.ZCLA_HOUSETYPEID
AND    ZCLA_HTEDITLOG.GUID       = ZCLA_ROOMPARTS.GUID
AND    ZCLA_ROOMPARTS.PART       = NEWVALUE.PART
AND    ZCLA_ROOMS.ROOM           = ZCLA_ROOMPARTS.ROOM
AND    ZCLA_ROOMS.HOUSETYPEID    = ZCLA_HTEDIT.HOUSETYPEID
AND    OLDVALUE.PART             = ZCLA_PROJACTPARTS.PART
AND    PROJACTS.PROJACT          = ZCLA_PROJACTPARTS.PROJACT
AND    ZCLA_ROOMPARTS.GUID       = ZCLA_PROJACTPARTS.GUID
AND    ZCLA_HTEDITLOG.EDITTYPE   = 'K'
AND    ZCLA_HTEDIT.CLOSEFLAG     <> 'Y'
AND   PROJACTS.PROJACT = :ELEMENT
AND   ZCLA_HTEDIT.HTEDIT = :HTEDIT
;
/*
TQUANT */
INSERT INTO ZCLA_ELEDITLOG ( EDITID
,      PROJACT
,      UPDTYPE
,      EDITTYPE
,      ROOM
,      ROOMDES
,      GUID
,      GUID2
,      FIELD
,      OLDKEY
,      NEWKEY
,      OLDVALUE
,      NEWVALUE
,      OLDPRICE
,      NEWPRICE
,      ISDELETED
,      WASDELETED
,      INT1
,      INT2
)
/*
medatech.si. 27/2/2024 */
SELECT 0 + :OPENEDIT
,      PROJACTS.PROJACT
,      ZCLA_HTEDITLOG.UPDTYPE
,      ZCLA_HTEDITLOG.EDITTYPE
,      ZCLA_ROOMS.ROOM
,      ZCLA_ROOMS.ROOMDES
,      ZCLA_ROOMPARTS.GUID
,      ZCLA_PROJACTPARTS.GUID AS GUID2
,      'TQUANT' AS FIELD
,      ZCLA_PROJACTPARTS.TQUANT AS OLDKEY
,      ZCLA_ROOMPARTS.TQUANT AS NEWKEY
,      ITOA( ZCLA_PROJACTPARTS.TQUANT / 1000 ) AS OLDVALUE
,      ITOA( ZCLA_ROOMPARTS.TQUANT /1000 ) AS NEWVALUE
,      0 AS OLDPRICE
,      0 AS NEWPRICE
,      ZCLA_ROOMPARTS.ISDELETED
,      ZCLA_PROJACTPARTS.ISDELETED AS WASDELETED
,      ZCLA_ROOMPARTS.PART
,      ZCLA_ROOMPARTS.TQUANT
FROM   PART OLDVALUE
,      ZCLA_PROJACTPARTS ?
,      ZCLA_HTEDITLOG
,      ZCLA_HTEDIT
,      PROJACTS
,      ZCLA_ROOMPARTS
,      PART NEWVALUE
,      ZCLA_ROOMS
WHERE  0=0
AND    OLDVALUE.PART             = ZCLA_PROJACTPARTS.PART
AND    ZCLA_HTEDITLOG.HTEDIT     = ZCLA_HTEDIT.HTEDIT
AND    ZCLA_HTEDIT.HOUSETYPEID   = PROJACTS.ZCLA_HOUSETYPEID
AND    ZCLA_PROJACTPARTS.PROJACT = PROJACTS.PROJACT
AND    ZCLA_ROOMPARTS.PART       = NEWVALUE.PART
AND    ZCLA_ROOMPARTS.ROOM       = ZCLA_ROOMS.ROOM
AND    ZCLA_PROJACTPARTS.GUID    = ZCLA_ROOMPARTS.GUID
AND    ZCLA_HTEDITLOG.GUID       = ZCLA_ROOMPARTS.GUID
AND    ZCLA_HTEDIT.HOUSETYPEID   = ZCLA_ROOMS.HOUSETYPEID
AND    ZCLA_HTEDITLOG.EDITTYPE   = 'K'
AND    ZCLA_HTEDIT.CLOSEFLAG     <> 'Y'
AND   PROJACTS.PROJACT = :ELEMENT
AND   ZCLA_HTEDIT.HTEDIT = :HTEDIT
;
/*
QPRICE  */
INSERT INTO ZCLA_ELEDITLOG ( EDITID
,      PROJACT
,      UPDTYPE
,      EDITTYPE
,      ROOM
,      ROOMDES
,      GUID
,      GUID2
,      FIELD
,      OLDKEY
,      NEWKEY
,      OLDVALUE
,      NEWVALUE
,      OLDPRICE
,      NEWPRICE
,      ISDELETED
,      WASDELETED
,      INT1
)
SELECT  :OPENEDIT
,       PROJACTS.PROJACT
,       ZCLA_HTEDITLOG.UPDTYPE
,       ZCLA_HTEDITLOG.EDITTYPE
,       ZCLA_ROOMS.ROOM
,       ZCLA_ROOMS.ROOMDES
,       ZCLA_ROOMPARTS.GUID
,       ZCLA_PROJACTPARTS.GUID AS GUID2
,       'QPRICE' AS FIELD
,       0 AS OLDKEY
,       0 AS NEWKEY
,       RTOA(ZCLA_PROJACTPARTS.QPRICE , 2) AS OLDVALUE
,       RTOA(ZCLA_ROOMPARTS.QPRICE , 2) AS NEWVALUE
,       ZCLA_PROJACTPARTS.QPRICE AS OLDPRICE
,       ZCLA_ROOMPARTS.QPRICE AS NEWPRICE
,     ZCLA_ROOMPARTS.ISDELETED AS ISDELETED
,     ZCLA_PROJACTPARTS.ISDELETED AS WASDELETED
,       ZCLA_ROOMPARTS.PART
FROM PART OLDVALUE
,    PART NEWVALUE
,    ZCLA_PROJACTPARTS ?
,    ZCLA_ROOMPARTS
,    PROJACTS
,    ZCLA_HTEDIT
,    ZCLA_HTEDITLOG
,    ZCLA_ROOMS
WHERE 0=0
AND   OLDVALUE.PART = ZCLA_PROJACTPARTS.PART
AND   ZCLA_HTEDIT.HTEDIT = ZCLA_HTEDITLOG.HTEDIT
AND   ZCLA_HTEDIT.HOUSETYPEID = PROJACTS.ZCLA_HOUSETYPEID
AND   ZCLA_ROOMPARTS.GUID = ZCLA_HTEDITLOG.GUID
AND   NEWVALUE.PART = ZCLA_ROOMPARTS.PART
AND   ZCLA_ROOMPARTS.ROOM = ZCLA_ROOMS.ROOM
AND   ZCLA_PROJACTPARTS.PROJACT = PROJACTS.PROJACT
AND   ZCLA_PROJACTPARTS.GUID = ZCLA_ROOMPARTS.GUID
AND   ZCLA_HTEDIT.CLOSEFLAG <> 'Y'
AND   ZCLA_HTEDITLOG.EDITTYPE = 'K'
AND   PROJACTS.PROJACT = :ELEMENT
AND   ZCLA_HTEDIT.HTEDIT = :HTEDIT
;
/*
TOTPRICE  */
INSERT INTO ZCLA_ELEDITLOG ( EDITID
,      PROJACT
,      UPDTYPE
,      EDITTYPE
,      ROOM
,      ROOMDES
,      GUID
,      GUID2
,      FIELD
,      OLDKEY
,      NEWKEY
,      OLDVALUE
,      NEWVALUE
,      OLDPRICE
,      NEWPRICE
,      ISDELETED
,      WASDELETED
,      INT1
)
SELECT  :OPENEDIT
,       PROJACTS.PROJACT
,       ZCLA_HTEDITLOG.UPDTYPE
,       ZCLA_HTEDITLOG.EDITTYPE
,       ZCLA_ROOMS.ROOM
,       ZCLA_ROOMS.ROOMDES
,       ZCLA_ROOMPARTS.GUID
,       ZCLA_PROJACTPARTS.GUID AS GUID2
,       'TOTPRICE' AS FIELD
,       0 AS OLDKEY
,       0 AS NEWKEY
,       RTOA(ZCLA_PROJACTPARTS.TOTPRICE , 2) AS OLDVALUE
,       RTOA(ZCLA_ROOMPARTS.TOTPRICE , 2) AS NEWVALUE
,       ZCLA_PROJACTPARTS.TOTPRICE AS OLDPRICE
,       ZCLA_ROOMPARTS.TOTPRICE AS NEWPRICE
,     ZCLA_ROOMPARTS.ISDELETED AS ISDELETED
,     ZCLA_PROJACTPARTS.ISDELETED AS WASDELETED
,       ZCLA_ROOMPARTS.PART
FROM PART OLDVALUE
,    PART NEWVALUE
,    ZCLA_PROJACTPARTS ?
,    ZCLA_ROOMPARTS
,    PROJACTS
,    ZCLA_HTEDIT
,    ZCLA_HTEDITLOG
,    ZCLA_ROOMS
WHERE 0=0
AND   OLDVALUE.PART = ZCLA_PROJACTPARTS.PART
AND   ZCLA_HTEDIT.HTEDIT = ZCLA_HTEDITLOG.HTEDIT
AND   ZCLA_HTEDIT.HOUSETYPEID = PROJACTS.ZCLA_HOUSETYPEID
AND   NEWVALUE.PART = ZCLA_ROOMPARTS.PART
AND   ZCLA_ROOMPARTS.ROOM = ZCLA_ROOMS.ROOM
AND   ZCLA_PROJACTPARTS.PROJACT = PROJACTS.PROJACT
AND   ZCLA_PROJACTPARTS.GUID = ZCLA_ROOMPARTS.GUID
AND   ZCLA_HTEDIT.HTEDIT = :HTEDIT
AND   ZCLA_HTEDIT.CLOSEFLAG <> 'Y'
AND   ZCLA_HTEDITLOG.EDITTYPE = 'K'
AND   PROJACTS.PROJACT = :ELEMENT
;
/*
FIXID */
INSERT INTO ZCLA_ELEDITLOG ( EDITID
,      PROJACT
,      UPDTYPE
,      EDITTYPE
,      ROOM
,      ROOMDES
,      GUID
,      GUID2
,      FIELD
,      OLDKEY
,      NEWKEY
,      OLDVALUE
,      NEWVALUE
,      OLDPRICE
,      NEWPRICE
,      ISDELETED
,      WASDELETED
)
/*
medatech.si. 27/2/2024 */
SELECT :OPENEDIT AS EDITID
,      PROJACTS.PROJACT
,      ZCLA_HTEDITLOG.UPDTYPE
,      ZCLA_HTEDITLOG.EDITTYPE
,      ZCLA_ROOMS.ROOM
,      ZCLA_ROOMS.ROOMDES
,      ZCLA_ROOMPARTS.GUID
,      ZCLA_PROJACTPARTS.GUID AS GUID2
,      'FIXID' AS FIELD
,      ZCLA_PROJACTPARTS.FIXID AS OLDKEY
,      ZCLA_ROOMPARTS.FIXID AS NEWKEY
,      OLDFIX.DESCRIPTION AS OLDVALUE
,      NEWFIX.DESCRIPTION AS NEWVALUE
,       0 AS OLDPRICE
,       0 AS NEWPRICE
,      ZCLA_ROOMPARTS.ISDELETED
,      ZCLA_PROJACTPARTS.ISDELETED AS WASDELETED
FROM   ZCLA_PROJACTPARTS ?
,      ZCLA_FIXES NEWFIX
,      ZCLA_HTEDITLOG
,      ZCLA_HTEDIT
,      PROJACTS
,      ZCLA_FIXES OLDFIX
,      ZCLA_ROOMPARTS
,      ZCLA_ROOMS
WHERE  0=0
AND    ZCLA_PROJACTPARTS.FIXID   = NEWFIX.FIXID
AND    ZCLA_HTEDITLOG.HTEDIT     = ZCLA_HTEDIT.HTEDIT
AND    ZCLA_HTEDIT.HOUSETYPEID   = PROJACTS.ZCLA_HOUSETYPEID
AND    OLDFIX.FIXID              = ZCLA_ROOMPARTS.FIXID
AND    ZCLA_ROOMPARTS.ROOM       = ZCLA_ROOMS.ROOM
AND    ZCLA_HTEDITLOG.GUID       = ZCLA_ROOMPARTS.GUID
AND    ZCLA_PROJACTPARTS.GUID    = ZCLA_ROOMPARTS.GUID
AND    ZCLA_HTEDITLOG.EDITTYPE   = 'K'
AND    ZCLA_HTEDIT.CLOSEFLAG     <> 'Y'
AND    PROJACTS.PROJACT          = :ELEMENT
AND    ZCLA_HTEDIT.HTEDIT        = :HTEDIT
;
/*
*/
:DOC = :PLOT = :ELEMENT = :HOUSETYPE = 0 ;
:EDITFLAG = :EXTRAFLAG = :INITFLAG = 'N' ;
SELECT (:$$$.EDITFLAG = 'Y' ? 'Y' : 'N') INTO :EDITFLAG FROM DUMMY ;
SELECT (:$$$.EXTRAFLAG = 'Y' ? 'Y' : 'N') INTO :EXTRAFLAG FROM DUMMY
;
SELECT (:$$$.INITFLAG = 'Y' ? 'Y' : 'N') INTO :INITFLAG FROM DUMMY ;
SELECT :$$$$$.DOC INTO :DOC FROM DUMMY ;
SELECT :$$$$.PROJACT INTO :PLOT FROM DUMMY ;
SELECT :$$$.PROJACT INTO :ELEMENT FROM DUMMY ;
SELECT :$$$.ZCLA_HOUSETYPEID INTO :HOUSETYPE FROM DUMMY ;
/*
*/
SELECT 'ZCLA_FORMVAR'
,      :DOC , :PLOT , :ELEMENT , :HOUSETYPE
,      :EDITFLAG , :EXTRAFLAG , :INITFLAG
FROM DUMMY
WHERE :DEBUG = 1
FORMAT ADDTO :DEBUGFILE ;
:ACTIVATE_POST_FORM = 'Y' ;
/**/
#INCLUDE func/ZCLA_DEBUGUSR
SELECT 'ZCLA_PLOTPARTARC/PRE-FORM' , SQL.USER
FROM DUMMY FORMAT ADDTO :DEBUGFILE ;
:ELEMENT = 0 ;
SELECT :$$$$.PROJACT INTO :ELEMENT
FROM DUMMY ;
:PART = :$$.PART ;
:TYPE = :$$$$$.TYPE ;
:CUST = :$$$$$.CUST ;
:COL = :$$.COL ;
:DOC = :$$$$$.DOC ;
#INCLUDE ZCLA_ALTDEFMANF/ZCLA_ELEMENT
#INCLUDE PARTARC/ZCLA_PARTREPLACE
/*GOTO 999 WHERE :FORM_INTERFACE = 1;*/
/* Populate ways with blanks, half for RCD1, half for RCD2 */
/*GOTO 999 WHERE :$$.ZCLA_CUNITWAYS <= 0;
:BLANKPART = 0;
SELECT PART
INTO :BLANKPART
FROM PART
WHERE ZCLA_CUNITBLANK = 'Y'
;
:COUNT = 0;
:WAYS = 0;
SELECT :$$.ZCLA_CUNITWAYS
INTO :WAYS
FROM DUMMY
;
LABEL 10;
:COUNT = :COUNT + 1;
INSERT INTO ZCLA_CUNITCONFIG(CONSUMERUNIT, WAY, RCD, PART)
VALUES(:$$.CONSUMERUNIT,
:COUNT, (:COUNT <= :WAYS / 2 ? 'RCD1' : 'RCD2'), :BLANKPART)
;
SELECT :COUNT, :WAYS
FROM DUMMY
TABS ADDTO '../../COUNTWAYS.TXT'
;
GOTO 999 WHERE :COUNT = :WAYS;
LOOP 10;
LABEL 999;
*/
LINK INVOICES TO :$.PAR ;
GOTO 2411 WHERE :RETVAL <= 0 ;
/**/
:ZCLA_IV = 0 ;
SELECT INVOICES.IV
INTO   :ZCLA_IV
FROM   INVOICES
WHERE  INVOICES.IV <> 0 ;
/**/
DECLARE ZCLA_PROJACT CURSOR FOR
SELECT ZCLA_WBSIVITEMS.PROJACT
FROM   ZCLA_WBSIVITEMS
WHERE  ZCLA_WBSIVITEMS.IV      = :ZCLA_IV
AND    ZCLA_WBSIVITEMS.INCLUDE = 'Y' ;
/**/
OPEN ZCLA_PROJACT ;
GOTO 1989 WHERE :RETVAL <= 0 ;
/**/
LABEL 1990 ;
:ZCLA_PROJACT = 0 ;
/**/
FETCH ZCLA_PROJACT INTO :ZCLA_PROJACT ;
GOTO 1991 WHERE :RETVAL <= 0 ;
/*Get Current Ammount Paid*/
:ZCLA_PAYAMOUNT = :ZCLA_NPAY = :ZCLA_RPAY = 0.0 ;
SELECT PROJACTS.ZCLA_PAYAMOUNT
INTO   :ZCLA_PAYAMOUNT
FROM   PROJACTS
WHERE  PROJACTS.PROJACT = :ZCLA_PROJACT ;
/*work out new pay balance and new remaining balance*/
SELECT :ZCLA_PAYAMOUNT + ZCLA_WBSIVITEMS.PRICE
, (PROJACTS.ZCLA_TOTPRICE - (:ZCLA_PAYAMOUNT +
ZCLA_WBSIVITEMS.PRICE))
INTO   :ZCLA_NPAY, :ZCLA_RPAY
FROM   ZCLA_WBSIVITEMS, PROJACTS
WHERE  ZCLA_WBSIVITEMS.IV      = :ZCLA_IV
AND    ZCLA_WBSIVITEMS.PROJACT = :ZCLA_PROJACT
AND    ZCLA_WBSIVITEMS.PROJACT = PROJACTS.PROJACT ;
/**/
SELECT (:ZCLA_RPAY < 0.0 ? 0.0 : :ZCLA_RPAY)
INTO   :ZCLA_RPAY
FROM   DUMMY ;
/**/
UPDATE PROJACTS
SET    ZCLA_PAYAMOUNT    = :ZCLA_NPAY
,      ZCLA_REMAININGBAL = :ZCLA_RPAY
WHERE  PROJACTS.PROJACT  = :ZCLA_PROJACT ;
/**/
/**/
LOOP 1990 ;
/**/
LABEL 1991 ;
CLOSE ZCLA_PROJACT ;
/**/
LABEL 1989 ;
/**/
LINK GENERALLOAD TO :$.GNL ;
GOTO 1701 WHERE :RETVAL <= 0 ;
/**/
:ZCLA_RETAMT = 0.0 ;
/*Raise Rentention Journal if required*/
SELECT  SUM(FNCITEMS.CREDIT1)
INTO    :ZCLA_RETAMT
FROM    FNCITEMS, INVOICES
WHERE   FNCITEMS.QIV            = INVOICES.IV
AND     INVOICES.IV             <> 0
AND     FNCITEMS.ZCLA_RETLINE   = 'Y';
/**/
SELECT :ZCLA_IV , :ZCLA_RETAMT
FROM    DUMMY
TABS  ADDTO '../../NEILNEWRECIEPT.TXT';
/**/
GOTO 1701 WHERE :ZCLA_RETAMT <= 0.0 ;
/**/
:IACCNAME = :RACCNAME = '' ;
/**/
SELECT ACCOUNTS.ACCNAME
INTO   :IACCNAME
FROM   INVOICES, CASH, ACCOUNTS
WHERE  INVOICES.TOCASH = CASH.CASH
AND    CASH.ACCOUNT    = ACCOUNTS.ACCOUNT
AND    INVOICES.IV     <> 0 ;
/**/
SELECT ACCOUNTS.ACCNAME
INTO   :RACCNAME
FROM   INVOICES, CUSTOMERS, ACCOUNTS
WHERE  INVOICES.CUST              = CUSTOMERS.CUST
AND    CUSTOMERS.ZCLA_RETACCOUNT  = ACCOUNTS.ACCOUNT
AND    INVOICES.IV <> 0 ;
/**/
/**/
INSERT INTO GENERALLOAD (LINE, RECORDTYPE, TEXT1, TEXT2, REAL1,
DATE1)
SELECT SQL.LINE, '1',  :IACCNAME, :RACCNAME , :ZCLA_RETAMT
,      SQL.DATE
FROM   DUMMY ;
/**/
/*Load Journal*/
EXECUTE INTERFACE 'ZCLA_RAISEJOURNAL', SQL.TMPFILE, '-L' , :$.GNL;
/**/
:ZCLA_FNCTRANS = 0 ;
/**/
SELECT ATOI(GENERALLOAD.KEY1)
INTO   :ZCLA_FNCTRANS
FROM   GENERALLOAD
WHERE  GENERALLOAD.RECORDTYPE = '1'
AND    GENERALLOAD.LOADED     = 'Y' ;
/**/
/**/
:PAR = '' ;
SELECT SQL.TMPFILE
INTO   :PAR
FROM   DUMMY ;
/**/
LINK FNCTRANS TO :PAR ;
GOTO 1801 WHERE :RETVAL <= 0 ;
/**/
INSERT INTO FNCTRANS
SELECT * FROM FNCTRANS ORIG
WHERE  ORIG.FNCTRANS = :ZCLA_FNCTRANS ;
/**/
EXECUTE ACTIVATF '-P', 'CLOSEANFNCTRANS', 'FNCTRANS', :PAR ;
/**/
UPDATE INVOICES ORIG
SET    ZCLA_RETFNCTRANS = :ZCLA_FNCTRANS
WHERE  ORIG.IV          = :ZCLA_IV ;
/**/
UNLINK FNCTRANS ;
LABEL 1801 ;
UNLINK GENERALLOAD ;
LABEL 1701 ;
/**/
UNLINK INVOICES ;
LABEL 2411 ;
SELECT ATOI(:HTMLVALUE)
INTO   :$.IV
FROM   DUMMY ;
/**/
SELECT :$.IV
FROM DUMMY
TABS ADDTO '../../NEILIV.TXT';
/* */
#INCLUDE func/ZCLA_DEBUGUSR
SELECT 'ZCLA_OPENEDIT/10'
FROM DUMMY
WHERE :DEBUG = 1
FORMAT ADDTO :DEBUGFILE
;
LINK ZCLA_HOUSETYPE TO :$.PAR;
ERRMSG 1 WHERE :RETVAL = 0 ;
:EL = :DOC = :HOUSETYPE = 0 ;
SELECT HOUSETYPEID , EL , DOC INTO  :HOUSETYPE , :EL , :DOC
FROM ZCLA_HOUSETYPE
WHERE HOUSETYPEID > 0
;
UNLINK ZCLA_HOUSETYPE ;
SELECT :HOUSETYPE FROM DUMMY
WHERE :DEBUG = 1
FORMAT ADDTO :DEBUGFILE
;
/*
Skip if there's a open edit */
ERRMSG 801 WHERE EXISTS (
SELECT 'x'
FROM ZCLA_HTEDIT
WHERE 0=0
AND   HOUSETYPEID = :HOUSETYPE
AND   CLOSEFLAG <> 'Y'
);
/* Skip if status is not locked
*/
:STATLOCK = '\0' ;
SELECT STATLOCK INTO :STATLOCK
FROM ZCLA_CONTRACTEL , ZCLA_CONTRACTSTATUSE , ZCLA_CONTRACTS
WHERE 0=0
AND   ZCLA_CONTRACTS.CONTRACT = ZCLA_CONTRACTEL.CONTRACT
AND   ZCLA_CONTRACTSTATUSE.STEPSTATUS = ZCLA_CONTRACTS.STEPSTATUS
AND   EL = :EL
AND   ZCLA_CONTRACTS.CONTRACT IN(
SELECT CONTRACT
FROM ZCLA_CONTRACTS
WHERE DOC = :DOC
);
ERRMSG 802 WHERE :STATLOCK <> 'Y'
;
SELECT '>> New edit' , :HOUSETYPE
FROM DUMMY
WHERE :DEBUG = 1
FORMAT ADDTO :DEBUGFILE
;
INSERT INTO ZCLA_HTEDIT
( HOUSETYPEID , OPENEDBY , OPENDATE , PACKAGEFLAG
, OPEN_TOTPRICE , OPEN_TOTCOST  )
SELECT :HOUSETYPE
,      SQL.USER
,      SQL.DATE
,      'Y'
,      ZCLA_TOTPRICE
,      ZCLA_TOTCOST
FROM ZCLA_HOUSETYPE
WHERE HOUSETYPEID = :HOUSETYPE
;
:OPENEDIT = 0 ;
SELECT HTEDIT INTO :OPENEDIT
FROM ZCLA_HTEDIT
WHERE 0=0
AND   HOUSETYPEID = :HOUSETYPE
AND   CLOSEFLAG <> 'Y'
;
/* Create the edit split */
INSERT INTO ZCLA_HTEDITSPLIT (EDITID , HOUSETYPE , FIXID , SPLIT)
SELECT :OPENEDIT
,      :HOUSETYPE
,      ZCLA_FIXES.FIXID
,     (ZCLA_SITEELFIX.SPLIT > 0
?      ZCLA_SITEELFIX.SPLIT : ZCLA_ELEMENTFIX.SPLIT )
FROM  ZCLA_HOUSETYPE
,     ZCLA_SITEELFIX ?
,     ZCLA_ELEMENTFIX
,     ZCLA_FIXES
WHERE  0=0
AND    ZCLA_SITEELFIX.DOC     = ZCLA_HOUSETYPE.DOC
AND    ZCLA_ELEMENTFIX.EL     = ZCLA_HOUSETYPE.EL
AND    ZCLA_HOUSETYPE.EL      = ZCLA_SITEELFIX.EL
AND    ZCLA_ELEMENTFIX.FIXID  = ZCLA_SITEELFIX.FIXID
AND    ZCLA_ELEMENTFIX.FIXID  = ZCLA_FIXES.FIXID
AND    ZCLA_HOUSETYPE.HOUSETYPEID   = :HOUSETYPE
AND    ZCLA_FIXES.ISPAYMENT   = 'Y'
;
WRNMSG 800 ;
/* Copy FROM site TO site
*/
#INCLUDE func/ZCLA_DEBUGUSR
SELECT 'ZCLA_COPYHOUSE/20' FROM DUMMY
WHERE :DEBUG = 1 FORMAT ADDTO :DEBUGFILE
;
:DOC = 0 ;
:DOCNO = '' ;
SELECT DOC , DOCNO INTO :DOC , :DOCNO
FROM DOCUMENTS
WHERE 0=0
AND   DOCNO = :$.PR1
AND   TYPE = 'p'
;
/* Check exists
*/
SELECT :$.NAM , :DOCNO
INTO :PAR1, :PAR2
FROM DUMMY ;
ERRMSG 800 WHERE EXISTS (
SELECT 'x'
FROM ZCLA_HOUSETYPE
WHERE 0=0
AND   DOC = :DOC
AND   TYPENAME = :$.NAM
);
SELECT :DOC , :$.HS
FROM DUMMY
FORMAT ADDTO :DEBUGFILE
;
SELECT SQL.TMPFILE
INTO :GEN FROM DUMMY;
LINK GENERALLOAD TO :GEN;
ERRMSG 1 WHERE :RETVAL = 0
;
/*
*/
:LN = 0 ;
/* insert Proj line */
SELECT MAX(LINE) + 1 INTO :LN FROM GENERALLOAD;
INSERT INTO GENERALLOAD (LINE , RECORDTYPE, KEY1)
SELECT :LN , '1' , ITOA(:DOC)
FROM DUMMY
;
SELECT MAX(LINE) + 1 INTO :LN FROM GENERALLOAD ;
INSERT INTO GENERALLOAD (LINE , RECORDTYPE, INT1, INT2, INT3, INT4 ,
CHAR1 , CHAR2 , TEXT1, TEXT2 , CHAR3, TEXT3)
SELECT :LN
,   '6'
,   :DOC
,   EL
,   HOUSETYPEID
,   COL
,   '¬'
,   :$.LNK
,   :$.NAM
/*GergoM | 16/11/23 | TEXT2 <-- TYPEDES*/
/*,   :$.DES*/
,   TYPEDES
,   'Y'
,   STYLE
FROM ZCLA_HOUSETYPE
WHERE 0=0
AND   HOUSETYPEID  = :$.HS
;
#INCLUDE func/ZCLA_RESETERR
EXECUTE INTERFACE 'ZCLA_LOADPLOT', SQL.TMPFILE, '-L', :GEN
;
:i_LOGGEDBY = 'ZCLA_COPYHOUSE';
#INCLUDE func/ZEMG_ERRMSGLOG
SELECT LINE, RECORDTYPE , KEY1 , LOADED , INT1, INT2, INT3, INT4 ,
CHAR1 , CHAR2 , TEXT1, TEXT2 , TEXT3
FROM GENERALLOAD
FORMAT ADDTO :DEBUGFILE
;
#INCLUDE func/ZCLA_ERRMSG
UNLINK GENERALLOAD ;
/* */
#INCLUDE func/ZCLA_DEBUGUSR
SELECT 'ZCLA_ADDPLOT' FROM DUMMY
FORMAT ADDTO :DEBUGFILE ;
/* vars
*/
:P = :PLOT = :LN = 0 ;
:HOUSETYPE = :DOC = :EL = 0 ;
:ISHOUSE = :CORE = '' ;
/* Get housetype
*/
LINK ZCLA_HOUSETYPE TO :$.PAR;
ERRMSG 1 WHERE :RETVAL <= 0;
/*
*/
SELECT HOUSETYPEID , DOC , EL , CORE
INTO :HOUSETYPE , :DOC , :EL , :CORE
FROM ZCLA_HOUSETYPE
WHERE HOUSETYPEID <> 0 ;
SELECT :HOUSETYPE , :DOC , :EL , :CORE
FROM ZCLA_HOUSETYPE
WHERE 0=0
AND   :DEBUG = 1
FORMAT ADDTO :DEBUGFILE ;
UNLINK ZCLA_HOUSETYPE ;
/* Initialise vars
*/
SELECT ISHOUSE INTO :ISHOUSE
FROM ZCLA_PLOTELEMENT
WHERE EL = :EL ;
/*
*/
SELECT 'Adding plots', PLOT
FROM ZCLA_USERADDPLOT
WHERE 0=0
AND   :DEBUG = 1
AND   USER = SQL.USER
FORMAT ADDTO :DEBUGFILE ;
/* Start Cursor
*/
DECLARE E97 CURSOR FOR
SELECT PLOT FROM ZCLA_USERADDPLOT
WHERE 0=0
AND   PLOT > 0
AND   USER = SQL.USER
;
OPEN E97 ;
GOTO 403239 WHERE :RETVAL = 0 ;
LABEL 403231 ;
FETCH E97 INTO :PLOT ;
GOTO 403238 WHERE :RETVAL = 0 ;
/* Link General load table
*/
:LN = 0 ;
SELECT SQL.TMPFILE
INTO :GEN FROM DUMMY;
LINK GENERALLOAD TO :GEN;
ERRMSG 1 WHERE :RETVAL = 0 ;
/* insert Proj line
*/
SELECT MAX(LINE) + 1 INTO :LN FROM GENERALLOAD ;
INSERT INTO GENERALLOAD (LINE , RECORDTYPE, KEY1)
SELECT :LN , '1' , ITOA(:DOC)
FROM DUMMY ;
/* insert Projact line
*/
SELECT MAX(PROJACTUID) + 1 INTO :P FROM PROJACTS ;
SELECT MAX(LINE) + 1 INTO :LN FROM GENERALLOAD ;
GOTO 50 WHERE EXISTS (
SELECT 'x'
FROM PROJACTS
WHERE 0=0
AND   DOC = :DOC
AND   LEVEL = 1
AND   WBS = ITOA(:PLOT)
);
/* Create New plot
*/
INSERT INTO GENERALLOAD (LINE , RECORDTYPE, TEXT1, TEXT2 , INT1 ,
INT2, INT3)
SELECT :LN
,    '2'
,    STRCAT('Plot ' , ITOA(:PLOT))
,    ITOA(:PLOT)
,    :P
,    -1
,    (:ISHOUSE = 'Y' ? :HOUSETYPE : 0)
FROM DUMMY
;
SELECT :P + 1 INTO :P FROM DUMMY ;
GOTO 99 ;
LABEL 50 ;
/* Use existing plot
*/
SELECT MAX(LINE) + 1 INTO :LN FROM GENERALLOAD ;
GOTO 80 WHERE :ISHOUSE = 'Y' ;
INSERT INTO GENERALLOAD (LINE , RECORDTYPE, KEY1 )
SELECT :LN
,    '2'
,    ITOA( PROJACT )
FROM PROJACTS
WHERE 0=0
AND   DOC = :DOC
AND   WBS = ITOA(:PLOT)
;
GOTO 90 ;
LABEL 80 ;
INSERT INTO GENERALLOAD (LINE , RECORDTYPE, KEY1 , INT3)
SELECT :LN
,    '2'
,    ITOA( PROJACT )
,    :HOUSETYPE
FROM PROJACTS
WHERE 0=0
AND   DOC = :DOC
AND   WBS = ITOA(:PLOT)
;
LABEL 90;
LABEL 99 ;
/*
Get Status */
:STATUS = 0 ;
:STEPSTATUSDES = '' ;
SELECT STEPSTATUS , STEPSTATUSDES INTO :STATUS, :STEPSTATUSDES
FROM ZCLA_ELSTATUSES WHERE INITFLAG = 'Y'
;
/*
Make the element status active the contract is active */
SELECT STEPSTATUS , STEPSTATUSDES INTO :STATUS, :STEPSTATUSDES
FROM  ZCLA_ELSTATUSES , DOCSTATUSES
WHERE  0=0
AND    DOCSTATUSES.ORIGSTATUSID = ZCLA_ELSTATUSES.STEPSTATUS
AND    DOCSTATUSES.TYPE = 'ZCLA_EL'
AND    DOCSTATUSES.DOCOPENED = 'Y'
AND    EXISTS (
SELECT 'x'
FROM ZCLA_CONTRACTS , ZCLA_CONTRACTEL , ZCLA_CONTRACTSTATUSE
,    DOCSTATUSES , ZCLA_PLOTELEMENT
WHERE 0=0
AND   ZCLA_CONTRACTS.STEPSTATUS = ZCLA_CONTRACTSTATUSE.STEPSTATUS
AND   ZCLA_CONTRACTS.CONTRACT = ZCLA_CONTRACTEL.CONTRACT
AND   ZCLA_PLOTELEMENT.EL = ZCLA_CONTRACTEL.EL
AND   DOCSTATUSES.ORIGSTATUSID = ZCLA_CONTRACTSTATUSE.STEPSTATUS
AND   DOCSTATUSES.TYPE =  'ZCLA_CONT'
AND   DOCSTATUSES.DOCOPENED = 'Y'
AND   ZCLA_CONTRACTS.DOC =  :DOC
AND   ZCLA_PLOTELEMENT.EL = :EL
) ;
SELECT :STATUS, :STEPSTATUSDES
FROM DUMMY
WHERE :DEBUG = 1
FORMAT ADDTO :DEBUGFILE
;
/*
insert Element line */
SELECT MAX(LINE) + 1 INTO :LN FROM GENERALLOAD ;
INSERT INTO GENERALLOAD (LINE , RECORDTYPE, INT1, INT2, INT3, INT4,
INT5 , INT6 , INT7, TEXT2 , TEXT3 , TEXT1)
SELECT :LN
,   '3'
,   EL
,   HOUSETYPEID
,   COL
,   -1
,   :P
,   ALT
,   :STATUS
,   :STEPSTATUSDES
,   STYLE
,   GUID
FROM ZCLA_HOUSETYPE
WHERE HOUSETYPEID = :HOUSETYPE
;
/*
ATTACHMENTS FROM HOUSETYPE
*/
/* Find latest attachment for each category */
DECLARE CATCURSOR CURSOR FOR
SELECT DISTINCT ZCLA_FILECATEGORY
FROM EXTFILES, ZCLA_FILECATEGORIES Z
WHERE IV = :HOUSETYPE
AND EXTFILES.ZCLA_FILECATEGORY = Z.FILECATEGORY
AND   TYPE = '¬'
AND   Z.INTERNALCOPY = 'Y'
;
OPEN CATCURSOR;
GOTO 8081 WHERE :RETVAL = 0;
LABEL 111;
:CAT = 0;
FETCH CATCURSOR INTO :CAT;
GOTO 8080 WHERE :RETVAL = 0;
/* Insert attachments */
:EXTFILENUM = :CURDATE = 0;
:EXTFILEDES = :EXTFILENAME = :CATEGORYNAME = '';
SELECT EXTFILENUM, EXTFILEDES, EXTFILENAME, CATEGORYNAME, CURDATE ,
GUID
INTO :EXTFILENUM, :EXTFILEDES, :EXTFILENAME, :CATEGORYNAME, :CURDATE
, :GUID
FROM ZCLA_FILECATEGORIES, EXTFILES
WHERE TYPE = '¬'
AND   IV = :HOUSETYPE
AND   ZCLA_FILECATEGORIES.FILECATEGORY = EXTFILES.ZCLA_FILECATEGORY
AND   EXTFILES.ZCLA_FILECATEGORY = :CAT
ORDER BY CURDATE DESC
OFFSET 0 FETCH NEXT 1 ROWS ONLY
;
SELECT MAX(LINE) + 1 INTO :LN FROM GENERALLOAD;
INSERT INTO GENERALLOAD(LINE, RECORDTYPE, INT1, TEXT1, TEXT2, TEXT3,
DATE1 , TEXT4)
VALUES(:LN + 1, '7', :EXTFILENUM, :EXTFILEDES, :EXTFILENAME,
:CATEGORYNAME, :CURDATE , :GUID)
;
LOOP 111;
LABEL 8080;
CLOSE CATCURSOR;
LABEL 8081;
SELECT :LN + 1 INTO :LN FROM DUMMY;
/* Check exists
*/
GOSUB 1000 WHERE EXISTS (
SELECT 'x'
FROM PROJACTS
WHERE 0=0
AND   DOC = :DOC
AND   WBS = STRCAT(ITOA(:PLOT) , '.' , ITOA(:EL))
);
/*
*/
/* Loading
*/
SELECT 'before-ZCLA_LOADPLOT'
, LINE , RECORDTYPE, LOADED, KEY1, INT1, INT2, INT3, INT4
,      INT5 , INT6 , INT7, TEXT2 , TEXT3 , TEXT4
FROM GENERALLOAD
WHERE :DEBUG = 1
FORMAT ADDTO :DEBUGFILE ;
#INCLUDE func/ZCLA_RESETERR
EXECUTE INTERFACE 'ZCLA_LOADPLOT', SQL.TMPFILE, '-L', :GEN ;
:i_LOGGEDBY = 'ZCLA_LOADPLOT';
#INCLUDE func/ZEMG_ERRMSGLOG
/* Log to file
*/
#INCLUDE func/ZCLA_ERRMSG
/*---------------------------*/
:ELEMENT = 0;
SELECT ATOI(KEY1)
INTO :ELEMENT
FROM   GENERALLOAD
WHERE  GENERALLOAD.LOADED     = 'Y'
AND    GENERALLOAD.RECORDTYPE = '3' ;
/*---------------------------*/
UNLINK AND REMOVE GENERALLOAD ;
/* */
#INCLUDE STATUSTYPES/ZCLA_BUF5
#INCLUDE ZCLA_ELACT/RECALC
/*
*/
LOOP 403231 ;
LABEL 403238 ;
CLOSE E97 ;
LABEL 403239 ;
/* Error Handler
*/
SUB 1000 ;
SELECT STRCAT('Plot ' , ITOA(:PLOT)) INTO :PAR1
FROM DUMMY ;
SELECT ELDES INTO :PAR2
FROM ZCLA_PLOTELEMENT
WHERE 0=0
AND   EL = :EL ;
ERRMSG 500 ;
RETURN ;
:DOC = :PCUST = :PARENT = 0;
/*  Get the Builder PLC for this site
*/
/* */
#INCLUDE func/ZCLA_DEBUGUSR
LINK DOCUMENTS TO :$.PAR;
ERRMSG 1 WHERE :RETVAL <= 0;
/*  */
SELECT DOC , CUST
INTO :DOC , :PCUST
FROM DOCUMENTS
WHERE 0=0
AND   DOC <> 0
;
UNLINK DOCUMENTS ;
/*--*/
SELECT PCUST
INTO :PARENT
FROM CUSTOMERS
WHERE CUST = :PCUST
;
SELECT 'COPYCORE',:DOC , :PCUST, :PARENT, :$.WHR
FROM DUMMY
WHERE :DEBUG = 1
FORMAT ADDTO :DEBUGFILE
;
/*  Insert Housetypes
*/
DELETE FROM ZCLA_CORETYPE
WHERE USER = SQL.USER
;
INSERT INTO ZCLA_CORETYPE ( USER
,   HOUSETYPEID
,   COL
,   EL
,   DOC
,   TYPENAME
,   TYPEDES
,   STYLE
)
SELECT SQL.USER
,   HOUSETYPEID
,   COL
,   EL
,   :DOC
,   TYPENAME
,   TYPEDES
,   STYLE
FROM ZCLA_HOUSETYPE
WHERE 0=0
AND   DOC = (:$.WHR = 'Builder Core' ? :PARENT : :PCUST)
;
/* */
#INCLUDE func/ZCLA_DEBUGUSR
SELECT *
FROM ZCLA_CORETYPE
WHERE 0=0
AND   COPY = 'Y'
AND   USER = SQL.USER
AND   :DEBUG = 1
FORMAT ADDTO :DEBUGFILE
;
SELECT 40 INTO :$.GO
FROM DUMMY ;
GOTO 100 WHERE NOT EXISTS (
SELECT 'x'
FROM ZCLA_CORETYPE
WHERE 0=0
AND   COPY = 'Y'
AND   USER = SQL.USER
);
SELECT 25 INTO :$.GO
FROM DUMMY ;
LABEL 100 ;
/* */
#INCLUDE func/ZCLA_DEBUGUSR
SELECT 'ZCLA_COPYCORE/30' FROM DUMMY
WHERE :DEBUG = 1 FORMAT ADDTO :DEBUGFILE
;
/*
*/
SELECT SQL.TMPFILE
INTO :GEN FROM DUMMY;
LINK GENERALLOAD TO :GEN;
ERRMSG 1 WHERE :RETVAL = 0 ;
/*
*/
:LN = 0 ;
DECLARE EL7 CURSOR FOR
SELECT HOUSETYPEID
,   COL
,   EL
,   DOC
,   TYPENAME
,   TYPEDES
,   STYLE
FROM ZCLA_CORETYPE
WHERE 0=0
AND   USER = SQL.USER
AND   COPY = 'Y'
;
OPEN EL7;
GOTO 1009 WHERE :RETVAL = 0;
LABEL 1001;
:DOC = :COL = :ELEMENT = :ZCLA_HOUSETYPEID = 0 ;
:TYPENAME = :TYPEDES = :STYLE = '' ;
FETCH EL7 INTO
:ZCLA_HOUSETYPEID , :COL , :ELEMENT  , :DOC , :TYPENAME , :TYPEDES ,
:STYLE ;
GOTO 1008 WHERE :RETVAL = 0 ;
/* insert Proj line
*/
SELECT MAX(LINE) + 1 INTO :LN FROM GENERALLOAD;
INSERT INTO GENERALLOAD (LINE , RECORDTYPE, KEY1)
SELECT :LN , '1' , ITOA(:DOC)
FROM DUMMY
;
SELECT MAX(LINE) + 1 INTO :LN FROM GENERALLOAD ;
INSERT INTO GENERALLOAD (LINE , RECORDTYPE, INT1, INT2, INT3, INT4 ,
CHAR1 , CHAR2 , TEXT1, TEXT2, CHAR3, TEXT3 )
SELECT :LN
,   '6'
,   :DOC
,   :ELEMENT
,   :ZCLA_HOUSETYPEID
,   :COL
,   '¬'
,   'Y'
,   :TYPENAME
,   :TYPEDES
,   'Y'
,   :STYLE
FROM DUMMY
;
/*
*/
LOOP 1001;
LABEL 1008;
CLOSE EL7;
LABEL 1009;
/*
*/
#INCLUDE func/ZCLA_RESETERR
EXECUTE INTERFACE 'ZCLA_LOADPLOT', SQL.TMPFILE, '-L', :GEN
;
/*
*/
SELECT LINE, RECORDTYPE , KEY1 , LOADED , INT1, INT2, INT3, INT4 ,
CHAR1 , TEXT1, TEXT2
FROM GENERALLOAD
WHERE :DEBUG = 1
FORMAT ADDTO :DEBUGFILE ;
#INCLUDE func/ZCLA_ERRMSG ;
UNLINK GENERALLOAD ;
/* Copy FROM project TO customer
*/
#INCLUDE func/ZCLA_DEBUGUSR
SELECT 'ZCLA_COPYHOUSE/50', :$.BLD FROM DUMMY
WHERE :DEBUG = 1 FORMAT ADDTO :DEBUGFILE
;
:DOC = 0 ;
SELECT (:$.BLD = 'Group' ? CUSTOMERS.PCUST : CUSTOMERS.CUST) INTO
:DOC
FROM ZCLA_HOUSETYPE , DOCUMENTS, CUSTOMERS
WHERE 0=0
AND   DOCUMENTS.CUST = CUSTOMERS.CUST
AND   ZCLA_HOUSETYPE.DOC = DOCUMENTS.DOC
AND   ZCLA_HOUSETYPE.HOUSETYPEID = :$.HS ;
/* Check exists
*/
:DOCNO = '' ;
SELECT STRCAT(CUSTDES, ' core types') INTO :DOCNO
FROM CUSTOMERS
WHERE CUST = :DOC ;
SELECT :$.NA2 , :DOCNO
INTO :PAR1, :PAR2
FROM DUMMY ;
ERRMSG 800 WHERE EXISTS (
SELECT 'x'
FROM ZCLA_HOUSETYPE
WHERE 0=0
AND   DOC = :DOC
AND   TYPENAME = :$.NA2
);
SELECT :DOC
FROM DUMMY
FORMAT ADDTO :DEBUGFILE
;
SELECT SQL.TMPFILE
INTO :GEN FROM DUMMY ;
LINK GENERALLOAD TO :GEN ;
ERRMSG 1 WHERE :RETVAL = 0
;
/*
*/
:LN = 0 ;
/* insert Proj line */
SELECT MAX(LINE) + 1 INTO :LN FROM GENERALLOAD;
INSERT INTO GENERALLOAD (LINE , RECORDTYPE, KEY1)
SELECT :LN , '1' , ITOA(:DOC)
FROM DUMMY
;
SELECT MAX(LINE) + 1 INTO :LN FROM GENERALLOAD ;
INSERT INTO GENERALLOAD (LINE , RECORDTYPE
, INT1, INT2, INT3
, CHAR1 , CHAR2 , TEXT1, TEXT2 , DATE1 , INT10 , CHAR3, TEXT3 )
SELECT :LN ,   '2'
,   :DOC
,   EL
,   COL
,   '¬'
,   ''
,   :$.NA2
/*GergoM | 16/11/23 | TEXT2 <-- TYPEDES*/
/*,   :$.DE2*/
,   TYPEDES
,   SQL.DATE
,   HOUSETYPEID
,   'Y'
,   STYLE
FROM ZCLA_HOUSETYPE
WHERE 0=0
AND   HOUSETYPEID  = :$.HS
;
#INCLUDE func/ZCLA_RESETERR
EXECUTE INTERFACE 'ZCLA_COPYTOCORE', SQL.TMPFILE, '-L', :GEN
;
SELECT LINE, RECORDTYPE , KEY1 , LOADED , INT1, INT2, INT3, INT4 ,
CHAR1 , CHAR2 , TEXT1, TEXT2 , TEXT3
FROM GENERALLOAD
FORMAT ADDTO :DEBUGFILE
;
#INCLUDE func/ZCLA_ERRMSG
UNLINK GENERALLOAD ;
#INCLUDE func/ZCLA_DEBUGUSR
SELECT 'STEP 70', :$.HS, :$.BLD
FROM DUMMY
FORMAT ADDTO :DEBUGFILE
;
:CUST = :PCUST = 0 ;
SELECT (:$.BLD = 'Group' ? CUSTOMERS.PCUST : CUSTOMERS.CUST) INTO
:PCUST
FROM CUSTOMERS, DOCUMENTS
WHERE 0=0
AND   CUSTOMERS.CUST = DOCUMENTS.CUST
AND   DOCUMENTS.DOC = :$.DOC
;
SELECT :PCUST
FROM DUMMY
FORMAT ADDTO '../ZCLA_COPYHOUSE.txt'
;
DELETE FROM ZCLA_USERCORECOPY
WHERE USER = SQL.USER
;
INSERT INTO ZCLA_USERCORECOPY
(USER ,  PROJDES , DOCNO)
SELECT SQL.USER , TYPEDES , TYPENAME
FROM ZCLA_HOUSETYPE
WHERE 0=0
AND    DOC = :PCUST
;
SELECT *
FROM ZCLA_USERCORECOPY
WHERE USER = SQL.USER
FORMAT ADDTO '../ZCLA_COPYHOUSE.txt'
;
/* Update the core type from a project
*/
#INCLUDE func/ZCLA_DEBUGUSR
SELECT 'STEP 90', :$.BLD
FROM DUMMY
FORMAT ADDTO :DEBUGFILE
;
:LN = :DOC = :UPD = 0 ;
SELECT (:$.BLD = 'Group' ? CUSTOMERS.PCUST : CUSTOMERS.CUST) INTO
:DOC
FROM ZCLA_HOUSETYPE , DOCUMENTS, CUSTOMERS
WHERE 0=0
AND   DOCUMENTS.CUST = CUSTOMERS.CUST
AND   ZCLA_HOUSETYPE.DOC = DOCUMENTS.DOC
AND   ZCLA_HOUSETYPE.HOUSETYPEID = :$.HS ;
/*
*/
SELECT SQL.TMPFILE
INTO :GEN FROM DUMMY;
LINK GENERALLOAD TO :GEN;
ERRMSG 1 WHERE :RETVAL = 0
;
/* insert Proj line
*/
SELECT MAX(LINE) + 1 INTO :LN FROM GENERALLOAD;
INSERT INTO GENERALLOAD ( LINE , RECORDTYPE, KEY1 )
SELECT :LN , '1' , ITOA(:DOC)
FROM DUMMY
;
SELECT HOUSETYPEID INTO :UPD
FROM ZCLA_HOUSETYPE
WHERE 0=0
AND   DOC = :DOC
AND   TYPENAME = :$.TYP
;
SELECT 'UPDATE HT', :$.TYP, :UPD, :DOC
FROM DUMMY
FORMAT ADDTO :DEBUGFILE
;
SELECT MAX(LINE) + 1 INTO :LN FROM GENERALLOAD ;
INSERT INTO GENERALLOAD ( LINE , RECORDTYPE , KEY1 , INT10 , DATE1 ,
CHAR3, TEXT3 )
SELECT :LN
,   '2'
,   ITOA( :UPD )
,   :$.HS
,   SQL.DATE
,   'Y'
,   STYLE
FROM ZCLA_HOUSETYPE
WHERE 0=0
AND   HOUSETYPEID = :UPD
;
#INCLUDE func/ZCLA_RESETERR
EXECUTE INTERFACE 'ZCLA_COPYTOCORE', SQL.TMPFILE, '-L', :GEN
;
SELECT LINE, RECORDTYPE , KEY1 , LOADED , INT1, INT2, INT3, INT4 ,
CHAR1 , CHAR2 , TEXT1, TEXT2 , DATE1
FROM GENERALLOAD
FORMAT ADDTO :DEBUGFILE
;
#INCLUDE func/ZCLA_ERRMSG
UNLINK GENERALLOAD ;
/*
WHEN QUESTIONARE IS FINISHED
CHECK IF KIT IS GOOD
*/
GOTO 999 WHERE NOT EXISTS
(SELECT 'X' FROM QUESTLINES
WHERE ANSNUM <> 0 )
;
GOTO 1 WHERE :$.SOF_QFINAL = 'Y' AND :$1.SOF_QFINAL = '\0' ;
GOTO 999 ;
LABEL 1 ;
/* put in stack table parts with errors */
:ST4 = '' ;
SELECT SQL.TMPFILE INTO :ST4  FROM DUMMY ;
LINK STACK4 TO :ST4 ;
GOTO 999 WHERE :RETVAL <= 0 ;
:ZPREVNUM = 0 ;
LABEL 120901 ;
:ZQUESTION = 0 ;
SELECT MIN(QUESTNUM) INTO :ZQUESTION
FROM QUESTLINES
WHERE QUESTNUM > :ZPREVNUM
AND DOC = :$.CUSTNOTE * (-1)
;
GOTO 120902 WHERE :RETVAL <= 0 ;
/* get answer , trans to question */
:ZANSWER = 0 ;
:ZTRANS = 0 ;
:ZANSDES = '' ;
SELECT QUESTLINES.ANSNUM, ZCLA_PLOTCOMPONENT, ANSDES
INTO :ZANSWER , :ZTRANS, :ZANSDES
FROM  QUESTLINES , QUESTIONS, CUSTNOTESB, ANSWERS
WHERE QUESTLINES.QUESTNUM = :ZQUESTION
AND   CUSTNOTESB.QUESTF   = QUESTIONS.QUESTF
AND   ANSWERS.QUESTF      = QUESTIONS.QUESTF
AND   ANSWERS.QUESTNUM    = QUESTIONS.QUESTNUM
AND   QUESTLINES.QUESTNUM = QUESTIONS.QUESTNUM
AND   QUESTLINES.ANSNUM   = ANSWERS.ANSNUM
AND   CUSTNOTESB.CUSTNOTE = QUESTLINES.DOC * (-1)
AND   DOC                 = :$.CUSTNOTE * (-1)
;
/* get qty answer from next question */
:ZQTYANSWER = '' ;
SELECT ANSDES INTO :ZQTYANSWER
FROM  QUESTLINES , QUESTIONS, CUSTNOTESB, ANSWERS
WHERE QUESTLINES.QUESTNUM = :ZQUESTION + 1
AND   CUSTNOTESB.QUESTF   = QUESTIONS.QUESTF
AND   ANSWERS.QUESTF      = QUESTIONS.QUESTF
AND   ANSWERS.QUESTNUM    = QUESTIONS.QUESTNUM
AND   QUESTLINES.QUESTNUM = QUESTIONS.QUESTNUM
AND   QUESTLINES.ANSNUM   = ANSWERS.ANSNUM
AND   CUSTNOTESB.CUSTNOTE = QUESTLINES.DOC * (-1)
AND   DOC                 = :$.CUSTNOTE * (-1)
;
INSERT INTO STACK4 (KEY, INTDATA, INTDATA2, REALDATA3, DETAILS)
SELECT :ZTRANS , :ZQUESTION, :ZANSWER, ATOR(:ZQTYANSWER) , :ZANSDES
FROM DUMMY
WHERE :ZQTYANSWER <> ''
;
:ZPREVNUM = :ZQUESTION + 1;
LOOP 120901 ;
LABEL 120902 ;
:GEN = '' ;
SELECT SQL.TMPFILE INTO :GEN FROM DUMMY ;
LINK GENERALLOAD TO :GEN ;
GOTO 999 WHERE :RETVAL <= 0 ;
/* create Sales Order header */
:ZCLA_CUST = 0 ;
SELECT CUSTOMERS.CUST INTO :ZCLA_CUST
FROM CUSTOMERS, CTYPE
WHERE CUSTOMERS.CTYPE = CTYPE.CTYPE
AND CTYPE.ZCLA_INTERNALCUST = 'Y'
;
/* get teamleader */
:ZCLA_TLNAME = :ZCLA_USERLOGIN = '' ;
:ZCLA_WARHS = :ZCLA_USER = 0 ;
SELECT SNAME, USERB INTO :ZCLA_TLNAME, :ZCLA_USER
FROM USERSB
WHERE USERB > 0
AND USER = SQL.USER
;
/* get warehouse */
SELECT WARHS
INTO :ZCLA_WARHS
FROM USERSA, USERSB
WHERE USERSB.SNAME = :ZCLA_TLNAME
AND USERSA.USERB = USERSB.USERB
;
/* get Cat. A type of sale */
:ZCLA_TYPE = 0 ;
SELECT CPROFTYPE INTO :ZCLA_TYPE
FROM CPROFTYPES
WHERE  ZCLA_CATA = 'Y'
;
/* get doc and fix number */
:ZCLA_DOC = 0 ;
:ZCLA_FIX = '' ;
SELECT :$.DOCA, :$.WBS
INTO :ZCLA_DOC, :ZCLA_FIX
FROM DUMMY
;
INSERT INTO GENERALLOAD (LINE, RECORDTYPE, INT1, TEXT5, INT2, INT3,
TEXT10, INT4, TEXT14)
SELECT 1, '1', :ZCLA_CUST, :ZCLA_TLNAME, :ZCLA_DOC, :ZCLA_WARHS,
:ZCLA_TLNAME, :ZCLA_TYPE, :ZCLA_FIX
FROM DUMMY
;
/* start loop to enter all lines require SO */
:ZLASTLN = 0 ;
LABEL 400 ;
:ZLN = 0 ;
SELECT MIN(KEY) INTO :ZLN
FROM STACK4
WHERE KEY > :ZLASTLN
;
GOTO 300 WHERE :RETVAL <= 0 ;
GOTO 500 WHERE NOT EXISTS (SELECT 'X'
FROM STACK4
WHERE KEY = :ZLN
AND DETAILS  IN ('MFK', 'FAULTY', 'WRONG')
);
:ZCLA_MAX = 0 ;
SELECT MAX(LINE) INTO :ZCLA_MAX FROM GENERALLOAD ;
INSERT INTO GENERALLOAD (LINE, RECORDTYPE, INT1, INT2, REAL1, DATE1)
SELECT :ZCLA_MAX + 1 , '2', TRANSORDER.PART , INTQUANT(REALDATA3),
PARTPRICE.PRICE, SQL.DATE + 24:00
FROM STACK4, TRANSORDER, PARTPRICE
WHERE KEY = TRANSORDER.TRANS
AND PARTPRICE.PART = TRANSORDER.PART
AND KEY > 0
AND KEY = :ZLN
;
/* add wbs */
INSERT INTO GENERALLOAD (LINE, RECORDTYPE, INT1, TEXT5)
SELECT :ZCLA_MAX + 2, '3', :ZCLA_DOC, :ZCLA_FIX
FROM DUMMY
;
LABEL 500 ;
:ZLASTLN = :ZLN ;
LOOP 400 ;
LABEL 300 ;
GOTO 100 WHERE NOT EXISTS (SELECT 'X'
FROM GENERALLOAD WHERE RECORDTYPE = '2')
;
SELECT * FROM GENERALLOAD TABS '../../GIDONBUF2.TXT';
EXECUTE INTERFACE 'ZCLA_SOFIXBOM', SQL.TMPFILE, '-L' , :GEN;
/* Error Logging */
:i_LOGGEDBY = 'ZCLA_SOFIXBOM';
#INCLUDE func/ZEMG_ERRMSGLOG
DELETE FROM GENERALLOAD
WHERE RECORDTYPE = '2'
;
DELETE FROM GENERALLOAD
WHERE RECORDTYPE = '3'
;
UPDATE GENERALLOAD
SET KEY1 = '\0', KEY2 = '\0', LOADED = '\0'
WHERE RECORDTYPE = '1'
;
LABEL 100 ;
/* create a new customer return */
/* start loop to enter all lines require CR */
:ZLASTLN = 0 ;
LABEL 600 ;
:ZLN = 0 ;
SELECT MIN(KEY) INTO :ZLN
FROM STACK4
WHERE KEY > :ZLASTLN
;
GOTO 700 WHERE :RETVAL <= 0 ;
GOTO 800 WHERE NOT EXISTS (SELECT 'X'
FROM STACK4
WHERE KEY = :ZLN
AND DETAILS  IN ('FAULTY', 'WRONG')
);
:ZCLA_MAX = 0 ;
SELECT MAX(LINE) INTO :ZCLA_MAX FROM GENERALLOAD ;
INSERT INTO GENERALLOAD (LINE, RECORDTYPE, INT1, INT2, TEXT11)
SELECT :ZCLA_MAX + 1 , '2', PART , INTQUANT(REALDATA3), DETAILS
FROM STACK4, TRANSORDER
WHERE KEY = TRANSORDER.TRANS
AND KEY > 0
AND KEY = :ZLN
;
/* add wbs */
INSERT INTO GENERALLOAD (LINE, RECORDTYPE, INT1, TEXT5)
SELECT :ZCLA_MAX + 2, '3', :ZCLA_DOC, :ZCLA_FIX
FROM DUMMY
;
LABEL 800 ;
:ZLASTLN = :ZLN ;
LOOP 600 ;
LABEL 700 ;
GOTO 900 WHERE NOT EXISTS (SELECT 'X'
FROM GENERALLOAD WHERE RECORDTYPE = '2')
;
SELECT
LINE, RECORDTYPE, INT1, TEXT5, INT2, INT3,
TEXT10, INT4, TEXT14, TEXT11
FROM GENERALLOAD TABS ADDTO '../../NEWGEN.TXT';
EXECUTE INTERFACE 'ZCLA_OPENCUSTRETURN', SQL.TMPFILE, '-L' , :GEN;
/* Error Logging */
:i_LOGGEDBY = 'ZCLA_OPENCUSTRETURN';
#INCLUDE func/ZEMG_ERRMSGLOG
LABEL 900 ;
UNLINK STACK4 ;
UNLINK GENERALLOAD ;
LABEL 999 ;
/*????? ???? ????? ??? ?????? ?????*/
:PUSH = '';
SELECT SOF_PUSH INTO :PUSH
FROM CUSTNOTESTATUSES
WHERE STATDES = :$.STATDES;
GOTO 231219 WHERE :PUSH <> 'Y';
/*????? ?????*/
:URL = 'https://exp.host/--/api/v2/push/send';
:RESPONCE = '../../SYSTEM/TMP/RESPONCE.TXT';
:WSMSG = '../../SYSTEM/TMP/WSMSG.TXT';
:EXPO ='C:\TMP\EXPO.TXT';
:EXPO1 = '../../SYSTEM/TMP/EXPO1.TXT';
:EXPO2 = '../../SYSTEM/TMP/EXPO2.TXT';
SELECT SQL.TMPFILE INTO :RESPONCE FROM DUMMY;
SELECT SQL.TMPFILE INTO :WSMSG FROM DUMMY;
:NOTABSTITLE = 1;
:EMAIL = '';
SELECT :$.EMAIL INTO :EMAIL FROM DUMMY;
:WORKER = '';
SELECT RESTLOGIN INTO :WORKER
FROM USERSB ,USERS
WHERE USERSB.USER = USERS.USER AND
USERS.USERLOGIN = :$.USERLOGIN;
:TOKEN = '';
:TASK = '';
SELECT ENTMESSAGE('CUSTNOTESA','F',450) INTO :TASK FROM DUMMY;
:TASK = STRCAT(ITOA(:$.CUSTNOTE),' ',:TASK);
SELECT PUSHTOKEN INTO :TOKEN
FROM SOF_TOKENUSERS
WHERE EMAIL = (:EMAIL <> '' ? :EMAIL  : (:WORKER <> '' ? :WORKER :
:$.USERLOGIN));
SELECT '{'
FROM DUMMY TABS UNICODE '../../SYSTEM/TMP/EXPO1.TXT';
SELECT STRCAT('!to!',':',' ',
'!',:TOKEN,'!',',')
FROM DUMMY TABS UNICODE ADDTO '../../SYSTEM/TMP/EXPO1.TXT';
SELECT STRCAT('!sound!',':','!default!',',')
FROM DUMMY TABS UNICODE ADDTO '../../SYSTEM/TMP/EXPO1.TXT';
SELECT STRCAT('!title!',':')
FROM DUMMY TABS UNICODE ADDTO '../../SYSTEM/TMP/EXPO1.TXT';
SELECT STRCAT('!',:TASK,'!' )
FROM DUMMY  TABS UNICODE ADDTO '../../SYSTEM/TMP/EXPO1.TXT';
SELECT STRCAT(',')
FROM DUMMY  TABS UNICODE ADDTO '../../SYSTEM/TMP/EXPO1.TXT';
SELECT STRCAT('!body!',':')
FROM DUMMY  TABS UNICODE ADDTO '../../SYSTEM/TMP/EXPO1.TXT';
SELECT STRCAT('!',:$.SUBJECT,'!')
FROM DUMMY  TABS UNICODE ADDTO '../../SYSTEM/TMP/EXPO1.TXT';
SELECT '}'
FROM DUMMY TABS UNICODE ADDTO '../../SYSTEM/TMP/EXPO1.TXT';
EXECUTE FILTER '-replace' ,'!' ,'"', :EXPO1 ,:EXPO2 ;
EXECUTE WSCLIENT :URL, :EXPO2, :RESPONCE, '-msg', :WSMSG,
'-head2', :HEAD2, '-method', 'POST',
'-content', 'application/json' ;
LABEL 231219;
/**/
:GNL = '' ;
SELECT SQL.TMPFILE
INTO   :GNL
FROM   DUMMY ;
LINK GENERALLOAD TO :GNL ;
GOTO 2411 WHERE :RETVAL <= 0 ;
/*First Remove any Records that are already there added by this
procedure*/
INSERT INTO GENERALLOAD (LINE, RECORDTYPE, INT1)
SELECT SQL.LINE, '1', :$.IV
FROM   DUMMY ;
/*Now Add lines*/
INSERT INTO GENERALLOAD (LINE, RECORDTYPE, INT1, INT2)
SELECT SQL.LINE + 1 , '@2', FNCITEMS.FNCTRANS, FNCITEMS.KLINE
FROM   FNCITEMS
WHERE  FNCITEMS.QIV = :$.IV ;
/**/
SELECT LINE, RECORDTYPE, INT1, INT2
FROM   GENERALLOAD
TABS ADDTO '../../NEILUNALLOCATE.TXT' ;
/**/
/* Remove Records */
EXECUTE INTERFACE 'ZCLA_UNALLOCATEIV', SQL.TMPFILE, '-L' , :GNL;
/* Error Logging */
:i_LOGGEDBY = 'ZCLA_UNALLOCATEIV';
#INCLUDE func/ZEMG_ERRMSGLOG
/*Now Clear Generalload*/
DELETE FROM GENERALLOAD ;
/**/
INSERT INTO GENERALLOAD (LINE, RECORDTYPE, INT1)
SELECT 1, '1', :$.IV
FROM   DUMMY ;
/**/
DECLARE @ZCLA_PROJACT CURSOR FOR
SELECT ZCLA_WBSIVITEMS.PROJACT
,      ZCLA_WBSIVITEMS.PRICE
FROM   ZCLA_WBSIVITEMS
WHERE  ZCLA_WBSIVITEMS.IV      = :$.IV
AND    ZCLA_WBSIVITEMS.INCLUDE = 'Y' ;
/**/
OPEN @ZCLA_PROJACT ;
GOTO 1989 WHERE :RETVAL <= 0 ;
/**/
LABEL 1990 ;
:ZCLA_PROJACT = 0 ;
:ZCLA_QPRICE = 0.0 ;
/**/
FETCH @ZCLA_PROJACT INTO :ZCLA_PROJACT, :ZCLA_QPRICE ;
GOTO 1991 WHERE :RETVAL <= 0 ;
:ZCLA_CURPRICE = 0.0 ;
:ZCLA_IVNUM = '' ;
:ZCLA_LINE = :ZLINE  = 0 ;
/*Select Max Line*/
SELECT MAX(LINE)
INTO   :ZLINE
FROM   GENERALLOAD ;
/*Are there any invoice linked to this projact ?*/
SELECT INVOICES.IVNUM
INTO   :ZCLA_IVNUM
FROM   PROJLINK, INVOICEITEMS, INVOICES
WHERE  PROJLINK.TYPE    = 'I'
AND    PROJLINK.PROJACT = :ZCLA_PROJACT
AND    PROJLINK.IV      = INVOICES.IV
AND    PROJLINK.IV      = INVOICEITEMS.IV
AND    PROJLINK.KLINE   = INVOICEITEMS.KLINE ;
/**/
SELECT :ZCLA_IVNUM FROM DUMMY TABS ADDTO '../../NEILVALUES.TXT' ;
GOTO 2711 WHERE :ZCLA_IVNUM <> '' ;
/*Insert amount to allocate to account*/
INSERT INTO GENERALLOAD (LINE, RECORDTYPE, REAL1, TEXT3, INT1)
SELECT :ZLINE + 1 , '2', :ZCLA_QPRICE, ACCOUNTS.ACCNAME,
:ZCLA_PROJACT
FROM   PROJACTS, DOCUMENTS, CUSTOMERS, ACCOUNTS
WHERE  PROJACTS.PROJACT  = :ZCLA_PROJACT
AND    PROJACTS.DOC      = DOCUMENTS.DOC
AND    DOCUMENTS.CUST    = CUSTOMERS.CUST
AND    CUSTOMERS.ACCOUNT = ACCOUNTS.ACCOUNT ;
/**/
LOOP 1990 ;
LABEL 2711 ;
/*Is this invoice already in GENERALLOAD*/
SELECT GENERALLOAD.LINE, GENERALLOAD.REAL1
INTO   :ZCLA_LINE, :ZCLA_CURPRICE
FROM   GENERALLOAD
WHERE  GENERALLOAD.TEXT1      = :ZCLA_IVNUM
AND    GENERALLOAD.RECORDTYPE = '2' ;
/*If invoice is not already in table then add*/
GOTO 2511 WHERE :ZCLA_LINE <= 0 ;
/*If Invoice is in table then update invoice amount being paid*/
UPDATE GENERALLOAD
SET    REAL1 = :ZCLA_CURPRICE + :ZCLA_QPRICE
WHERE  GENERALLOAD.LINE = :ZCLA_LINE ;
/**/
GOTO 2611 ;
/*Add new line for this invoice*/
/**/
LABEL 2511 ;
INSERT INTO GENERALLOAD (LINE, RECORDTYPE, TEXT1, REAL1, TEXT3,
TEXT2, INT1)
SELECT :ZLINE + 1, '2', :ZCLA_IVNUM, :ZCLA_QPRICE,
ACCOUNTS.ACCNAME
,      'MSH', :ZCLA_PROJACT
FROM   INVOICES, CUSTOMERS, ACCOUNTS
WHERE  INVOICES.IVNUM    = :ZCLA_IVNUM
AND    INVOICES.CUST     = CUSTOMERS.CUST
AND    CUSTOMERS.ACCOUNT = ACCOUNTS.ACCOUNT ;
LABEL 2611 ;
/**/
LOOP 1990 ;
/**/
LABEL 1991 ;
CLOSE @ZCLA_PROJACT ;
/**/
/* Load allocations */
EXECUTE INTERFACE 'ZCLA_ALLOCATEIV', SQL.TMPFILE, '-L' , :GNL;
/* Error Logging */
:i_LOGGEDBY = 'ZCLA_ALLOCATEIV';
#INCLUDE func/ZEMG_ERRMSGLOG
/**/
LABEL 1989 ;
/**/
UNLINK GENERALLOAD ;
LABEL 2411 ;
/*  Copy FROM customer TO project
*/
#INCLUDE func/ZCLA_DEBUGUSR
SELECT 'ZCLA_COPYHOUSE/130' FROM DUMMY
WHERE :DEBUG = 1 FORMAT ADDTO :DEBUGFILE
;
:DOC = 0 ;
SELECT DOC INTO :DOC
FROM DOCUMENTS
WHERE 0=0
AND   DOCNO = :$.PRJ
AND   TYPE = 'p'
;
/* Check exists
*/
:NAM = :DOCNO = '' ;
SELECT TYPENAME INTO :NAM
FROM ZCLA_HOUSETYPE
WHERE 0=0
AND   HOUSETYPEID  = :$.HS
;
SELECT DOCPROJ.PROJDES INTO :DOCNO
FROM DOCUMENTS , DOCPROJ
WHERE 0=0
AND   DOCUMENTS.DOC = DOCPROJ.DOC
AND   DOCUMENTS.DOC = :DOC
;
SELECT :NAM , :DOCNO
INTO :PAR1, :PAR2
FROM DUMMY ;
ERRMSG 800 WHERE EXISTS (
SELECT 'x'
FROM ZCLA_HOUSETYPE
WHERE 0=0
AND   DOC = :DOC
AND   TYPENAME = :NAM
);
/* */
SELECT :DOC , :$.HS , :$.PRJ
FROM DUMMY
FORMAT ADDTO :DEBUGFILE
;
SELECT SQL.TMPFILE
INTO :GEN FROM DUMMY;
LINK GENERALLOAD TO :GEN;
ERRMSG 1 WHERE :RETVAL = 0
;
/*
*/
:LN = 0 ;
/* insert Proj line
*/
SELECT MAX(LINE) + 1 INTO :LN FROM GENERALLOAD;
INSERT INTO GENERALLOAD (LINE , RECORDTYPE, KEY1)
SELECT :LN , '1' , ITOA(:DOC)
FROM DUMMY
;
SELECT MAX(LINE) + 1 INTO :LN FROM GENERALLOAD ;
INSERT INTO GENERALLOAD (LINE , RECORDTYPE, INT1, INT2, INT3, INT4 ,
CHAR1 , CHAR2 , TEXT1, TEXT2 , CHAR3 , TEXT3 )
SELECT :LN
,   '6'
,   :DOC
,   EL
,   HOUSETYPEID
,   COL
,   '¬'
,   'Y'
,   TYPENAME
,   TYPEDES
,   'Y'
,   STYLE
FROM ZCLA_HOUSETYPE
WHERE 0=0
AND   HOUSETYPEID  = :$.HS
;
#INCLUDE func/ZCLA_RESETERR
EXECUTE INTERFACE 'ZCLA_LOADPLOT', SQL.TMPFILE, '-L', :GEN
;
SELECT LINE, RECORDTYPE , KEY1 , LOADED , INT1, INT2, INT3, INT4 ,
CHAR1 , CHAR2 , TEXT1, TEXT2 , TEXT3
FROM GENERALLOAD
WHERE :DEBUG = 1
FORMAT ADDTO :DEBUGFILE
;
#INCLUDE func/ZCLA_ERRMSG
UNLINK GENERALLOAD ;
/* Error if this is a core
*/
#INCLUDE func/ZCLA_DEBUGUSR
:CORE = :MISSING = '\0' ;
LINK ZCLA_HOUSETYPE TO :$.PAR;
ERRMSG 1 WHERE :RETVAL <= 0;
SELECT CORE , ZCLA_MISSINGREPL, HOUSETYPEID
INTO :CORE , :MISSING, :ZGEM_HOUSETYPEID
FROM ZCLA_HOUSETYPE
WHERE HOUSETYPEID <> 0 ;
SELECT 'ZCLA_ADDPLOT', :CORE , :MISSING, :ZGEM_HOUSETYPEID
FROM DUMMY
FORMAT ADDTO :DEBUGFILE;
ERRMSG 800 WHERE :CORE = 'Y'
;
ERRMSG 801 WHERE :MISSING = 'Y'
;
/*GergoM | 24/11/23 | Contract NOT in edit error*/
ERRMSG 802 WHERE EXISTS (
SELECT CONTRACTDES, STATDES1, CS.EDITFLAG
FROM ZCLA_CONTRACTEL CE
, ZCLA_CONTRACTS C
, ZCLA_HOUSETYPE H
, ZCLA_CONTRACTSTATUSE CS
WHERE H.HOUSETYPEID = :ZGEM_HOUSETYPEID
AND CE.EL = H.EL
AND CE.CONTRACT = C.CONTRACT
AND C.DOC = H.DOC
AND C.STEPSTATUS = CS.STEPSTATUS
AND CS.EDITFLAG <> 'Y'
)
;
UNLINK ZCLA_HOUSETYPE;
/*
*/
/* */
#INCLUDE func/ZCLA_DEBUGUSR
SELECT 'ZCLA_RECLAC/STEP1'
FROM DUMMY
WHERE :DEBUG = 1
FORMAT ADDTO :DEBUGFILE ;
/*
*/
LINK ZCLA_HOUSETYPE TO :$.PAR;
ERRMSG 1 WHERE :RETVAL = 0 ;
/*
*/
:HOUSETYPE = 0 ;
SELECT HOUSETYPEID
INTO :HOUSETYPE
FROM ZCLA_HOUSETYPE
WHERE HOUSETYPEID  <> 0 ;
UNLINK ZCLA_HOUSETYPE
;
#INCLUDE ZCLA_HOUSETYPE/RECALC
/* */
#INCLUDE func/ZCLA_DEBUGUSR
SELECT 'ZCLA_RECLAC/ZCLA_ELEMENT'
FROM DUMMY
WHERE :DEBUG = 1
FORMAT ADDTO :DEBUGFILE ;
/*
*/
LINK PROJACTS TO :$.PAR;
ERRMSG 1 WHERE :RETVAL = 0 ;
/*
*/
:ELEMENT = 0 ;
SELECT PROJACT
INTO :ELEMENT
FROM PROJACTS
WHERE PROJACT <> 0 ;
UNLINK PROJACTS
;
/*
*/
#INCLUDE ZCLA_ELACT/RECALC
/********************************
Profit Margin
*********************************/
/*INPUT:
:HOUSETYPE
*/
/*OUTPUT:
:ZGEM_MARGINADJUST  Margin Adjustment
:ZGEM_PROFITMARGIN  Profit Margin
:ZGEM_FINALMARGIN   Profit Margin after applying the adjustment
*/
:ZGEM_MARGINADJUST = :ZGEM_FINALMARGIN = :ZGEM_PROFITMARGIN = 0.00;
/*Element Default*/
SELECT PE.MARKUP / 100 + 1
INTO :ZGEM_PROFITMARGIN
FROM ZCLA_HOUSETYPE H
, ZCLA_PLOTELEMENT PE
WHERE H.HOUSETYPEID = :HOUSETYPE
AND PE.EL = H.EL
;
/*Use site markap if exists*/
SELECT SS.MARKUP / 100 + 1
INTO :ZGEM_PROFITMARGIN
FROM ZCLA_CONTRACTEL CE
, ZCLA_CONTRACTS C
, ZCLA_HOUSETYPE H
, ZCLA_SITEELSPLIT SS
WHERE H.HOUSETYPEID = :HOUSETYPE
AND CE.EL = H.EL
AND CE.CONTRACT = C.CONTRACT
AND C.DOC = H.DOC
AND C.DOC = SS.DOC
AND SS.ELTYPE = CE.EL
AND SS.MARKUP <> 0
;
/*Discount on House Type*/
SELECT ZGEM_MARDISCOUNT / 100
, :ZGEM_PROFITMARGIN + ZGEM_MARDISCOUNT / 100
INTO :ZGEM_MARGINADJUST
, :ZGEM_FINALMARGIN
FROM ZCLA_HOUSETYPE
WHERE HOUSETYPEID = :HOUSETYPE
;
SELECT 'PROFIT MARGIN', :ZGEM_PROFITMARGIN, :ZGEM_MARGINADJUST
, :ZGEM_FINALMARGIN
FROM DUMMY
WHERE :DEBUG = 1
FORMAT ADDTO :DEBUGFILE
;
SELECT '>>> BEGIN SPLIT', :HOUSETYPE
FROM DUMMY FORMAT ADDTO :DEBUGFILE ;
/*
Update Housetype PRICE Totals */
SELECT ZCLA_TOTPRICE INTO :ZCLA_TOTPRICE
FROM ZCLA_HOUSETYPE
WHERE   HOUSETYPEID = :HOUSETYPE ;
SELECT 'HOUSETYPE PRICE', :ZCLA_TOTPRICE
FROM DUMMY
FORMAT ADDTO :DEBUGFILE
;
/*
Get Split and Markup */
SELECT SQL.TMPFILE INTO :SPLIT FROM DUMMY ;
LINK ZCLA_SPLIT TO :SPLIT;
ERRMSG 1 WHERE :RETVAL = 0 ;
/*--*/
#INCLUDE ZCLA_HOUSETYPE/ZCLA_BUF10
SELECT * FROM ZCLA_SPLIT
FORMAT ADDTO :DEBUGFILE ;
/*
*/
DECLARE @PRICE CURSOR FOR
SELECT FIXID
,   :ZCLA_TOTPRICE * SPLIT
FROM   ZCLA_SPLIT
;
OPEN @PRICE;
GOTO 26069 WHERE :RETVAL = 0 ;
LABEL 26061 ;
:FIXACT = 0 ;
:ZCLA_TOTPRICE = 0.0 ;
FETCH @PRICE INTO :FIXACT , :ZCLA_TOTPRICE ;
GOTO 26068 WHERE :RETVAL = 0 ;
/*
*/
SELECT 'PRICE>>'
, :ELEMENT , :FIXACT , :ZCLA_TOTPRICE
FROM DUMMY
WHERE :DEBUG = 1
FORMAT ADDTO :DEBUGFILE
;
UPDATE ZCLA_HOUSETYPEFIX
SET ZCLA_TOTPRICE = :ZCLA_TOTPRICE
WHERE 0=0
AND   HOUSETYPEID  = :HOUSETYPE
AND   FIXID  = :FIXACT ;
/*
*/
LOOP 26061 ;
LABEL 26068 ;
CLOSE @PRICE ;
LABEL 26069 ;
/*
*/
UNLINK ZCLA_SPLIT ;
/******************************
Update Houset Type Total Price
*/
:TOTPRICE = 0.0;
SELECT SUM(ZCLA_TOTPRICE)
INTO :TOTPRICE
FROM ZCLA_HOUSETYPEFIX
WHERE HOUSETYPEID = :HOUSETYPE
;
UPDATE ZCLA_HOUSETYPE
SET    ZCLA_TOTPRICE = :TOTPRICE
WHERE  ZCLA_HOUSETYPE.HOUSETYPEID = :HOUSETYPE
;
/************************
Get Constants
************************/
/*INPUT
:HOUSETYPE*/
/*
Get Sundry Credit */
:SUNDRYCREDIT = 0.0 ;
SELECT 1 + VALUE
INTO :SUNDRYCREDIT
FROM ZCLA_CONST
WHERE NAME = 'SUNDRYCREDIT'
;
/*
Get Travel Constants */
:SAFETYMARGIN = :FULLPOINTS = :TRAVELCOST = 0.0 ;
#INCLUDE ZCLA_TRAVELCONST/ZCLA_BUF1
/**************************
If contract is locked do not update
**************************/
:UPDATENOPACK = 1;
SELECT 0
INTO :UPDATENOPACK
FROM   ZCLA_CONTRACTS
,      ZCLA_CONTRACTEL
,      ZCLA_CONTRACTSTATUSE
,      ZCLA_HOUSETYPE
WHERE 0 = 0
AND   ZCLA_CONTRACTS.CONTRACT = ZCLA_CONTRACTEL.CONTRACT
AND   ZCLA_CONTRACTS.STEPSTATUS = ZCLA_CONTRACTSTATUSE.STEPSTATUS
AND   ZCLA_CONTRACTEL.EL = ZCLA_HOUSETYPE.EL
AND   ZCLA_CONTRACTS.DOC = ZCLA_HOUSETYPE.DOC
AND   ZCLA_CONTRACTSTATUSE.STATLOCK = 'Y'
AND   ZCLA_HOUSETYPE.HOUSETYPEID = :HOUSETYPE
AND   ZCLA_HOUSETYPE.ZCLA_TOTPRICE > 0
;
SELECT 'CONSTANTS'
, :SAFETYMARGIN
, :ZCLA_MILESTOSITE
, :ZCLA_TIMETOSITE
, :MILEAGE
, :TRAVELCOST
, :FULLPOINTS
, :UPDATENOPACK
FROM DUMMY
WHERE :DEBUG = 1
FORMAT ADDTO :DEBUGFILE ;
/* :HOUSETYPE = 2 ;
UPDATE House Type Uplift : BY HOUSETYPE
*/
#INCLUDE func/ZCLA_DEBUGUSR
SELECT 'ZCLA_CHARACTERISTIC/ZCLA_HOUSETYPE' , :HOUSETYPE
FROM DUMMY
WHERE :DEBUG = 1
FORMAT ADDTO :DEBUGFILE ;
/*
*/
:NAME = '';
:FIXID = 0 ;
:MOD_HT = :HTUPLIFT = 0.0 ;
/* reset fix Modifier Value */
UPDATE ZCLA_HOUSETYPEFIX
SET MOD_HT = 0
WHERE 0=0
AND   HOUSETYPEID = :HOUSETYPE
;
/* Cursor
*/
DECLARE @HT2 CURSOR FOR
SELECT ZCLA_UPLIFTSPERFIX.UPLIFT
,   ZCLA_UPLIFTSPERFIX.FIXID
,   STRCAT(ZCLA_CHARACTERISTIC.CHARNAME
,   '|'
,   ZCLA_CHARPERMITVALS.VALUE
)
FROM ZCLA_HTCHARS , ZCLA_CHARACTERISTIC, ZCLA_CHARPERMITVALS ,
ZCLA_UPLIFTSPERFIX
WHERE 0=0
AND   ZCLA_CHARPERMITVALS.CHARID = ZCLA_CHARACTERISTIC.CHARID
AND   ZCLA_HTCHARS.CHARID = ZCLA_CHARACTERISTIC.CHARID
AND   ZCLA_HTCHARS.VALUEID = ZCLA_UPLIFTSPERFIX .VALUEID
AND   ZCLA_HTCHARS.VALUEID = ZCLA_CHARPERMITVALS.VALUEID
AND   HOUSETYPEID = :HOUSETYPE
AND   ZCLA_UPLIFTSPERFIX.UPLIFT <> 0
AND   INACTIVE <> 'Y'
;
OPEN @HT2 ;
GOTO 99 WHERE :RETVAL = 0 ;
LABEL 100;
FETCH @HT2 INTO :HTUPLIFT , :FIXID , :NAME;
GOTO 200 WHERE :RETVAL = 0;
/*
*/
SELECT  :HTUPLIFT , :FIXID , :NAME
FROM DUMMY
WHERE :DEBUG = 1
FORMAT ADDTO :DEBUGFILE ;
/*
*/
SELECT MOD_HT INTO :MOD_HT
FROM ZCLA_HOUSETYPEFIX
WHERE 0=0
AND   FIXID = :FIXID
AND   HOUSETYPEID = :HOUSETYPE
;
/*GergoM | 06/12/23 | The points were incorrect*/
UPDATE ZCLA_HOUSETYPEFIX
SET MOD_HT = (1 + ((
(:MOD_HT = 0.0 ? 0.0 : :MOD_HT - 1)
+
(:HTUPLIFT = 0.0 ? 0.0 : :HTUPLIFT - 1))))
WHERE 0=0
AND   FIXID = :FIXID
AND   HOUSETYPEID = :HOUSETYPE
;
/*
*/
LOOP 100;
LABEL 200;
CLOSE @HT2 ;
LABEL 99;
/* :ELEMENT = 238 ;
UPDATE House Type Uplift : BY ELEMENT
*/
#INCLUDE func/ZCLA_DEBUGUSR
SELECT 'ZCLA_CHARACTERISTIC/ZCLA_ELEMENT' , :ELEMENT
FROM DUMMY
WHERE :DEBUG = 1
FORMAT ADDTO :DEBUGFILE ;
/*
*/
:NAME = '';
:HOUSETYPE = :FIXID = 0 ;
:MOD_HT = :HTUPLIFT = 0.0 ;
/* reset fix Modifier Value */
UPDATE PROJACTS
SET MOD_HT = 0
WHERE 0=0
AND   ZCLA_PLOT = :ELEMENT
;
/* Cursor
*/
DECLARE @HT2 CURSOR FOR
SELECT HOUSETYPEID
,   ZCLA_UPLIFTSPERFIX.UPLIFT
,   ZCLA_UPLIFTSPERFIX.FIXID
,   STRCAT(ZCLA_CHARACTERISTIC.CHARNAME
,   '|'
,   ZCLA_CHARPERMITVALS.VALUE
)
FROM ZCLA_HTCHARS , ZCLA_CHARACTERISTIC, ZCLA_CHARPERMITVALS ,
ZCLA_UPLIFTSPERFIX , PROJACTS
WHERE 0=0
AND   ZCLA_CHARPERMITVALS.CHARID = ZCLA_CHARACTERISTIC.CHARID
AND   ZCLA_HTCHARS.CHARID = ZCLA_CHARACTERISTIC.CHARID
AND   ZCLA_HTCHARS.VALUEID = ZCLA_UPLIFTSPERFIX .VALUEID
AND   ZCLA_HTCHARS.VALUEID = ZCLA_CHARPERMITVALS.VALUEID
AND   PROJACTS.ZCLA_HOUSETYPEID = ZCLA_HTCHARS.HOUSETYPEID
AND   PROJACTS.PROJACT = :ELEMENT
AND   ZCLA_UPLIFTSPERFIX.UPLIFT <> 0
AND   INACTIVE <> 'Y'
;
OPEN @HT2 ;
GOTO 99 WHERE :RETVAL = 0 ;
LABEL 100;
FETCH @HT2 INTO :HOUSETYPE , :HTUPLIFT , :FIXID , :NAME;
GOTO 200 WHERE :RETVAL = 0;
/*
*/
SELECT :HOUSETYPE , :HTUPLIFT , :FIXID , :NAME
FROM DUMMY
WHERE :DEBUG = 1
FORMAT ADDTO :DEBUGFILE ;
/*
*/
SELECT MOD_HT INTO :MOD_HT
FROM PROJACTS
WHERE 0=0
AND   ZCLA_FIX = :FIXID
AND   ZCLA_PLOT = :ELEMENT
;
/*GergoM | 06/12/23 | The points were incorrect*/
UPDATE PROJACTS
SET MOD_HT = /*:MOD_HT + :HTUPLIFT*/
(1 + ((
(:MOD_HT = 0.0 ? 0.0 : :MOD_HT - 1)
+
(:HTUPLIFT = 0.0 ? 0.0 : :HTUPLIFT - 1))))
WHERE 0=0
AND   ZCLA_FIX = :FIXID
AND   ZCLA_PLOT = :ELEMENT
;
/*
*/
LOOP 100;
LABEL 200;
CLOSE @HT2 ;
LABEL 99;
/* */
#INCLUDE func/ZCLA_DEBUGUSR
SELECT 'ZCLA_PLOTROOMS/POST-INSERT'
FROM DUMMY
WHERE :DEBUG = 1
FORMAT ADDTO :DEBUGFILE ;
#INCLUDE ZCLA_FIXACT/ZCLA_FORMVAR
/*
*/
UPDATE PROJACTS
SET ZCLA_DOREFRESH = 'Y'
WHERE PROJACT = :ELEMENT ;
/* */
#INCLUDE PARTARC/ZCLA_ELEMREPLACE
/* */
#INCLUDE func/ZCLA_DEBUGUSR
SELECT 'ZCLA_PLOTROOMS/POST-UPDATE'
FROM DUMMY
WHERE :DEBUG = 1
FORMAT ADDTO :DEBUGFILE ;
#INCLUDE ZCLA_FIXACT/ZCLA_FORMVAR
/*
*/
UPDATE PROJACTS
SET ZCLA_DOREFRESH = 'Y'
WHERE PROJACT = :ELEMENT ;
/* */
#INCLUDE PARTARC/ZCLA_ELEMREPLACE
/* */
#INCLUDE func/ZCLA_DEBUGUSR
SELECT 'ZCLA_PLOTROOMS/POST-FORM'
FROM DUMMY
WHERE :DEBUG = 1
FORMAT ADDTO :DEBUGFILE ;
:ELEMENT = 0 ;
SELECT :$$.PROJACT INTO :ELEMENT
FROM DUMMY ;
/*
Skip if interface */
GOTO 261023 WHERE :FORM_INTERFACE = 1 ;
/*
Skip if no changes */
GOTO 261023 WHERE NOT EXISTS (
SELECT 'x' FROM PROJACTS
WHERE 0=0
AND   ZCLA_DOREFRESH = 'Y'
AND   PROJACT = :ELEMENT
);
/*
Run calculation */
#INCLUDE ZCLA_ELACT/RECALC
LABEL 261023 ;
/*
*/
#INCLUDE func/ZCLA_DEBUGUSR
SELECT 'ZCLA_PLOTROOMS/POST-UPDATE'
,     :$.PROJACT
,     :$.EDITTYPE
,     :$.GUID
,     :$.ROOM
,     :$.ROOMDES
FROM DUMMY
WHERE :DEBUG = 1
FORMAT ADDTO :DEBUGFILE;
/*
Log Updates */
:UPDTYPE = 'U' ;
/*
*/
GOSUB 1311231 WHERE :$1.STYLE <> :$.STYLE ;
/*
*/
SUB 1311231 ;
:FIELD = 'STYLE' ;
#INCLUDE ZCLA_ELEDIT/ZCLA_BUF1
GOSUB 1311233 ;
/*
*/
UPDATE ZCLA_ELEDITLOG
SET    INT1     = :$.COL
,      TEXT1    = :$.STYLE
,      INT2     = :$.SUP
,      ROOM     = :$.ROOM
,      ROOMDES  = :$.ROOMDES
,      OLDVALUE = :$1.STYLE
,      NEWVALUE = :$.STYLE
WHERE  0 = 0
AND    PROJACT  = :$.PROJACT
AND    EDITTYPE = :$.EDITTYPE
AND    GUID     = :$.GUID
AND    UPDTYPE  = :UPDTYPE
AND    FIELD    = :FIELD
AND    EDITID   = :OPENEDIT
;
RETURN ;
/*
*/
SUB 1311233 ;
SELECT :UPDTYPE , :FIELD , :OPENEDIT
FROM DUMMY WHERE :DEBUG = 1
FORMAT ADDTO :DEBUGFILE
;
RETURN ;
/*
:HOUSETYPE = 2 ;
:DOC = 4 ;
Update fix uplift by HOUSETYPE
*/
#INCLUDE func/ZCLA_DEBUGUSR
SELECT 'ZCLA_FIXES/ZCLA_HOUSETYPE' , :HOUSETYPE
FROM DUMMY
WHERE :DEBUG = 1
FORMAT ADDTO :DEBUGFILE ;
/*
*/
:FIXID = 0 ;
:FIXUPLIFT = 0.0 ;
/* Reset Values */
UPDATE ZCLA_HOUSETYPEFIX SET
ZCLA_FIXUPLIFT = 0
WHERE 0=0
AND   ZCLA_HOUSETYPEFIX.HOUSETYPEID = :HOUSETYPE
;
/*
*/
DECLARE @FIX79 CURSOR FOR
SELECT ZCLA_HOUSETYPEFIX.FIXID, ZCLA_FIXES.FIXUPLIFT
FROM  ZCLA_FIXES , ZCLA_HOUSETYPEFIX
WHERE 0=0
AND   ZCLA_FIXES.FIXID = ZCLA_HOUSETYPEFIX.FIXID
AND   ZCLA_HOUSETYPEFIX.HOUSETYPEID  = :HOUSETYPE
;
OPEN @FIX79 ;
GOTO 9999 WHERE :RETVAL = 0 ;
LABEL 5009;
FETCH @FIX79 INTO :FIXID , :FIXUPLIFT ;
GOTO 6009 WHERE :RETVAL = 0 ;
/*
*/
SELECT :FIXID , :FIXUPLIFT
FROM DUMMY
WHERE :DEBUG = 1
FORMAT ADDTO :DEBUGFILE ;
/*
*/
UPDATE ZCLA_HOUSETYPEFIX SET
ZCLA_FIXUPLIFT = :FIXUPLIFT
WHERE 0=0
AND   ZCLA_HOUSETYPEFIX.FIXID = :FIXID
AND   ZCLA_HOUSETYPEFIX.HOUSETYPEID = :HOUSETYPE ;
/*
*/
LOOP 5009 ;
LABEL 6009 ;
CLOSE @FIX79 ;
LABEL 9999 ;
/*
:ELEMENT = 42 ;
Update fix uplift by ELEMENT
*/
#INCLUDE func/ZCLA_DEBUGUSR
SELECT 'ZCLA_FIXES/ZCLA_ELEMENT' , :ELEMENT
FROM DUMMY
WHERE :DEBUG = 1
FORMAT ADDTO :DEBUGFILE ;
/*
*/
:FIXID = 0 ;
:FIXUPLIFT = 0.0 ;
/* Reset Values */
UPDATE PROJACTS SET
ZCLA_FIXUPLIFT = 0
WHERE 0=0
AND   PROJACTS.ZCLA_PLOT = :ELEMENT
;
/*
*/
DECLARE @FIX71 CURSOR FOR
SELECT PROJACTS.PROJACT, ZCLA_FIXES.FIXUPLIFT
FROM  ZCLA_FIXES , PROJACTS
WHERE 0=0
AND   ZCLA_FIXES.FIXID = PROJACTS.ZCLA_FIX
AND   ZCLA_PLOT = :ELEMENT
;
OPEN @FIX71 ;
GOTO 9999 WHERE :RETVAL = 0 ;
LABEL 5009;
FETCH @FIX71 INTO :FIXID , :FIXUPLIFT ;
GOTO 6009 WHERE :RETVAL = 0 ;
/*
*/
SELECT :FIXID , :FIXUPLIFT
FROM DUMMY
WHERE :DEBUG = 1
FORMAT ADDTO :DEBUGFILE ;
/*
*/
UPDATE PROJACTS SET
ZCLA_FIXUPLIFT = :FIXUPLIFT
WHERE PROJACT = :FIXID ;
/*
*/
LOOP 5009;
LABEL 6009;
CLOSE @FIX71 ;
LABEL 9999;
SELECT 'STEP 110' , :$.DOC
FROM DUMMY
FORMAT ADDTO '../ZCLA_COPYHOUSE.txt'
;
DELETE FROM ZCLA_USERCORECOPY
WHERE USER = SQL.USER;
/*Is the customer Parent or Region?*/
SELECT ZCLA_PARENT, PCUST
INTO :PARENTFLAG, :PARTENT
FROM CUSTOMERS
WHERE CUST = :$.DOC
;
INSERT INTO ZCLA_USERCORECOPY
(USER ,  PROJDES , DOCNO)
SELECT SQL.USER , PROJDES, DOCNO
FROM DOCUMENTS , DOCPROJ, CUSTOMERS C
WHERE 0=0
AND   DOCUMENTS.DOC = DOCPROJ.DOC
AND   DOCUMENTS.CUST = C.CUST
AND   (:PARENTFLAG = 'Y' ? 1 : C.CUST) = (:PARENTFLAG = 'Y' ? 1 :
:$.DOC)
AND   (:PARENTFLAG = 'Y' ? C.PCUST : 1) = (:PARENTFLAG = 'Y' ?
:$.DOC : 1)
;
SELECT *
FROM ZCLA_USERCORECOPY
WHERE USER = SQL.USER
FORMAT ADDTO '../ZCLA_COPYHOUSE.txt'
;
/* */
:PROJACT = 0 ;
#INCLUDE func/ZCLA_DEBUGUSR
/* */
SELECT
'ZCLA_UPDPLOT-STEP1'
FROM DUMMY
WHERE :DEBUG = 1
FORMAT ADDTO :DEBUGFILE ;
LINK ZCLA_HOUSETYPE TO :$.PAR;
ERRMSG 1 WHERE :RETVAL = 0 ;
/*
*/
/*GergoM | 13.11.23 | ALT -> :ALT */
:DOC = :HOUSETYPE = :ALT = 0 ;
:MISSING = '\0' ;
SELECT HOUSETYPEID , DOC , ZCLA_MISSINGREPL, ALT
INTO :HOUSETYPE , :DOC , :MISSING, :ALT
FROM ZCLA_HOUSETYPE
WHERE HOUSETYPEID <> 0 ;
UNLINK ZCLA_HOUSETYPE
;
ERRMSG 801 WHERE :MISSING = 'Y' ;
/*
Quit if the contract is locked */
ERRMSG 897 WHERE EXISTS (
SELECT 'x'
FROM ZCLA_CONTRACTS
,    ZCLA_CONTRACTSTATUSE
,    ZCLA_CONTRACTEL
,    ZCLA_HOUSETYPE
WHERE 0=0
AND  ZCLA_CONTRACTS.STEPSTATUS  =  ZCLA_CONTRACTSTATUSE.STEPSTATUS
AND  ZCLA_HOUSETYPE.EL = ZCLA_CONTRACTEL.EL
AND  ZCLA_CONTRACTEL.CONTRACT = ZCLA_CONTRACTS.CONTRACT
AND  ZCLA_CONTRACTS.DOC = :DOC
AND  ZCLA_HOUSETYPE.HOUSETYPEID = :HOUSETYPE
AND  ZCLA_CONTRACTSTATUSE.STATLOCK = 'Y'
);
/*
*/
DECLARE ELSEL CURSOR FOR
SELECT SITE.DOC AS SITE
,   PLOT.PROJACT AS PLOT
,   EL.PROJACT AS EL
FROM PROJACTS EL , PROJACTS PLOT , DOCUMENTS SITE , ZCLA_ELSTATUSES
WHERE 0 = 0
AND   SITE.DOC > 0
AND   EL.ZCLA_PLOT = PLOT.PROJACT
AND   PLOT.DOC = SITE.DOC
AND   EL.ZCLA_HOUSETYPEID = :HOUSETYPE
AND   EL.STEPSTATUS = ZCLA_ELSTATUSES.STEPSTATUS
;
OPEN ELSEL ;
:N = :RETVAL; :I = 0;
GOTO 1511239 WHERE :N <= 0;
LABEL 1511231;
:DOC = :PLOT = :ELEMENT = 0;
FETCH ELSEL INTO :DOC , :PLOT , :ELEMENT ;
GOTO 1511238 WHERE :RETVAL <= 0 ;
:I = :I + 1;
DISPLAY :I OF :N;
/*
Copy coponents */
SELECT 'Rebuilding >>' , :DOC , :PLOT , :ELEMENT , :ALT
FROM DUMMY WHERE :DEBUG = 1
FORMAT ADDTO :DEBUGFILE
;
#INCLUDE ZCLA_ELACT/ZCLA_BUF1
/*
*/
/*GergoM | 15.11.23 | Update Element*/
UPDATE PROJACTS
SET ZCLA_ALT = :ALT
WHERE PROJACT = :ELEMENT
;
/*
Run calculation */
SELECT 'Recalc >>' , :DOC , :PLOT , :ELEMENT
FROM DUMMY WHERE :DEBUG = 1
FORMAT ADDTO :DEBUGFILE
;
#INCLUDE ZCLA_ELACT/RECALC
/*
*/
LOOP 1511231 ;
LABEL 1511238 ;
CLOSE ELSEL ;
LABEL 1511239 ;
/*GergoM | 11.13.23 | Close HT edit */
:CLOSE_TOTCOST = 0.0;
SELECT ZCLA_TOTCOST
INTO :CLOSE_TOTCOST
FROM ZCLA_HOUSETYPE
WHERE HOUSETYPEID = :HOUSETYPE
;
UPDATE ZCLA_HTEDIT
SET CLOSEFLAG = 'Y'
,   CLOSEDATE = SQL.DATE
,   CLOSE_TOTCOST = :CLOSE_TOTCOST
WHERE 0=0
AND CLOSEFLAG <> 'Y'
;
/* */
#INCLUDE func/ZCLA_DEBUGUSR
SELECT 'ZCLA_RECLAC/ZCLA_PLOT'
FROM DUMMY
WHERE :DEBUG = 1
FORMAT ADDTO :DEBUGFILE ;
/*
*/
:ELEMENT = :PLOT = 0 ;
LINK PROJACTS TO :$.PAR;
ERRMSG 1 WHERE :RETVAL = 0 ;
SELECT PROJACT
INTO :PLOT
FROM PROJACTS
WHERE PROJACT <> 0 ;
UNLINK PROJACTS
;
DECLARE PLOTEL CURSOR FOR
SELECT  PROJACTS.PROJACT
FROM    PROJACTS
WHERE   0=0
AND     PROJACTS.ZCLA_PLOT = :PLOT
;
OPEN PLOTEL ;
GOTO 0110239 WHERE :RETVAL <= 0 ;
LABEL 0110231;
FETCH PLOTEL INTO :ELEMENT ;
GOTO 0110238 WHERE :RETVAL <= 0 ;
/*
*/
#INCLUDE ZCLA_ELACT/RECALC
/*
*/
LOOP 0110231 ;
LABEL 0110238 ;
CLOSE PLOTEL ;
LABEL 0110239 ;
LINK STACK4 TO :$.STK ;
GOTO 0602 WHERE :RETVAL <= 0 ;
/**/
INSERT INTO STACK4 (KEY, INTDATA , INTDATA2, INTDATA3, INTDATA4)
SELECT SQL.LINE, ZCLA_CONTRACTS.DOC, ZCLA_CONTRACTS.CONTRACT
,      ZCLA_CONTRACTS.CONTTYPEL, ZCLA_PROJACTSCH.PROJACTSCHED
FROM   ZCLA_CONTRACTS, ZCLA_PROJACTSCH, ZCLA_CONTRACTSCHEDUL
WHERE  ZCLA_CONTRACTSCHEDUL.IVDATE        > 01/01/88
AND    ZCLA_CONTRACTSCHEDUL.CONTRACTSCHED =
ZCLA_PROJACTSCH.CONTRACTSCHED
AND    ZCLA_CONTRACTSCHEDUL.CONTRACT      = ZCLA_CONTRACTS.CONTRACT
;
/**/
SELECT KEY, INTDATA , INTDATA2, INTDATA3, INTDATA4
FROM   STACK4
TABS  ADDTO '../../NEILSTACK4.TXT' ;
/**/
/************************/
/*Payment Cards Required*/
/************************/
/*Is a payment card required for this contract ?*/
/*if not then skip*/
/*****************/
/*Batch Documents*/
/*****************/
/**/
/**********/
/*COW Type*/
/*********/
/************************/
/*Cumulative Debt Report*/
/************************/
/****************/
/*Invoicing Type*/
/****************/
/**/
LABEL 0602 ;
UNLINK STACK4 ;
/* */
#INCLUDE func/ZCLA_DEBUGUSR
SELECT 'ZCLA_RECLAC/ZCLA_SITEHTS'
FROM DUMMY
WHERE :DEBUG = 1
FORMAT ADDTO :DEBUGFILE ;
/*
*/
LINK DOCUMENTS TO :$.PAR;
ERRMSG 1 WHERE :RETVAL = 0 ;
/*
*/
:DOC = 0 ;
SELECT DOC
INTO :DOC
FROM DOCUMENTS
WHERE DOC <> 0 ;
UNLINK DOCUMENTS
;
/*
loop housetypes */
DECLARE RECALCHT CURSOR FOR
SELECT  HOUSETYPEID
FROM    ZCLA_HOUSETYPE
WHERE   0=0
AND     DOC = :DOC
;
OPEN RECALCHT ;
GOTO 2401249 WHERE :RETVAL <= 0 ;
LABEL 2401241;
:HOUSETYPE = 0 ;
FETCH RECALCHT INTO :HOUSETYPE ;
GOTO 2401248 WHERE :RETVAL <= 0 ;
/*
*/
#INCLUDE ZCLA_HOUSETYPE/RECALC
/*
*/
LOOP 2401241 ;
LABEL 2401248 ;
CLOSE RECALCHT ;
LABEL 2401249 ;
/*
*/
#INCLUDE func/ZCLA_DEBUGUSR
SELECT SQL.TMPFILE
INTO :LNK FROM DUMMY ;
LINK ZODAT_LINK TO :$.PAR ;
ERRMSG 1 WHERE :RETVAL <= 0
;
SELECT TEXT1   AS USER
,      TEXT2   AS PRN
,      TEXT3   AS PREAUTH
,      INT1    AS CONTRACTSCHED
,      INT2    AS CATEGORY
,      TEXT21  AS URL
,      TEXT22  AS GUID
FROM ZODAT_LINK
FORMAT ADDTO :DEBUGFILE
;
/**/
LINK GENERALLOAD TO :$.GNL ;
GOTO 0205 WHERE :RETVAL <= 0 ;
/*Insert Document*/
INSERT INTO GENERALLOAD(LINE, RECORDTYPE, INT1)
SELECT SQL.LINE, '1', ZCLA_CONTRACTS.DOC
FROM   ZCLA_CONTRACTSCHEDUL, ZODAT_LINK, ZCLA_CONTRACTS
WHERE  ZCLA_CONTRACTSCHEDUL.CONTRACTSCHED = ZODAT_LINK.INT1
AND    ZCLA_CONTRACTSCHEDUL.CONTRACT      = ZCLA_CONTRACTS.CONTRACT
;
/*Insert Contract*/
INSERT INTO GENERALLOAD(LINE, RECORDTYPE, INT1)
SELECT SQL.LINE + 1, '2', ZCLA_CONTRACTSCHEDUL.CONTRACT
FROM   ZCLA_CONTRACTSCHEDUL, ZODAT_LINK
WHERE  ZCLA_CONTRACTSCHEDUL.CONTRACTSCHED = ZODAT_LINK.INT1 ;
/*Insert Contract Schedule*/
INSERT INTO GENERALLOAD(LINE, RECORDTYPE, INT1)
SELECT SQL.LINE + 2, '3', ZODAT_LINK.INT1
FROM   ZODAT_LINK ;
/**/
INSERT INTO GENERALLOAD(LINE, RECORDTYPE, INT1)
SELECT (SQL.LINE + 3) * 2 , '4', ZCLA_PROJACTSCH.PROJACTSCHED
FROM   ZCLA_PROJACTSCH, ZODAT_LINK
WHERE  ZCLA_PROJACTSCH.CONTRACTSCHED = ZODAT_LINK.INT1 ;
/*Insert Attachments*/
INSERT INTO GENERALLOAD (LINE, RECORDTYPE, TEXT1, TEXT2, INT1)
SELECT (((SQL.LINE + 3) * 2 ) + 1 ), '5', ZODAT_LINK.TEXT21, 'COW',
ZODAT_LINK.INT1
FROM   ZCLA_PROJACTSCH, ZODAT_LINK
WHERE  ZCLA_PROJACTSCH.CONTRACTSCHED = ZODAT_LINK.INT1 ;
/**/
SELECT LINE, RECORDTYPE, TEXT1, TEXT2, INT1
FROM   GENERALLOAD
TABS ADDTO '../../NEILCOW.TXT' ;
/**/
EXECUTE INTERFACE 'ZCLA_LOADCOW', SQL.TMPFILE, '-L' , :$.GNL ;
/* Error Logging */
:i_LOGGEDBY = 'ZCLA_LOADCOW';
#INCLUDE func/ZEMG_ERRMSGLOG
/**/
UNLINK AND REMOVE GENERALLOAD ;
LABEL 0205 ;
/*--*/
#INCLUDE func/ZCLA_DEBUGUSR
SELECT 'ZCLA_FIXACT/ZCLA_BUF8'
, ' Issue CAT C items'
, :$.STEPSTATUS
FROM DUMMY
WHERE :DEBUG = 1
FORMAT ADDTO :DEBUGFILE
;
GOTO 0106088
WHERE NOT EXISTS
(SELECT 'X'
FROM ZCLA_FIXSTATUSES
WHERE STEPSTATUS = :$.STEPSTATUS
AND CLOSEFLAG = 'Y')
;
/************************************************************/
/**  Issuing Sundries when fix is reported 100%            **/
/*   the procedure will create a shipping document         **/
/*   to credit the TL warehouse                            **/
/************************************************************/
:ZCLA_PROJACT = :ZCLA_CATAFNC = 0 ;
SELECT PROJACT , ZCLA_CATAFNCTRANS
INTO :ZCLA_PROJACT, :ZCLA_CATAFNC
FROM PROJACTS
WHERE PROJACT = :$.PROJACT
AND PROJACT > 0
;
/* ignore if journal already exists for this fix */
GOTO 010608 WHERE :$.ZCLA_CATCISSUED = 'Y';
SELECT 'ZCLA_FIXACT/ZCLA_BUF8', 'Sundry BOM',ZCLA_ROOM,
:ZCLA_PROJACT, PROJACT, SONPART, FREECHAR2
FROM PROJACTTREE
WHERE :DEBUG = 1
AND PROJACT = :ZCLA_PROJACT
AND ZCLA_ROOM = 0
FORMAT ADDTO :DEBUGFILE
;
/* ignore if there are no sundries in the fix */
GOTO 010608 WHERE NOT EXISTS (SELECT 'X' FROM PROJACTTREE
WHERE PROJACTTREE.FREECHAR2 = 'Y'
AND PROJACT = :ZCLA_PROJACT
AND ZCLA_ROOM = 0)
;
/************************************************************/
/**              Raise Customer Shipment                   **/
/************************************************************/
/* get teamleader customer and warehouse number for fix */
:ZCLA_TL = 0 ;
SELECT  USERSB.USERB INTO :ZCLA_TL
FROM  ZCLA_HOURSUSERS, ZCLA_HOURS, USERSB
WHERE ZCLA_HOURS.HOUR            = ZCLA_HOURSUSERS.HOUR
AND   ZCLA_HOURS.PROJACT         = :ZCLA_PROJACT
AND   ZCLA_HOURSUSERS.TEAMLEADER = 'Y'
AND   ZCLA_HOURSUSERS.USER       = USERSB.USER
AND  REALQUANT(ZCLA_HOURS.PERCENTAGE) = 100.0
;
GOTO 010608 WHERE :ZCLA_TL = 0 ;
:ZCLA_TLNAME = 0 ;
:ZCLA_TLWARHS = 0 ;
SELECT CUST INTO :ZCLA_TLNAME
FROM CUSTOMERS
WHERE ZCLA_USER = :ZCLA_TL
AND :ZCLA_TL <> 0
;
SELECT WARHS INTO :ZCLA_TLWARHS
FROM WAREHOUSES
WHERE CUST = :ZCLA_TLNAME
;
/* get doc and fix number */
:ZCLA_DOC = 0 ;
:ZCLA_FIX = '' ;
SELECT DOC, WBS
INTO :ZCLA_DOC, :ZCLA_FIX
FROM PROJACTS
WHERE PROJACT = :ZCLA_PROJACT
;
/* get COGS account */
:ZCLS_ACCOUNT = 0 ;
SELECT ACCOUNT
INTO :ZCLS_ACCOUNT
FROM ACCOUNTS
WHERE ZGEM_COGS = 'Y'
;
/* get value of sundry for fix */
:GNL = '' ;
SELECT SQL.TMPFILE INTO :GNL FROM DUMMY;
LINK GENERALLOAD TO :GNL ;
GOTO 010608 WHERE :RETVAL <= 0 ;
/* create shipping document header */
INSERT INTO GENERALLOAD (LINE, RECORDTYPE, INT1, INT2, INT3,
CHAR1, INT5, CHAR2)
SELECT 1, '1', :ZCLA_TLNAME, :ZCLA_TLWARHS, :ZCLA_DOC, 'N', 0, 'Y'
FROM DUMMY
;
/*--*/
INSERT INTO GENERALLOAD (LINE, RECORDTYPE, INT1, INT2, REAL1)
SELECT SQL.LINE * 2 , '2' , SONPART, SONQUANT, PURCHASEPRICE
FROM PROJACTTREE
WHERE PROJACT = :ZCLA_PROJACT
AND ZCLA_ROOM = 0
AND FREECHAR2 = 'Y'
;
/*-*/
INSERT INTO GENERALLOAD (LINE, RECORDTYPE, INT1, TEXT5)
SELECT 1 + SQL.LINE * 2 , '3', :ZCLA_DOC, :ZCLA_FIX
FROM GENERALLOAD
WHERE RECORDTYPE = '2'
;
/**/
/*Now Do form Load*/
EXECUTE INTERFACE 'ZCLA_SHFORSUNDRY', SQL.TMPFILE, '-L' , :GNL;
/* Error Logging */
:i_LOGGEDBY = 'ZCLA_SHFORSUNDRY';
#INCLUDE func/ZEMG_ERRMSGLOG
/*--*/
SELECT 'ZCLA_FIXACT/ZCLA_BUF8'
, 'CAT C Shipping Doc'
, LINE, RECORDTYPE, KEY1, LOADED, INT1, INT2, INT3,
CHAR1, INT5, CHAR2
, REAL1
, TEXT5
FROM GENERALLOAD
WHERE :DEBUG = 1
FORMAT ADDTO :DEBUGFILE
;
/**/
:ZNEWDOC = 0 ;
SELECT ATOI(KEY1) INTO :ZNEWDOC
FROM GENERALLOAD
WHERE RECORDTYPE = '1'
;
:ZSUCCESS = 0 ;
SELECT 1 INTO :ZSUCCESS
FROM DUMMY
WHERE EXISTS (SELECT 'X' FROM GENERALLOAD
WHERE RECORDTYPE = '2' AND LOADED = 'Y')
;
GOTO 010608 WHERE :ZSUCCESS = 0 ;
/* now change status of document to final */
:ZSTAT = 0 ;
SELECT DOCSTAT INTO :ZSTAT
FROM DOCSTATS
WHERE DOCSTATS.FINALFLAG = 'Y'
AND TYPE = 'D'
;
DELETE FROM GENERALLOAD;
INSERT INTO GENERALLOAD (LINE, RECORDTYPE, INT1, INT2)
SELECT 1, '1' , :ZNEWDOC, :ZSTAT
FROM DUMMY ;
EXECUTE INTERFACE 'ZCLA_FINALSHIPMENT', SQL.TMPFILE, '-L' , :GNL;
/* Error Logging */
:i_LOGGEDBY = 'ZCLA_FINALSHIPMENT';
#INCLUDE func/ZEMG_ERRMSGLOG
/*--*/
SELECT 'ZCLA_FIXACT/ZCLA_BUF8'
, 'Finalise Shipping Doc'
, LINE, RECORDTYPE, KEY1, LOADED, INT1, INT2
FROM GENERALLOAD
WHERE :DEBUG = 1
FORMAT ADDTO :DEBUGFILE
;
/***/
UNLINK AND REMOVE GENERALLOAD ;
LABEL 010608 ;
UPDATE PROJACTS
SET ZCLA_CATCISSUED = 'Y'
WHERE PROJACT = :ZCLA_PROJACT
;
LABEL 0106088 ;
/* */
#INCLUDE func/ZCLA_DEBUGUSR
SELECT 'ZCLA_RECLAC/ZCLA_SITE'
FROM DUMMY
WHERE :DEBUG = 1
FORMAT ADDTO :DEBUGFILE ;
/*
*/
LINK DOCUMENTS TO :$.PAR;
ERRMSG 1 WHERE :RETVAL = 0 ;
/*
*/
:DOC = 0 ;
SELECT DOC
INTO :DOC
FROM DOCUMENTS
WHERE DOC <> 0 ;
UNLINK DOCUMENTS
;
/*
*/
DECLARE PLOTEL CURSOR FOR
SELECT  PROJACT
FROM    PROJACTS
WHERE   0=0
AND     LEVEL = 2
AND     DOC = :DOC
;
OPEN PLOTEL ;
GOTO 1110239 WHERE :RETVAL <= 0 ;
LABEL 1110231;
FETCH PLOTEL INTO :ELEMENT ;
GOTO 1110238 WHERE :RETVAL <= 0 ;
/*
*/
#INCLUDE ZCLA_ELACT/RECALC
/*
*/
LOOP 1110231 ;
LABEL 1110238 ;
CLOSE PLOTEL ;
LABEL 1110239 ;
/* ***********************
Points calc by Part
*********************** */
#INCLUDE func/ZCLA_DEBUGUSR
SELECT 'ZCLA_COMPCALC/STEP10' FROM DUMMY
WHERE :DEBUG = 1
FORMAT ADDTO :DEBUGFILE ;
/*
Link the current record */
LINK ZCLA_COMPONENT TO :$.PAR;
ERRMSG 1 WHERE :RETVAL <= 0;
/*  */
SELECT *
FROM ZCLA_COMPONENT
WHERE 0=0
AND   :DEBUG = 1
AND   ZCLA_COMPONENT.COMPONENT > 0
FORMAT ADDTO :DEBUGFILE ;
/*
Get field from linked table */
:HOUSETYPE = :PART = :COL = :DOC = :TQUANT = 0 ;
SELECT  ZCLA_ROOMS.HOUSETYPEID , ZCLA_COMPONENT.PART
,       ZCLA_COMPONENT.COL , ZCLA_HOUSETYPE.DOC
,       TQUANT / 1000
INTO    :HOUSETYPE , :PART , :COL , :DOC , :TQUANT
FROM    ZCLA_ROOMS
,       ZCLA_COMPONENT
,       ZCLA_HOUSETYPE
WHERE 0=0
AND   ZCLA_HOUSETYPE.HOUSETYPEID = ZCLA_ROOMS.HOUSETYPEID
AND   ZCLA_ROOMS.ROOM = ZCLA_COMPONENT.ROOM
AND   ZCLA_COMPONENT.COMPONENT > 0
;
/*
*/
:ZCLA_TOTCOST = 0.0 ;
/*
Get Travel Constants */
:SAFETYMARGIN = :FULLPOINTS = :TRAVELCOST = 0.0 ;
#INCLUDE ZCLA_TRAVELCONST/ZCLA_BUF1
/*
Build the BoM */
#INCLUDE ZCLA_ALTMANUF/ZCLA_HOUSETYPE
#INCLUDE PARTARC/ZCLA_PARTREPLACE
SELECT * FROM ZCLA_PARTARC
WHERE 0=0
AND   USER = SQL.USER
AND   :DEBUG = 1
FORMAT ADDTO :DEBUGFILE ;
/*
*/
/*Gergo | 20/11/23/ | Moved the code into an include*/
#INCLUDE ZCLA_ROOMS/ZGEM_CALC
/*--*/
UNLINK ZCLA_COMPONENT ;
/*
get Markup for housetype */
:MARKUP = 0.0 ;
SELECT  1.0 + ((ZCLA_SITEELSPLIT.MARKUP > 0 ?
ZCLA_SITEELSPLIT.MARKUP : ZCLA_PLOTELEMENT.MARKUP) / 100)
INTO    :MARKUP
FROM    ZCLA_SITEELSPLIT ?
,       ZCLA_HOUSETYPE
,       ZCLA_PLOTELEMENT
WHERE 0=0
AND   ZCLA_HOUSETYPE.EL = ZCLA_PLOTELEMENT.EL
AND   ZCLA_SITEELSPLIT.DOC = ZCLA_HOUSETYPE.DOC
AND   ZCLA_SITEELSPLIT.ELTYPE = ZCLA_HOUSETYPE.EL
AND   ZCLA_HOUSETYPE.HOUSETYPEID = :HOUSETYPE
;
SELECT :ZCLA_TOTCOST , :MARKUP
FROM DUMMY
WHERE :DEBUG = 1
FORMAT ADDTO :DEBUGFILE
;
SELECT RTOA(:ZCLA_TOTCOST,2) , RTOA(:ZCLA_TOTCOST * :MARKUP,2)
INTO :PAR1 , :PAR2
FROM DUMMY ;
WRNMSG 1 ;
LABEL 9999 ;
/*
Copy Room */
#INCLUDE func/ZCLA_DEBUGUSR
SELECT 'ZCLA_COPYROOM/STEP20' FROM DUMMY
WHERE :DEBUG = 1
FORMAT ADDTO :DEBUGFILE ;
/*
Link the current record */
LINK ZCLA_ROOMS TO :$.PAR;
ERRMSG 1 WHERE :RETVAL <= 0;
/*
Get linked values */
:HOUSETYPE = :ROOM = :COL = :SORT = 0 ;
/*GergoM | 11/12/23 | STYLE */
SELECT HOUSETYPEID , ROOM , STYLE /*COL , SORT*/
INTO :HOUSETYPE , :ROOM , :STYLE /*:COL , :SORT*/
FROM ZCLA_ROOMS
WHERE 0=0
AND   ROOM > 0 ;
/*
Unlink */
UNLINK ZCLA_ROOMS ;
/*
*/
:PAR1 = '' ;
SELECT :$.RM INTO :PAR1
FROM DUMMY ;
ERRMSG 800 WHERE EXISTS (
SELECT 'x'
FROM ZCLA_ROOMS
WHERE 0=0
AND   TOLOWER(ROOMDES) = TOLOWER(:$.RM)
AND   HOUSETYPEID = :HOUSETYPE
);
/*Is the House Type Core?*/
:CORE = '';
SELECT CORE
INTO :CORE
FROM ZCLA_HOUSETYPE
WHERE HOUSETYPEID = :HOUSETYPE
;
/* Link GENERALLOAD
*/
SELECT SQL.TMPFILE
INTO :GEN FROM DUMMY;
LINK GENERALLOAD TO :GEN;
ERRMSG 1 WHERE :RETVAL = 0 ;
/*
*/
:LN = 0 ;
/* insert Proj line */
SELECT MAX(LINE) + 1 INTO :LN FROM GENERALLOAD;
INSERT INTO GENERALLOAD (LINE , RECORDTYPE, KEY1)
SELECT :LN , '1' , ITOA(DOC)
FROM ZCLA_HOUSETYPE
WHERE 0=0
AND   HOUSETYPEID = :HOUSETYPE
;
/* insert Housetype line */
SELECT MAX(LINE) + 1 INTO :LN FROM GENERALLOAD;
INSERT INTO GENERALLOAD (LINE , RECORDTYPE, KEY1)
SELECT :LN , '2' , ITOA(:HOUSETYPE)
FROM DUMMY
;
/* Insert room
*/
SELECT MAX(LINE) + 1 INTO :LN FROM GENERALLOAD;
INSERT INTO GENERALLOAD (LINE , RECORDTYPE, TEXT1
/*INT1 , INT2*/
, TEXT2 )
SELECT :LN , '3'
,   :$.RM
/* GergoM | 11/12/23
,   :SORT
,   :COL
*/
, :STYLE
FROM DUMMY
;
/* Insert Components
*/
SELECT MAX(LINE) + 1 INTO :LN FROM GENERALLOAD;
INSERT INTO GENERALLOAD (LINE , RECORDTYPE, INT1 , INT2 , INT3 )
SELECT :LN + SQL.LINE , '4'
,   PART
,   TQUANT
,   COL
FROM ZCLA_COMPONENT
WHERE 0=0
AND   ROOM = :ROOM
;
/* Insert Small Work Parts
*/
SELECT MAX(LINE) + 1 INTO :LN FROM GENERALLOAD;
INSERT INTO GENERALLOAD (LINE , RECORDTYPE, TEXT1, TEXT2, INT1)
SELECT  :LN + SQL.LINE , '5',
ZCLA_FIXES.FIX, PART.PARTNAME, ZCLA_ROOMPARTS.TQUANT
FROM  ZCLA_ROOMS
, ZCLA_ROOMPARTS
, PART
, ZCLA_FIXES
WHERE ZCLA_ROOMPARTS.ROOM = :ROOM
AND  ZCLA_ROOMPARTS.PART = PART.PART
AND  ZCLA_ROOMPARTS.FIXID = ZCLA_FIXES.FIXID
AND  ZCLA_ROOMPARTS.ROOM = ZCLA_ROOMS.ROOM
;
/* Insert Small Work Points
*/
SELECT MAX(LINE) + 1 INTO :LN FROM GENERALLOAD;
INSERT INTO GENERALLOAD (LINE , RECORDTYPE, KEY2, INT1, REAL1)
SELECT  :LN + SQL.LINE , '51'
, ITOA(FIX), FIX, SMALLPOINTS
FROM ZCLA_SMALLWORKSFIX
WHERE  ROOM   = :ROOM
AND SMALLPOINTS <> 0
;
/*Do Not Copy Subcontract if its Core*/
GOTO 05042415269 WHERE :CORE = 'Y';
/* Insert Subcontract Parts
*/
DECLARE SUBCONCUR CURSOR FOR
SELECT PROF, KLINE, GUID
FROM ZCLA_ROOMQUOTE
WHERE ROOM = :ROOM
AND  ISDELETED  <> 'Y'
;
/*--*/
OPEN SUBCONCUR;
GOTO 05042415269 WHERE :RETVAL <= 0;
/*--*/
LABEL 05042415261;
/*--*/
:PROF = 0;
:KLINE = 0;
:GUID = '';
FETCH SUBCONCUR
INTO :PROF, :KLINE, :GUID;
GOTO 05042415268 WHERE :RETVAL <= 0;
/*--*/
SELECT MAX(LINE) + 1 INTO :LN FROM GENERALLOAD;
INSERT INTO GENERALLOAD (LINE , RECORDTYPE
, TEXT1, TEXT2, TEXT3, INT1, REAL1, REAL2)
SELECT  :LN + SQL.LINE , '52'
, ZCLA_FIXES.FIX
, SUPPLIERS.SUPNAME
, ZCLA_ROOMQUOTE.PDES
, ZCLA_ROOMQUOTE.QUANTITY
, ZCLA_ROOMQUOTE.ZCLA_COST
, ZCLA_ROOMQUOTE.MARKUP
FROM ZCLA_ROOMQUOTE
, SUPPLIERS
, ZCLA_FIXES
WHERE ZCLA_ROOMQUOTE.ROOM = :ROOM
AND   ZCLA_ROOMQUOTE.PROF = :PROF
AND   ZCLA_ROOMQUOTE.KLINE = :KLINE
AND   ZCLA_ROOMQUOTE.GUID = :GUID
AND  ZCLA_ROOMQUOTE.SUP = SUPPLIERS.SUP
AND  ZCLA_ROOMQUOTE.FIXID = ZCLA_FIXES.FIXID
;
/* Insert Subcontract Points
*/
SELECT MAX(LINE) + 1 INTO :LN FROM GENERALLOAD;
INSERT INTO GENERALLOAD (LINE , RECORDTYPE, KEY2
, INT1, REAL1)
SELECT  :LN + SQL.LINE , '53'
, ITOA(FIX), FIX, POINT
FROM ZCLA_ROOMFIXES
WHERE GUID = :GUID
AND POINT <> 0
;
LOOP 05042415261;
LABEL 05042415268;
/*--*/
CLOSE SUBCONCUR;
LABEL 05042415269;
/*
*/
#INCLUDE func/ZCLA_RESETERR
GOTO 08042408269 WHERE :CORE = 'Y';
SELECT 'ZCLA_COPYSITEHT'
FROM DUMMY FORMAT ADDTO :DEBUGFILE ;
EXECUTE INTERFACE 'ZCLA_COPYSITEHT', SQL.TMPFILE, '-L', :GEN ;
:i_LOGGEDBY = 'ZCLA_COPYHT';
#INCLUDE func/ZEMG_ERRMSGLOG
GOTO 08042408268;
LABEL 08042408269;
SELECT 'ZCLA_COPYCUSTHT'
FROM DUMMY FORMAT ADDTO :DEBUGFILE ;
EXECUTE INTERFACE 'ZCLA_COPYCUSTHT', SQL.TMPFILE, '-L', :GEN ;
LABEL 1602241112;
:i_LOGGEDBY = 'ZCLA_COPYHT';
#INCLUDE func/ZEMG_ERRMSGLOG
LABEL 08042408268;
SELECT LINE, RECORDTYPE , KEY1 , KEY2 , LOADED , INT1, INT2, INT3,
INT4 ,
REAL1,
CHAR1 , CHAR2 , TEXT1, TEXT2 , CHAR3
FROM GENERALLOAD FORMAT ADDTO :DEBUGFILE ;
#INCLUDE func/ZCLA_ERRMSG
UNLINK GENERALLOAD ;
/* Copy FROM site TO site
*/
#INCLUDE func/ZCLA_DEBUGUSR
SELECT 'ZCLA_COPYHOUSE/160' FROM DUMMY
WHERE :DEBUG = 1 FORMAT ADDTO :DEBUGFILE
;
:DOC = 0 ;
:DOCNO = '' ;
SELECT DOC , DOCNO INTO :DOC , :DOCNO
FROM DOCUMENTS
WHERE 0=0
AND   DOC = :$.DOC
AND   TYPE = 'p'
;
/* Check exists
*/
SELECT :$.NA3 , :DOCNO
INTO :PAR1, :PAR2
FROM DUMMY ;
ERRMSG 800 WHERE EXISTS (
SELECT 'x'
FROM ZCLA_HOUSETYPE
WHERE 0=0
AND   DOC = :DOC
AND   TYPENAME = :$.NA3
);
SELECT :DOC , :$.HS
FROM DUMMY
FORMAT ADDTO :DEBUGFILE
;
SELECT SQL.TMPFILE
INTO :GEN FROM DUMMY;
LINK GENERALLOAD TO :GEN;
ERRMSG 1 WHERE :RETVAL = 0
;
/*
*/
:LN = 0 ;
/*
insert Proj line */
SELECT MAX(LINE) + 1 INTO :LN FROM GENERALLOAD;
INSERT INTO GENERALLOAD (LINE , RECORDTYPE, KEY1)
SELECT :LN , '1' , ITOA(:DOC)
FROM DUMMY
;
SELECT MAX(LINE) + 1 INTO :LN FROM GENERALLOAD ;
INSERT INTO GENERALLOAD (LINE , RECORDTYPE, INT1, INT2, INT3, INT4 ,
CHAR1 , CHAR2 , TEXT1, TEXT2 , CHAR3, TEXT3)
SELECT :LN
,   '6'
,   :DOC
,   EL
,   HOUSETYPEID
,   COL
,   '¬'
,   :$.LN3
,   :$.NA3
/*GergoM | 16/11/23 | TEXT2 <-- TYPEDES*/
/*,   :$.DE3*/
,   TYPEDES
,   'Y'
,   STYLE
FROM ZCLA_HOUSETYPE
WHERE 0=0
AND   HOUSETYPEID  = :$.HS
;
#INCLUDE func/ZCLA_RESETERR
EXECUTE INTERFACE 'ZCLA_LOADPLOT', SQL.TMPFILE, '-L', :GEN
;
SELECT LINE, RECORDTYPE , KEY1 , LOADED , INT1, INT2, INT3, INT4 ,
CHAR1 , CHAR2 , TEXT1, TEXT2 , TEXT3
FROM GENERALLOAD WHERE :DEBUG = 1
FORMAT ADDTO :DEBUGFILE
;
#INCLUDE func/ZCLA_ERRMSG
UNLINK GENERALLOAD ;
/*
*/
#INCLUDE func/ZCLA_DEBUGUSR
SELECT SQL.TMPFILE
INTO :LNK FROM DUMMY ;
LINK ZODAT_LINK TO :$.PAR ;
ERRMSG 1 WHERE :RETVAL <= 0
;
SELECT TEXT1   AS USER
,      TEXT2   AS PRN
,      TEXT3   AS PREAUTH
,      INT1    AS INVOICENUMBER
,      INT2    AS CATEGORY
,      TEXT21  AS URL
,      TEXT22  AS GUID
FROM ZODAT_LINK
FORMAT ADDTO :DEBUGFILE
;
/**/
LINK GENERALLOAD TO :$.GNL ;
GOTO 0205 WHERE :RETVAL <= 0 ;
/*Insert Document*/
INSERT INTO GENERALLOAD(LINE, RECORDTYPE, INT1)
SELECT SQL.LINE, '1', ZODAT_LINK.INT1
FROM   ZODAT_LINK
WHERE  ZODAT_LINK.LINE <> 0 ;
/*Set username according to active directory field*/
:UNAME = '' ;
SELECT USERS.USERLOGIN
INTO   :UNAME
FROM   USERS, USERSB, ZODAT_LINK
WHERE  USERS.USER           = USERSB.USER
AND    USERSB.WINDOWSLOGIN  = ZODAT_LINK.TEXT1
AND    ZODAT_LINK.LINE      <> 0 ;
/**/
GOTO 0905 WHERE :UNAME = '' ;
/*If no Active directory login then use tabula*/
SELECT 'tabula'
INTO   :UNAME
FROM   DUMMY ;
/**/
LABEL 0905 ;
/*Insert Attachments*/
INSERT INTO GENERALLOAD (LINE, RECORDTYPE, TEXT5, TEXT2, INT1,
TEXT3, CHAR1, TEXT4)
SELECT SQL.LINE + 1 , '2', ZODAT_LINK.TEXT21, 'COW'
,      ZODAT_LINK.INT1, :UNAME , ZODAT_LINK.TEXT3
,      ZODAT_LINK.TEXT2
FROM   ZODAT_LINK
WHERE  ZODAT_LINK.LINE <> 0 ;
/**/
EXECUTE INTERFACE 'ZCLA_LOADCOW', SQL.TMPFILE, '-L' , :$.GNL ;
/* Error Logging */
:i_LOGGEDBY = 'ZCLA_LOADCOW';
#INCLUDE func/ZEMG_ERRMSGLOG
#INCLUDE func/ZCLA_ERRMSG
/**/
UNLINK AND REMOVE GENERALLOAD ;
LABEL 0205 ;
DECLARE ZCLA_CONTRACT CURSOR FOR
SELECT ZCLA_CONTRACTSCHEDUL.CONTRACT
FROM   ZCLA_CONTRACTSCHEDUL
WHERE  ZCLA_CONTRACTSCHEDUL.SIGNDATE      = :$.FDT ;
/**/
OPEN ZCLA_CONTRACT ;
GOTO 1989 WHERE :RETVAL <= 0 ;
/**/
LABEL 1990 ;
:ZCLA_CONT = 0 ;
/**/
FETCH ZCLA_CONTRACT INTO :ZCLA_CONT  ;
GOTO 1991 WHERE :RETVAL <= 0 ;
/**/
:PAR = '' ;
SELECT SQL.TMPFILE
INTO   :PAR
FROM   DUMMY ;
/**/
LINK ZCLA_CONTRACTS TO :PAR ;
GOTO 0705 WHERE :RETVAL <= 0 ;
/**/
/**/
INSERT INTO ZCLA_COWVAR (USER)
SELECT SQL.USER
FROM   DUMMY ;
/*Update FDT field*/
UPDATE ZCLA_COWVAR
SET    FDT = :$.FDT
WHERE  ZCLA_COWVAR.USER = SQL.USER ;
/**/
INSERT INTO ZCLA_CONTRACTS
SELECT * FROM ZCLA_CONTRACTS ORIG
WHERE  ORIG.CONTRACT = :ZCLA_CONT ;
/**/
SELECT * FROM ZCLA_CONTRACTS TABS ADDTO '../../NEILCONTRACT.TXT';
/*Now run proceudre to raise signature */
EXECUTE ACTIVATF '-P', 'ZCLA_RAISESIGN', 'ZCLA_CONTRACTS', :PAR;
/**/
UNLINK AND REMOVE ZCLA_CONTRACTS ;
LABEL 0705 ;
/**/
LOOP 1990 ;
/**/
LABEL 1991 ;
CLOSE ZCLA_CONTRACT ;
/**/
LABEL 1989 ;
/*
*/
#INCLUDE func/ZCLA_DEBUGUSR
SELECT 'ZCLA_FILLSPLIT/STEP10' FROM DUMMY
WHERE :DEBUG = 1
FORMAT ADDTO :DEBUGFILE ;
/*
Link the current record */
LINK ZCLA_ELEMENTFIX TO :$.PAR ;
ERRMSG 1 WHERE :RETVAL <= 0 ;
/*  */
SELECT *
FROM ZCLA_ELEMENTFIX
WHERE 0=0
AND   :DEBUG = 1
FORMAT ADDTO :DEBUGFILE ;
UNLINK ZCLA_ELEMENTFIX ;
/* */
#INCLUDE func/ZCLA_DEBUGUSR
SELECT 'ZCLA_ADDPLOTFORM/STEP20' FROM DUMMY
FORMAT ADDTO :DEBUGFILE ;
/* vars
*/
:P = :LN = 0 ;
:HOUSETYPEID = :DOC = :EL = 0 ;
:ISHOUSE = :CORE = '' ;
/*
*/
LINK DOCUMENTS TO :$.PAR;
ERRMSG 1 WHERE :RETVAL <= 0;
SELECT DOC INTO :DOC
FROM DOCUMENTS
WHERE 0=0
AND   DOC > 0 ;
UNLINK DOCUMENTS ;
/*
*/
/* Start Cursor
*/
DECLARE ELEMS CURSOR FOR
SELECT DISTINCT EL
FROM ZCLA_USERADDPLOT
WHERE 0=0
AND   PLOT > 0
AND   EL > 0
AND   USER = SQL.USER
;
OPEN ELEMS ;
GOTO 0603249 WHERE :RETVAL = 0 ;
LABEL 0603241 ;
:ELEM = 0 ;
FETCH ELEMS INTO :ELEM ;
GOTO 0603248 WHERE :RETVAL = 0 ;
/*
*/
SELECT 'Adding plots', PLOT , HOUSETYPEID
FROM ZCLA_USERADDPLOT
WHERE 0=0
AND   :DEBUG = 1
AND   USER = SQL.USER
FORMAT ADDTO :DEBUGFILE ;
/* Link General load table
*/
:LN = 0 ;
SELECT SQL.TMPFILE
INTO :GEN FROM DUMMY;
LINK GENERALLOAD TO :GEN;
ERRMSG 1 WHERE :RETVAL = 0 ;
SELECT MAX(PROJACTUID) INTO :P FROM PROJACTS ;
/*
*/
/*GergoM | 28/11/23 | APF_ Cursor pre fix*/
DECLARE APF_E97 CURSOR FOR
SELECT PLOT , HOUSETYPEID FROM ZCLA_USERADDPLOT
WHERE 0=0
AND   PLOT > 0
AND   USER = SQL.USER
AND   EL = :ELEM
;
OPEN APF_E97 ;
GOTO 403239 WHERE :RETVAL = 0 ;
LABEL 403231 ;
:PLOT = :HOUSETYPE = 0 ;
FETCH APF_E97 INTO :PLOT , :HOUSETYPE ;
GOTO 403238 WHERE :RETVAL = 0 ;
/*
*/
SELECT ISHOUSE , ZCLA_PLOTELEMENT.EL
INTO :ISHOUSE , :EL
FROM ZCLA_HOUSETYPE
,    ZCLA_PLOTELEMENT
WHERE 0=0
AND   ZCLA_HOUSETYPE.EL = ZCLA_PLOTELEMENT.EL
AND   ZCLA_HOUSETYPE.HOUSETYPEID = :HOUSETYPE
;
/* insert Proj line
*/
SELECT MAX(LINE) + 1 INTO :LN FROM GENERALLOAD ;
INSERT INTO GENERALLOAD (LINE , RECORDTYPE, KEY1)
SELECT :LN , '1' , ITOA(:DOC)
FROM DUMMY ;
/* insert Projact line
*/
SELECT MAX(LINE) + 1 INTO :LN FROM GENERALLOAD ;
GOTO 50 WHERE EXISTS (
SELECT 'x'
FROM PROJACTS
WHERE 0=0
AND   DOC = :DOC
AND   LEVEL = 1
AND   WBS = ITOA(:PLOT)
);
/* Create New plot
*/
SELECT :P + 1 INTO :P FROM DUMMY ;
INSERT INTO GENERALLOAD (LINE , RECORDTYPE, TEXT1, TEXT2 , INT1 ,
INT2, INT3)
SELECT :LN
,    '2'
,    STRCAT('Plot ' , ITOA(:PLOT))
,    ITOA(:PLOT)
,    :P
,    -1
,    (:ISHOUSE = 'Y' ? :HOUSETYPE : 0)
FROM DUMMY
;
GOTO 99 ;
LABEL 50 ;
/* Use existing plot
*/
SELECT MAX(LINE) + 1 INTO :LN FROM GENERALLOAD ;
GOTO 80 WHERE :ISHOUSE = 'Y' ;
INSERT INTO GENERALLOAD (LINE , RECORDTYPE, KEY1 )
SELECT :LN
,    '2'
,    ITOA( PROJACT )
FROM PROJACTS
WHERE 0=0
AND   DOC = :DOC
AND   WBS = ITOA(:PLOT)
;
GOTO 90 ;
LABEL 80 ;
INSERT INTO GENERALLOAD (LINE , RECORDTYPE, KEY1 , INT3)
SELECT :LN
,    '2'
,    ITOA( PROJACT )
,    :HOUSETYPE
FROM PROJACTS
WHERE 0=0
AND   DOC = :DOC
AND   WBS = ITOA(:PLOT)
;
LABEL 90;
LABEL 99 ;
/*GergoM | 16/11/23 |
The insert element line was below the atachments
This cause a sequence error at the loading stage
*/
/* Check exists
*/
GOSUB 1000 WHERE EXISTS (
SELECT 'x'
FROM PROJACTS
WHERE 0=0
AND   DOC = :DOC
AND   WBS = STRCAT(ITOA(:PLOT) , '.' , ITOA(:EL))
);
/*
Get Status */
SELECT * FROM ZCLA_ELSTATUSES
FORMAT ADDTO :DEBUGFILE
;
:STATUS = 0 ;
:STEPSTATUSDES = '' ;
SELECT STEPSTATUS , STEPSTATUSDES INTO :STATUS, :STEPSTATUSDES
FROM ZCLA_ELSTATUSES WHERE INITFLAG = 'Y'
;
SELECT :STATUS, :STEPSTATUSDES
FROM DUMMY
FORMAT ADDTO :DEBUGFILE
;
/*
insert Element line */
SELECT MAX(LINE) + 1 INTO :LN FROM GENERALLOAD ;
SELECT :P + 1 INTO :P FROM DUMMY ;
INSERT INTO GENERALLOAD (LINE , RECORDTYPE, INT1, INT2, INT3, INT4,
INT5 , INT6 , INT7, TEXT2 , TEXT3 , TEXT1)
SELECT :LN
,   '3'
,   EL
,   HOUSETYPEID
,   COL
,   -1
,   :P
,   ALT
,   :STATUS
,   :STEPSTATUSDES
,   STYLE
,   GUID
FROM ZCLA_HOUSETYPE
WHERE HOUSETYPEID = :HOUSETYPE
;
/*
*/
/*
ATTACHMENTS FROM HOUSETYPE
*/
/*GergoM | 16/11/23 | WRONG VARIABLE WAS USED
:HOUSETYEID was used instead of :HOUSETPE
*/
/* Find latest attachment for each category */
DECLARE APF_CATCURSOR  CURSOR FOR
SELECT DISTINCT ZCLA_FILECATEGORY
FROM EXTFILES, ZCLA_FILECATEGORIES Z
WHERE IV = :HOUSETYPE
AND EXTFILES.ZCLA_FILECATEGORY = Z.FILECATEGORY
AND   TYPE = '¬'
AND   Z.INTERNALCOPY = 'Y'
;
OPEN APF_CATCURSOR ;
GOTO 8081 WHERE :RETVAL = 0;
LABEL 111;
:CAT = 0;
FETCH APF_CATCURSOR  INTO :CAT;
GOTO 8080 WHERE :RETVAL = 0;
/* Insert attachments */
:EXTFILENUM = :CURDATE = 0;
:EXTFILEDES = :EXTFILENAME = :CATEGORYNAME = '';
SELECT EXTFILENUM, EXTFILEDES, EXTFILENAME, CATEGORYNAME, CURDATE ,
GUID
INTO :EXTFILENUM, :EXTFILEDES, :EXTFILENAME, :CATEGORYNAME, :CURDATE
, :GUID
FROM ZCLA_FILECATEGORIES, EXTFILES
WHERE TYPE = '¬'
AND   IV = :HOUSETYPE
AND   ZCLA_FILECATEGORIES.FILECATEGORY = EXTFILES.ZCLA_FILECATEGORY
AND   EXTFILES.ZCLA_FILECATEGORY = :CAT
ORDER BY CURDATE DESC
OFFSET 0 FETCH NEXT 1 ROWS ONLY
;
/*--------*/
SELECT MAX(LINE) + 1 INTO :LN FROM GENERALLOAD;
INSERT INTO GENERALLOAD(LINE, RECORDTYPE, INT1, TEXT1, TEXT2, TEXT3,
DATE1 , TEXT4)
VALUES(:LN + 1, '7', :EXTFILENUM, :EXTFILEDES, :EXTFILENAME,
:CATEGORYNAME, :CURDATE , :GUID)
;
LOOP 111;
LABEL 8080;
CLOSE APF_CATCURSOR ;
LABEL 8081;
SELECT :LN + 1 INTO :LN FROM DUMMY;
LOOP 403231 ;
LABEL 403238 ;
CLOSE APF_E97 ;
LABEL 403239 ;
/* Loading
*/
#INCLUDE func/ZCLA_RESETERR
EXECUTE INTERFACE 'ZCLA_LOADPLOT', SQL.TMPFILE, '-L', :GEN ;
/* Log to file
*/
SELECT LINE , RECORDTYPE, LOADED, KEY1, INT1, INT2, INT3, INT4
,      INT5 , INT6 , INT7, TEXT2
FROM GENERALLOAD
FORMAT ADDTO :DEBUGFILE ;
#INCLUDE func/ZCLA_ERRMSG
/*GergoM | 28/11/23 | Recalc element */
DECLARE ELUPD CURSOR FOR
SELECT ATOI(KEY1)
FROM GENERALLOAD
WHERE RECORDTYPE = '3'
AND LOADED = 'Y'
;
OPEN ELUPD ;
GOTO 2201249 WHERE :RETVAL = 0 ;
LABEL 2201241 ;
:ELEMENT = 0;
FETCH ELUPD INTO :ELEMENT ;
GOTO 2201248 WHERE :RETVAL = 0 ;
#INCLUDE ZCLA_ELACT/RECALC
LOOP 2201241;
LABEL 2201248 ;
CLOSE ELUPD ;
LABEL 2201249 ;
/* END Recalc element */
UNLINK AND REMOVE GENERALLOAD ;
#INCLUDE STATUSTYPES/ZCLA_BUF5
/*
*/
LOOP 0603241 ;
LABEL 0603248 ;
CLOSE ELEMS ;
LABEL 0603249 ;
/*
*/
/* Error Handler
*/
SUB 1000 ;
SELECT STRCAT('Plot ' , ITOA(:PLOT)) INTO :PAR1
FROM DUMMY ;
SELECT ELDES INTO :PAR2
FROM ZCLA_PLOTELEMENT
WHERE 0=0
AND   EL = :EL ;
ERRMSG 500 ;
RETURN ;
/* ***********************
Points calc by Room
*********************** */
#INCLUDE func/ZCLA_DEBUGUSR
SELECT 'ZCLA_ROOMCALC/STEP10' FROM DUMMY
WHERE :DEBUG = 1
FORMAT ADDTO :DEBUGFILE ;
/*
Link the current record */
LINK ZCLA_ROOMS TO :$.PAR;
ERRMSG 1 WHERE :RETVAL <= 0;
/*  */
SELECT *
FROM ZCLA_ROOMS
WHERE 0=0
AND   :DEBUG = 1
AND   ZCLA_ROOMS.ROOM > 0
FORMAT ADDTO :DEBUGFILE ;
/*
Get field from linked table */
:ROOM = :HOUSETYPE = :PART = :COL = :DOC = :TQUANT = 0 ;
SELECT  ZCLA_ROOMS.ROOM , ZCLA_ROOMS.HOUSETYPEID ,
ZCLA_COMPONENT.PART
,       ZCLA_COMPONENT.COL , ZCLA_HOUSETYPE.DOC
,       TQUANT / 1000
INTO    :ROOM , :HOUSETYPE , :PART , :COL , :DOC , :TQUANT
FROM    ZCLA_ROOMS
,       ZCLA_COMPONENT
,       ZCLA_HOUSETYPE
WHERE 0=0
AND   ZCLA_HOUSETYPE.HOUSETYPEID = ZCLA_ROOMS.HOUSETYPEID
AND   ZCLA_ROOMS.ROOM = ZCLA_COMPONENT.ROOM
AND   ZCLA_COMPONENT.COMPONENT > 0
;
/*
*/
:ZCLA_TOTCOST = 0.0 ;
/*
Get Travel Constants */
:SAFETYMARGIN = :FULLPOINTS = :TRAVELCOST = 0.0 ;
#INCLUDE ZCLA_TRAVELCONST/ZCLA_BUF1
/*
Build the BoM */
#INCLUDE ZCLA_ALTMANUF/ZCLA_HOUSETYPE
#INCLUDE PARTARC/ZCLA_HTREPLACE
SELECT * FROM ZCLA_PARTARC
WHERE 0=0
AND   USER = SQL.USER
AND   :DEBUG = 1
FORMAT ADDTO :DEBUGFILE ;
/*
*/
/*Gergo | 20/11/23/ | Moved the code into an include*/
#INCLUDE ZCLA_ROOMS/ZGEM_CALC
/*--*/
UNLINK ZCLA_COMPONENT ;
/*
get Markup for housetype */
:MARKUP = 0.0 ;
SELECT  1.0 + ((ZCLA_SITEELSPLIT.MARKUP > 0 ?
ZCLA_SITEELSPLIT.MARKUP : ZCLA_PLOTELEMENT.MARKUP) / 100)
INTO    :MARKUP
FROM    ZCLA_SITEELSPLIT ?
,       ZCLA_HOUSETYPE
,       ZCLA_PLOTELEMENT
WHERE 0=0
AND   ZCLA_HOUSETYPE.EL = ZCLA_PLOTELEMENT.EL
AND   ZCLA_SITEELSPLIT.DOC = ZCLA_HOUSETYPE.DOC
AND   ZCLA_SITEELSPLIT.ELTYPE = ZCLA_HOUSETYPE.EL
AND   ZCLA_HOUSETYPE.HOUSETYPEID = :HOUSETYPE
;
SELECT :ZCLA_TOTCOST , :MARKUP
FROM DUMMY
WHERE :DEBUG = 1
FORMAT ADDTO :DEBUGFILE
;
SELECT RTOA(:ZCLA_TOTCOST,2) , RTOA(:ZCLA_TOTCOST * :MARKUP,2)
INTO :PAR1 , :PAR2
FROM DUMMY ;
WRNMSG 1 ;
LABEL 9999 ;
/* */
#INCLUDE func/ZCLA_DEBUGUSR
SELECT 'ZCLA_DELPLOTS/STEP50' , :$.DOC
FROM DUMMY
FORMAT ADDTO :DEBUGFILE ;
/*
*/
DELETE FROM ZCLA_PLOTCUCFG
WHERE CONSUMERUNIT IN (
SELECT CONSUMERUNIT FROM ZCLA_PLOTCU
WHERE PROJACT IN (
SELECT PROJACT
FROM PROJACTS
WHERE DOC = :$.DOC ))
;
/*
*/
DELETE FROM ZCLA_PLOTCU
WHERE PROJACT IN (
SELECT PROJACT
FROM PROJACTS
WHERE DOC = :$.DOC )
;
/*
*/
DELETE FROM ZCLA_PLOTCOMPONENT
WHERE PROJACT IN (
SELECT PROJACT
FROM PROJACTS
WHERE DOC = :$.DOC )
;
/*
*/
DELETE FROM ZCLA_PLOTATTR
WHERE PROJACT IN (
SELECT PROJACT
FROM PROJACTS
WHERE DOC = :$.DOC )
;
/*
*/
DELETE FROM ZCLA_PLOTCOMPONENT
WHERE PROJACT IN (
SELECT PROJACT
FROM PROJACTS
WHERE DOC = :$.DOC )
;
/*
*/
DELETE FROM ZCLA_PLOTELFIX
WHERE PROJACT IN (
SELECT PROJACT
FROM PROJACTS
WHERE DOC = :$.DOC )
;
/*
*/
DELETE FROM ZCLA_PLOTROOMS
WHERE PROJACT IN (
SELECT PROJACT
FROM PROJACTS
WHERE DOC = :$.DOC )
;
/*
*/
DELETE FROM PROJACTS
WHERE DOC = :$.DOC
;
/* */
#INCLUDE func/ZCLA_DEBUGUSR
SELECT 'ZCLA_ADDPLOTFORM/STEP5' FROM DUMMY
FORMAT ADDTO :DEBUGFILE ;
/* Get housetypes
*/
LINK DOCUMENTS TO :$.PAR;
ERRMSG 1 WHERE :RETVAL <= 0;
/*
*/
DELETE FROM ZCLA_USERHT
WHERE USER = SQL.USER
;
INSERT INTO ZCLA_USERHT (USER , DOC , HOUSETYPE)
SELECT SQL.USER , DOCUMENTS.DOC , HOUSETYPEID
FROM DOCUMENTS , ZCLA_HOUSETYPE
WHERE 0=0
AND   DOCUMENTS.DOC =  ZCLA_HOUSETYPE.DOC
AND   DOCUMENTS.DOC > 0
;
UNLINK DOCUMENTS ;
/* */
#INCLUDE func/ZCLA_DEBUGUSR
SELECT 'ZCLA_DELPLOTS/STEP10' FROM DUMMY
WHERE 0=0
AND :DEBUG = 1
FORMAT ADDTO :DEBUGFILE ;
/*
*/
LINK DOCUMENTS TO :$.PAR;
ERRMSG 1 WHERE :RETVAL <= 0;
SELECT DOCUMENTS.DOC , DOCPROJ.PROJDES
INTO :$.DOC , :$.PRO
FROM DOCUMENTS , DOCPROJ
WHERE 0=0
AND   DOCUMENTS.DOC = DOCPROJ.DOC
AND   DOCUMENTS.DOC > 0
;
SELECT :$.DOC , :$.PRO
FROM DUMMY
WHERE 0=0
AND :DEBUG = 1
FORMAT ADDTO :DEBUGFILE ;
UNLINK DOCUMENTS ;
/* */
#INCLUDE func/ZCLA_DEBUGUSR
SELECT 'ZCLA_DELPLOTS/STEP30' FROM DUMMY
FORMAT ADDTO :DEBUGFILE ;
/*
*/
SELECT :$.CNF AS 'Typed'
,      :$.PRO AS 'Description'
,      :$.DOC AS 'DOC'
FROM DUMMY
WHERE :DEBUG = 1
FORMAT ADDTO :DEBUGFILE
;
:PAR1 = :PAR2 = '' ;
SELECT :$.CNF , :$.PRO
INTO :PAR1 , :PAR2
FROM DUMMY ;
ERRMSG 800 WHERE :$.CNF <> :$.PRO ;
/*
Send rejection email to candidates
*/
/*
Quit if not tues, wed, thurs */
GOTO 99 WHERE ITOA(0 + SQL.DAY) NOT IN ('3' , '4' , '5');
/*
Quit if office closed */
GOTO 99 WHERE SQL.DATE8 IN (
SELECT CURDATE
FROM   OFFICECLOSED
);
/*
Get DAYSREJECT from consts */
:DAYSREJECT = 0 ;
SELECT INTQUANT(1440 * VALUE ) / 1000 INTO :DAYSREJECT
FROM ZCLA_CONST
WHERE 0=0
AND   TYPE = 'HR'
AND   NAME = 'DAYSREJECT'
;
/*
Set the reply to address */
:_REPLYTOEMAIL = 'jobs@clarksonevans.co.uk';
/*
*/
SELECT SQL.DATE AS '.',
'/////////////////////////////////' AS '.'
FROM JOBCANDIDATES, JOBCANDSTATS
WHERE JOBCANDSTATS.JOBCANDSTAT = JOBCANDIDATES.JOBCANDSTAT
AND   JOBCANDIDATES.CURDATE + :DAYSREJECT < SQL.DATE
AND   JOBCANDSTATS.REJECTED = 'Y'
AND   JOBCANDIDATES.ZCLA_REJSENT <> 'Y'
FORMAT ADDTO '../../ZGEM_Rejection_Email_Log.txt'
;
/*--*/
SELECT JOBCANDIDATE , JOBNUM , JOBDES , FNAME , SNAME , EMAIL,
JOBCANDIDATES.JOBCANDSTAT
FROM JOBCANDIDATES , JOBS , USERSB , JOBCANDSTATS
WHERE 0=0
AND   JOBCANDIDATES.JOB = JOBS.JOB
AND   JOBCANDIDATES.CANDIDATE = USERSB.USERB
AND   JOBCANDSTATS.JOBCANDSTAT = JOBCANDIDATES.JOBCANDSTAT
AND   JOBS.JOB > 0
AND   JOBCANDIDATES.CURDATE + :DAYSREJECT < SQL.DATE
AND   JOBCANDSTATS.REJECTED = 'Y'
AND   JOBCANDIDATES.ZCLA_REJSENT <> 'Y'
FORMAT ADDTO '../../ZGEM_Rejection_Email_Log.txt'
;
/*
Cursor Rejected un-notified applications
where application was more than :DAYSREJECT ago */
DECLARE CAND CURSOR FOR
SELECT JOBCANDIDATE , JOBNUM , JOBDES , FNAME , SNAME , EMAIL
, ITOA(JOBS.JOB)
FROM JOBCANDIDATES , JOBS , USERSB , JOBCANDSTATS
WHERE 0=0
AND   JOBCANDIDATES.JOB = JOBS.JOB
AND   JOBCANDIDATES.CANDIDATE = USERSB.USERB
AND   JOBCANDSTATS.JOBCANDSTAT = JOBCANDIDATES.JOBCANDSTAT
AND   JOBS.JOB > 0
AND   JOBCANDIDATES.CURDATE + :DAYSREJECT < SQL.DATE
AND   JOBCANDSTATS.REJECTED = 'Y'
AND   JOBCANDIDATES.ZCLA_REJSENT <> 'Y'
;
OPEN CAND ;
GOTO 9 WHERE :RETVAL = 0 ;
LABEL 1 ;
:JOBCANDIDATE = 0 ;
:JOBID = '';
:JOBNUM = :FNAME = :SNAME = :EMAIL = :JOBDES = '' ;
FETCH CAND INTO :JOBCANDIDATE ,:JOBNUM , :JOBDES , :FNAME , :SNAME
, :EMAIL , :JOBID;
GOTO 8 WHERE :RETVAL = 0 ;
/*
Send Email*/
SELECT USERSB.REPLYTO
INTO :EMAIL
FROM USERSB, JOBCANDIDATES, USERSA
WHERE JOBCANDIDATES.JOBCANDIDATE = :JOBCANDIDATE
AND   JOBCANDIDATES.CANDIDATE = USERSB.USERB
AND   USERSB.USERB = USERSA.USERB
AND USERSA.ZGEM_AGENCY = 'Y'
;
/*--*/
:PAR1 = :JOBDES ;
:PAR2 = :FNAME ;
:PAR3 = '' ;
SELECT STRPIECE(:SNAME, ' ', 1,1) INTO :PAR3 FROM DUMMY;
/*--*/
:ENT = 'ZCLA_HRMAIL' ;
:ENTTYPE = 'P' ;
:ENTMSG = 20;
:_Subject = 'Clarkson Evans Application' ;
/*
*/
SELECT STRCAT(SQL.TMPFILE,'.html') INTO :TMPFILE FROM DUMMY ;
#INCLUDE MAILBOX/ZCLA_BUF1
MAILMSG 10 TO EMAIL :EMAIL DATA :TMPFILE;
/*--*/
GOTO 888 WHERE NOT EXISTS (
SELECT JOBCANDSTAT
FROM JOBCANDSTATS
WHERE STATDES = 'Closed'
);
:NEWSTAT = 0;
SELECT SQL.TMPFILE INTO :GEN FROM DUMMY;
LINK GENERALLOAD TO :GEN;
ERRMSG 8889 WHERE :RETVAL = 0;
/*--*/
SELECT JOBCANDSTAT INTO :NEWSTAT
FROM JOBCANDSTATS
WHERE STATDES = 'Closed';
/*--*/
INSERT INTO GENERALLOAD (KEY1, LINE, RECORDTYPE)
VALUES ( :JOBID,1988, '1');
INSERT INTO GENERALLOAD (INT1, TEXT1, LINE, RECORDTYPE)
VALUES (:JOBCANDIDATE, 'Closed', 1989, '2');
/*--*/
/*#INCLUDE func/ZCLA_RESETERR*/
EXECUTE INTERFACE 'ZGEM_SETAPPLICANTSTA', SQL.TMPFILE, '-L', :GEN ;
UNLINK GENERALLOAD;
LABEL 888;
/*
Flag rejection sent */
UPDATE JOBCANDIDATES
SET    ZCLA_REJSENT = 'Y'
WHERE  JOBCANDIDATE = :JOBCANDIDATE
;
/*--*/
LOOP 1 ;
LABEL 8 ;
CLOSE CAND ;
LABEL 9 ;
/*
*/
LABEL 99 ;
/*
*/
SELECT SQL.DATE AS '.',
'/////////////////////////////////' AS '.'
FROM JOBCANDIDATES
WHERE 0=0
AND   JOBCANDIDATE > 0
AND   JOBCANDIDATES.ZCLA_RECSENT <> 'Y'
FORMAT ADDTO '../../ZGEM_Application_Confimation.txt';
/*--*/
SELECT JOBCANDIDATES.CANDIDATE AS ID
,      USERSB.EMAIL AS EMAIL
,      USERSB.SNAME AS NAME
,      JOBS.JOBDES AS JOB
FROM JOBCANDIDATES
,   USERSB
,   USERS
,   POSITIONS
,   JOBS
WHERE JOBCANDIDATES.ZCLA_RECSENT <> 'Y'
AND   JOBCANDIDATES.CANDIDATE = USERSB.USERB
AND   JOBCANDIDATES.USER = USERS.USER
AND   JOBS.JOB = JOBCANDIDATES.JOB
AND   POSITIONS.POSITION = JOBS.POSITION
;
/*
Set the reply to address */
:_REPLYTOEMAIL = 'jobs@clarksonevans.co.uk';
:ENTMSG = 0 ;
:ENT = 'ZCLA_HRMAIL' ;
:ENTTYPE = 'P' ;
/*
Cursor JOBCANDIDATE not sent REC
*/
DECLARE CAN CURSOR FOR
SELECT JOBCANDIDATE
FROM JOBCANDIDATES
WHERE 0=0
AND   JOBCANDIDATE > 0
AND   JOBCANDIDATES.ZCLA_RECSENT <> 'Y'
;
/*
*/
OPEN CAN ;
GOTO 9 WHERE :RETVAL = 0 ;
LABEL 1 ;
:JC = :ENTMSG = 0 ;
:sendto = :_Subject = :PAR1 = :PAR2 = '' ;
FETCH CAN INTO :JC ;
GOTO 8 WHERE :RETVAL = 0 ;
/*
*/
SELECT ''
,      USERSB.EMAIL
,      'Application'
,      60
,      USERSB.SNAME
,      JOBS.JOBDES
INTO :X
,    :sendto
,    :_Subject
,    :ENTMSG
,    :PAR1
,    :PAR2
FROM JOBCANDIDATES
,   USERSB
,   USERS
,   POSITIONS
,   JOBS
WHERE  (JOBCANDIDATES.JOBCANDIDATE = :JC )
AND   JOBCANDIDATES.CANDIDATE = USERSB.USERB
AND   JOBCANDIDATES.USER = USERS.USER
AND   JOBS.JOB = JOBCANDIDATES.JOB
AND   POSITIONS.POSITION = JOBS.POSITION
;
/*
*/
/*
*/
SELECT STRCAT(SQL.TMPFILE , '.html') INTO :TMPFILE FROM DUMMY ;
#INCLUDE MAILBOX/ZCLA_BUF1
MAILMSG 801 TO EMAIL :sendto DATA :TMPFILE  ;
UPDATE JOBCANDIDATES
SET ZCLA_RECSENT = 'Y'
WHERE  JOBCANDIDATES.JOBCANDIDATE = :JC
AND :RETVAL > 0
;
/*
*/
LOOP 1 ;
LABEL 8 ;
CLOSE CAN ;
LABEL 9 ;
SELECT ATOI(:HTMLVALUE)
INTO   :$.IV
FROM   DUMMY ;
/**/
SELECT :$.IV
FROM DUMMY
TABS ADDTO '../../NEILIV.TXT';
/*Cursor through all WBS and raise invoice*/
DECLARE ZCLA_INV CURSOR FOR
SELECT ZCLA_CONTRACTSCHEDUL.CONTRACTSCHED
FROM   ZCLA_CONTRACTSCHEDUL
WHERE  ZCLA_CONTRACTSCHEDUL.IVDATE = :$.FDT  ;
/**/
OPEN ZCLA_INV ;
GOTO 1989 WHERE :RETVAL <= 0 ;
/**/
LABEL 1990 ;
:ZCLA_CONTRACTSCHED = 0 ;
/**/
FETCH ZCLA_INV INTO :ZCLA_CONTRACTSCHED ;
GOTO 1991 WHERE :RETVAL <= 0 ;
/*Insert Header Reacord*/
/**/
LINK GENERALLOAD TO :$.GNL ;
GOTO 0711 WHERE :RETVAL <= 0 ;
/**/
INSERT INTO GENERALLOAD (LINE, RECORDTYPE, TEXT1, TEXT2, TEXT3
,      TEXT4, TEXT5)
SELECT SQL.LINE, '1', CUSTOMERS.CUSTNAME, DOCUMENTS.DOCNO,
DESTCODES.CODE
,      BRANCHES.BRANCHNAME, 'Contract Work'
FROM   DOCUMENTS, DESTCODES, BRANCHES, CUSTOMERS,
ZCLA_CONTRACTSCHEDUL
,      ZCLA_CONTRACTS
WHERE  DOCUMENTS.DESTCODE            = DESTCODES.DESTCODE
AND    DOCUMENTS.ZCLA_BRANCH         = BRANCHES.BRANCH
AND    DOCUMENTS.CUST                = CUSTOMERS.CUST
AND    ZCLA_CONTRACTSCHEDUL.CONTRACT = ZCLA_CONTRACTS.CONTRACT
AND    ZCLA_CONTRACTS.DOC            = DOCUMENTS.DOC
AND    ZCLA_CONTRACTSCHEDUL.CONTRACTSCHED = :ZCLA_CONTRACTSCHED ;
/*Insert Lines*/
INSERT INTO GENERALLOAD (LINE, RECORDTYPE, TEXT1, TEXT2, REAL1
, INT1, INT2 )
SELECT SQL.LINE * 2 , '2', PART.PARTNAME, STRCAT(
'Plot ', PLOT.WBS, ' - ',  ZCLA_HOUSETYPE.TYPENAME, ' - ',
ZCLA_FIXES.DESCRIPTION)
,      PROJACTS.ZCLA_TOTPRICE , 1000, PROJACTS.PROJACT
FROM   PART, PROJACTS, PROJACTS HOUSETYPE, PROJACTS PLOT
,      ZCLA_HOUSETYPE, ZCLA_FIXES, ZCLA_PROJACTSCH
WHERE  PART.ZCLA_FIXINV = 'Y'
AND    ZCLA_PROJACTSCH.CONTRACTSCHED = :ZCLA_CONTRACTSCHED
AND    ZCLA_PROJACTSCH.PROJACT       = PROJACTS.PROJACT
AND    PROJACTS.ZCLA_PLOT            = HOUSETYPE.PROJACT
AND    HOUSETYPE.ZCLA_PLOT           = PLOT.PROJACT
AND    HOUSETYPE.ZCLA_HOUSETYPEID    = ZCLA_HOUSETYPE.HOUSETYPEID
AND    PROJACTS.ZCLA_FIX             = ZCLA_FIXES.FIXID
AND    ZCLA_PROJACTSCH.SIGNED        = 'Y'
AND    ZCLA_PROJACTSCH.INVOICED      = '\0'  ;
/**/
INSERT INTO GENERALLOAD (LINE, RECORDTYPE, TEXT1, TEXT2, INT1)
SELECT SQL.LINE * 2 + 1 , '3', DOCUMENTS.DOCNO , PROJACTS.WBS,
PROJACTS.PROJACT
FROM   ZCLA_CONTRACTSCHEDUL, ZCLA_CONTRACTS, DOCUMENTS,
ZCLA_PROJACTSCH
,      PROJACTS
WHERE  ZCLA_CONTRACTSCHEDUL.CONTRACTSCHED = :ZCLA_CONTRACTSCHED
AND    ZCLA_CONTRACTSCHEDUL.CONTRACT      = ZCLA_CONTRACTS.CONTRACT
AND    ZCLA_CONTRACTS.DOC                 = DOCUMENTS.DOC
AND    ZCLA_PROJACTSCH.CONTRACTSCHED      = :ZCLA_CONTRACTSCHED
AND    ZCLA_PROJACTSCH.PROJACT            = PROJACTS.PROJACT
AND    ZCLA_PROJACTSCH.SIGNED             = 'Y'
AND    ZCLA_PROJACTSCH.INVOICED           = '\0';
/*Now need to check if Payment cards are required then we have
signed payment */
GOTO 1000 WHERE :ZCLA_CONTTYPE = 'Contract Work' ;
:PAYMENT = '' ;
SELECT ZCLA_EXTRAIVPREF.ANSWER
INTO   :PAYMENT
FROM   ZCLA_EXTRAIVPREF, ZCLA_CONTRACTS, ZCLA_CONTRACTSCHEDUL
WHERE  ZCLA_EXTRAIVPREF.PREF              = 1
AND    ZCLA_EXTRAIVPREF.CONTTYPE          = ZCLA_CONTRACTS.CONTTYPEL
AND    ZCLA_CONTRACTSCHEDUL.CONTRACTSCHED = :ZCLA_CONTRACTSCHED
AND    ZCLA_CONTRACTSCHEDUL.CONTRACT      = ZCLA_CONTRACTS.CONTRACT
AND    ZCLA_EXTRAIVPREF.ANSWER            <> '' ;
/**/
GOTO 1500 ;
LABEL 1000 ;
/**/
SELECT ZCLA_PROJIVPREF.ANSWER
INTO   :PAYMENT
FROM   ZCLA_PROJIVPREF, ZCLA_CONTRACTS, ZCLA_CONTRACTSCHEDUL
WHERE  ZCLA_PROJIVPREF.PREF               = 1
AND    ZCLA_PROJIVPREF.CONTTYPE           = ZCLA_CONTRACTS.CONTTYPEL
AND    ZCLA_CONTRACTSCHEDUL.CONTRACTSCHED = :ZCLA_CONTRACTSCHED
AND    ZCLA_CONTRACTSCHEDUL.CONTRACT      =  ZCLA_CONTRACTS.CONTRACT
AND    ZCLA_PROJIVPREF.ANSWER             <> '' ;
/**/
/**/
LABEL 1500 ;
GOTO 2602 WHERE :PAYMENT = 'No' ;
/**/
:ZLINE = :PREVLINE = 0 ;
LABEL 2702 ;
SELECT GENERALLOAD.LINE
INTO   :ZLINE
FROM   GENERALLOAD
WHERE  GENERALLOAD.RECORDTYPE = '2'
AND    GENERALLOAD.LINE       > :PREVLINE
ORDER BY 1 ASC ;
GOTO 2602 WHERE :RETVAL <= 0 ;
/**/
:PROJACT = 0 ;
SELECT GENERALLOAD.INT2
INTO   :PROJACT
FROM   GENERALLOAD
WHERE  GENERALLOAD.LINE = :ZLINE ;
/*Does this Projact have a payment card that is signed*/
SELECT 'X'
FROM   ZCLA_PROJACTSCH, EXTFILES, ZCLA_FILECATEGORIES
WHERE  ZCLA_PROJACTSCH.PROJACT         = :PROJACT
AND    ZCLA_PROJACTSCH.CONTRACTSCHED   = :ZCLA_CONTRACTSCHED
AND    ZCLA_PROJACTSCH.PROJACTSCHED    =  EXTFILES.IV
AND    EXTFILES.TYPE                   = '~'
AND    EXTFILES.ZCLA_FILECATEGORY      =
ZCLA_FILECATEGORIES.FILECATEGORY
AND    ZCLA_FILECATEGORIES.PAYMENTCARD = 'Y'
AND    EXTFILES.SIGNED                 = 'Y' ;
/*If it does then we can proceed*/
GOTO 2802 WHERE :RETVAL > 0;
/*If not then we need to delete these records as invoice should not
be created*/
DELETE FROM GENERALLOAD WHERE LINE = :ZLINE ;
DELETE FROM GENERALLOAD
WHERE       GENERALLOAD.RECORDTYPE  = '3'
AND         GENERALLOAD.INT1        = :PROJACT ;
/**/
LABEL 2802 ;
:PREVLINE = :ZLINE ;
LOOP 2702 ;
/**/
LABEL 2602 ;
SELECT 'X'
FROM   GENERALLOAD
WHERE  GENERALLOAD.RECORDTYPE = '2' ;
GOTO 0711 WHERE :RETVAL <= 0 ;
/*Load Invoice */
EXECUTE INTERFACE 'ZCLA_FIXINVOICE', SQL.TMPFILE, '-L' , :$.GNL ;
/* Error Logging */
:i_LOGGEDBY = 'ZCLA_FIXINVOICE';
#INCLUDE func/ZEMG_ERRMSGLOG
/*Now Finalise invoice*/
:ZCLA_IV = 0 ;
/**/
SELECT ATOI(GENERALLOAD.KEY1)
INTO   :ZCLA_IV
FROM   GENERALLOAD
WHERE  GENERALLOAD.LOADED = 'Y' ;
/*Now link invoices to par*/
:PAR = '' ;
SELECT SQL.TMPFILE
INTO   :PAR
FROM   DUMMY ;
/**/
LINK INVOICES TO :PAR ;
GOTO 0708 WHERE :RETVAL <= 0 ;
/**/
INSERT INTO INVOICES
SELECT * FROM INVOICES ORIG
WHERE ORIG.IV = :ZCLA_IV ;
/*Now Finalise invoice*/
EXECUTE ACTIVATF '-P', 'CLOSEANINVOICE', 'INVOICES', :PAR;
/**/
LABEL 0112 ;
UNLINK AND REMOVE INVOICES ;
LABEL 0708 ;
/***********************************************************/
/***********************************************************/
/**              Now tick invoiced box                    **/
/***********************************************************/
/***********************************************************/
/**/
/**/
INSERT INTO ZCLA_IVSCH (IV, CONTRACTSCHED, PROJACT)
SELECT :ZCLA_IV, :ZCLA_CONTRACTSCHED, GENERALLOAD.INT1
FROM   GENERALLOAD
WHERE  GENERALLOAD.RECORDTYPE = '3'
AND    GENERALLOAD.LOADED     = 'Y' ;
/**/
:ZLINE = :ZPREVLINE = 0 ;
LABEL 0803 ;
:ZCLA_PROJACT = 0 ;
SELECT GENERALLOAD.LINE, GENERALLOAD.INT1
INTO   :ZLINE, :ZCLA_PROJACT
FROM   GENERALLOAD
WHERE  GENERALLOAD.LINE       > :ZPREVLINE
AND    GENERALLOAD.RECORDTYPE = '3'
AND    GENERALLOAD.LOADED     = 'Y' ;
/**/
GOTO 0903 WHERE :RETVAL <= 0 ;
/**/
UPDATE ZCLA_PROJACTSCH
SET    INVOICED                      = 'Y'
WHERE  ZCLA_PROJACTSCH.PROJACT       = :ZCLA_PROJACT
AND    ZCLA_PROJACTSCH.CONTRACTSCHED = :ZCLA_CONTRACTSCHED ;
/**/
:ZPREVLINE = :ZLINE ;
/**/
LOOP 0803 ;
LABEL 0903 ;
/**/
/***********************************************************/
/***********************************************************/
/**              Now Deal with attachments                **/
/***********************************************************/
/***********************************************************/
/*Now Save Copy of invoice and copy attachments*/
:IVNUM = :TYPE = '' ;
/**/
SELECT INVOICES.IVNUM, INVOICES.TYPE
INTO   :IVNUM,  :TYPE
FROM   INVOICES
WHERE  INVOICES.IV = :ZCLA_IV ;
/**/
/**/
DELETE FROM SYSLASTS WHERE NAME = 'ZCLA_BLSUBDIR' ;
GOTO 1210819 WHERE EXISTS(SELECT 'X' FROM SYSLASTS
WHERE NAME = 'ZCLA_BLSUBDIR' AND VALUE = 1);
INSERT INTO SYSLASTS(NAME, VALUE) VALUES('ZCLA_BLSUBDIR', 1);
EXECUTE MAKEDIR STRCAT(SYSPATH('MAIL', 1), 'IV');
LABEL 1210819;
GOTO 12108191 WHERE EXISTS(SELECT 'X' FROM SYSLASTS
WHERE NAME = 'ZCLA_BLSUBDIR' AND CHARVALUE = :IVNUM);
UPDATE SYSLASTS SET CHARVALUE = :IVNUM
WHERE NAME = 'ZCLA_BLSUBDIR';
SELECT STRCAT(SYSPATH('MAIL', 1), 'IV/', :IVNUM)
INTO :PATH FROM DUMMY;
EXECUTE MAKEDIR :PATH;
LABEL 12108191;
/**/
UPDATE INVOICES
SET    ZCLA_PATH   = :PATH
WHERE  INVOICES.IV = :ZCLA_IV ;
/**/
:OUTPUTXML = :MSG = :PDFOUT = :PDFMSG = :PRINTEXEC = '' ;
:PRINTFORMAT = :WORDFORMAT = 0 ;
/**/
SELECT STRCAT(SQL.TMPFILE, '.pdf') INTO :PDFOUTTMP FROM DUMMY;
/**/
SELECT STRCAT(:PATH, '/',  STRIND(SEARCHDOCVERS.DOCGUID, 1, 6), '-',
INVOICES.IVNUM, '.xml'), STRCAT(INVOICES.IVNUM, ' xml'),
STRCAT(:PATH, '/', STRIND(SEARCHDOCVERS.DOCGUID, 1, 6),
'-', INVOICES.IVNUM, '.pdf'),
STRCAT(INVOICES.IVNUM, ' pdf'), IVTYPES.WWWPRINTFORMATNUM,
IVTYPES.WWWWORDFORMATNUM, EXEC.ENAME
INTO :OUTPUTXML, :MSG, :PDFOUT, :PDFMSG, :PRINTFORMAT,
:WORDFORMAT, :PRINTEXEC
FROM INVOICES, SEARCHDOCVERS, STATUSTYPES, IVTYPES, EXEC
WHERE INVOICES.IV = :ZCLA_IV
AND INVOICES.DEBIT = IVTYPES.DEBIT
AND INVOICES.TYPE = IVTYPES.TYPE
AND STATUSTYPES.DOCEXEC = IVTYPES.EXEC
AND STATUSTYPES.TYPE = SEARCHDOCVERS.STATUSTYPE
AND INVOICES.IV = SEARCHDOCVERS.IV
AND IVTYPES.WWWPRINTEXEC = EXEC.EXEC;
/**/
/**/
GOTO 10919 WHERE EXISTS(SELECT 'X' FROM EXTFILES
WHERE IV = :ZCLA_IV AND TYPE = 'I'
AND TOUPPER((STRPIECE(STRPIECE(EXTFILENAME, '-', 2, 2), '.', 2, 1)))
= 'PDF'
AND TOUPPER(STRPIECE(STRPIECE(EXTFILENAME, '-', 2, 2), '.', 1, 1))
= TOUPPER(:IVNUM));
/**/
:PNM = (:PRINTEXEC <> '' ? :PRINTEXEC :
(:TYPE = 'A' ? 'WWWSHOWAIV' :
(:TYPE = 'C' ? 'WWWSHOWCIV' : (:TYPE = 'E' ? 'WWWSHOWEIV' :
'WWWSHOWRIV'))));
/**/
:WWWPRINTFORMATNUM = (:WORDFORMAT <> 0 ? :WORDFORMAT :
(:PRINTFORMAT <> 0 ? :PRINTFORMAT :
(:TYPE = 'A' ? -6 : (:TYPE = 'C' ? -12 : -7))));
/**/
SELECT EXEC.EXEC
INTO   :PREXEC
FROM   EXEC
WHERE  EXEC.ENAME = :PNM
AND    EXEC.TYPE = 'P';
/**/
:OLDVALUE = 0;
:OLDISWORD = '\0';
/**/
SELECT PRINTFORMAT.VALUE
,      PRINTFORMAT.ISWORD
INTO   :OLDVALUE, :OLDISWORD
FROM   PRINTFORMAT
WHERE  PRINTFORMAT.USER = SQL.USER
AND    PRINTFORMAT.EXEC = :PREXEC ;
/**/
GOTO 3 WHERE :OLDVALUE <> 0;
/**/
INSERT INTO PRINTFORMAT(EXEC, USER) VALUES(:PREXEC, SQL.USER);
/**/
LABEL 3;
:ZCLA_WORKTYPE = '' ;
SELECT GENERALLOAD.TEXT5
INTO   :ZCLA_WORKTYPE
FROM   GENERALLOAD
WHERE  GENERALLOAD.RECORDTYPE = '1' ;
/**/
GOTO 9000 WHERE :ZCLA_WORKTYPE = 'Extras' ;
:ANSWER = '' ;
SELECT ZCLA_PROJIVPREF.ANSWER
INTO   :ANSWER
FROM   ZCLA_PROJIVPREF, ZCLA_CONTRACTSCHEDUL, ZCLA_CONTRACTS
WHERE  ZCLA_CONTRACTSCHEDUL.CONTRACTSCHED = :ZCLA_CONTRACTSCHED
AND    ZCLA_CONTRACTSCHEDUL.CONTRACT      = ZCLA_CONTRACTS.CONTRACT
AND    ZCLA_CONTRACTS.CONTTYPEL           = ZCLA_PROJIVPREF.CONTTYPE
AND    ZCLA_CONTRACTS.DOC                 = ZCLA_PROJIVPREF.DOC
AND    ZCLA_PROJIVPREF.PREF               = 3  ;
GOTO 9500 ;
LABEL 9000 ;
SELECT ZCLA_EXTRAIVPREF.ANSWER
INTO   :ANSWER
FROM   ZCLA_EXTRAIVPREF, ZCLA_CONTRACTSCHEDUL, ZCLA_CONTRACTS
WHERE  ZCLA_CONTRACTSCHEDUL.CONTRACTSCHED = :ZCLA_CONTRACTSCHED
AND    ZCLA_CONTRACTSCHEDUL.CONTRACT      = ZCLA_CONTRACTS.CONTRACT
AND    ZCLA_CONTRACTS.CONTTYPEL           =
ZCLA_EXTRAIVPREF.CONTTYPE
AND    ZCLA_CONTRACTS.DOC                 = ZCLA_EXTRAIVPREF.DOC
AND    ZCLA_EXTRAIVPREF.PREF              = 3 ;
LABEL 9500 ;
/**/
/*Get print format from preferences*/
SELECT ZCLA_ANSWERFORMATS.EXTMSG
INTO   :WWWPRINTFORMATNUM
FROM   ZCLA_ANSWERFORMATS
WHERE  ZCLA_ANSWERFORMATS.PREF   = 3
AND    ZCLA_ANSWERFORMATS.ANSWERS =  :ANSWER ;
/**/
UPDATE PRINTFORMAT
SET    VALUE = :WWWPRINTFORMATNUM,
ISWORD       = (:WORDFORMAT <> 0 ? 'Y' : '\0')
WHERE  PRINTFORMAT.USER = SQL.USER
AND    PRINTFORMAT.EXEC = :PREXEC ;
/**/
GOTO 210722 WHERE :WORDFORMAT <> 0 ;
/**/
/**/
EXECUTE WINHTML '-d', :PNM, '', '', '-v', :ZCLA_IV, '-g', '-signpdf'
, '-pdf', :PDFOUT, '-s' ;
/*Did the file create */
SELECT SQL.TMPFILE INTO :STAK FROM DUMMY;
LINK STACK TO :STAK;
ERRMSG 1 WHERE :RETVAL <= 0;
/*Check size of file to ensure it created*/
EXECUTE GETSIZE :PDFOUTTMP, :STAK;
/**/
:EXIST = 0 ;
SELECT STACK.ELEMENT
INTO   :EXIST
FROM   STACK
WHERE  STACK.ELEMENT > 0;
UNLINK STACK;
/*If file created then don't try to create new ones */
GOTO 2107221 WHERE :EXIST > 0;
EXECUTE WINHTML '-d', :PNM, '', '', '-v', :ZCLA_IV, '-s', '-pdf',
:PDFOUTTMP, '-nm';
GOTO 2107221;
LABEL 210722;
EXECUTE WINHTML '-d', :PNM, '', '', '-v', :ZCLA_IV, '-s',
'-format', ABS(:WWWPRINTFORMATNUM),'-wpdf', :PDFOUT;
LABEL 2107221;
GOTO 10919 WHERE :OLDVALUE = 0;
UPDATE PRINTFORMAT SET VALUE = :OLDVALUE, ISWORD = :OLDISWORD
WHERE USER = SQL.USER AND EXEC = :PREXEC;
LABEL 10919;
/**/
LINK GENERALLOAD GEN TO :$.GEN ;
GOTO 1502 WHERE :RETVAL <= 0 ;
/**/
INSERT INTO GENERALLOAD GEN(LINE,  RECORDTYPE, INT1)
SELECT SQL.LINE, '1', :ZCLA_IV
FROM   DUMMY ;
/**/
INSERT INTO GENERALLOAD GEN( LINE, RECORDTYPE,  TEXT1, TEXT2)
SELECT SQL.LINE + 1, '2', :PDFOUT
,      ZCLA_FILECATEGORIES.CATEGORYNAME
FROM   ZCLA_FILECATEGORIES
WHERE  ZCLA_FILECATEGORIES.INVOICE = 'Y' ;
/**/
INSERT INTO GENERALLOAD GEN(LINE, RECORDTYPE,TEXT6, TEXT2)
SELECT SQL.LINE + 2 , '2', EXTFILES.EXTFILENAME
,      ZCLA_FILECATEGORIES.CATEGORYNAME
FROM   EXTFILES, ZCLA_FILECATEGORIES, ZCLA_PROJACTSCH, PROJLINK
WHERE  ZCLA_PROJACTSCH.CONTRACTSCHED   = :ZCLA_CONTRACTSCHED
AND    ZCLA_PROJACTSCH.PROJACTSCHED    = EXTFILES.IV
AND    EXTFILES.TYPE                   = '~'
AND    EXTFILES.ZCLA_FILECATEGORY = ZCLA_FILECATEGORIES.FILECATEGORY
AND    (ZCLA_FILECATEGORIES.PAYMENTCARD = 'Y' OR
ZCLA_FILECATEGORIES.COW = 'Y')
AND    PROJLINK.IV      = :ZCLA_IV
AND    PROJLINK.PROJACT =  ZCLA_PROJACTSCH.PROJACT;
/**/
SELECT LINE, RECORDTYPE,TEXT1, TEXT2
FROM   GENERALLOAD GEN
TABS  ADDTO '../../GEN.TXT' ;
/**/
/*Load Invoice Attachments */
EXECUTE INTERFACE 'ZCLA_INVOICE', SQL.TMPFILE, '-L' , :$.GEN ;
/* Error Logging */
:i_LOGGEDBY = 'ZCLA_INVOICE';
#INCLUDE func/ZEMG_ERRMSGLOG
/**/
SELECT SQL.TMPFILE
INTO   :PAR
FROM   DUMMY ;
/**/
LINK INVOICES TO :PAR ;
GOTO 0708 WHERE :RETVAL <= 0 ;
/**/
INSERT INTO INVOICES
SELECT * FROM INVOICES ORIG
WHERE ORIG.IV = :ZCLA_IV ;
/*Batch invoices documents */
EXECUTE ACTIVATF '-P', 'ZCLA_INVOICE', 'INVOICES', :PAR;
/**/
LABEL 0112 ;
UNLINK AND REMOVE INVOICES ;
LABEL 0708 ;
/**/
LABEL 1502 ;
UNLINK AND REMOVE GENERALLOAD GEN ;
/**/
LABEL 0711 ;
UNLINK AND REMOVE GENERALLOAD ;
LOOP 1990 ;
/**/
LABEL 1991 ;
CLOSE ZCLA_INV ;
/**/
LABEL 1989 ;
/* */
#INCLUDE func/ZCLA_DEBUGUSR
SELECT 'ZCLA_COMPCALC/STEP10' FROM DUMMY
WHERE :DEBUG = 1
FORMAT ADDTO :DEBUGFILE ;
/* */
LINK PROJACTS TO :$.PAR;
GOTO 999 WHERE :RETVAL <= 0;
SELECT * FROM PROJACTS
WHERE :DEBUG = 1
FORMAT ADDTO :DEBUGFILE;
:PRO = 0;
SELECT PROJACT INTO :PRO FROM PROJACTS
WHERE PROJACT > 0;
SELECT :PRO FROM DUMMY
WHERE :DEBUG = 1
FORMAT ADDTO :DEBUGFILE;
LINK ZCLA_CPRPREFIX TO :$.CLA;
GOTO 999 WHERE :RETVAL <= 0;
/* Get components per room in a housetype
put it into ZCLA_CPRPERFIX TABLE */
INSERT INTO ZCLA_CPRPREFIX (CUST, CUSTDES, HOUSETYPEID, TYPENAME,
DOC, DOCNO, PROJDES, ROOMDES, QUANT, PARTNAME, PARTDES, FAMILYNAME,
COLNAME, SORT, PLOT)
SELECT D.CUST
, CUST.CUSTDES
, H.HOUSETYPEID
, H.TYPENAME
, D.DOC
, D.DOCNO
, DP.PROJDES
, R.ROOMDES
, C.TQUANT
, PART.PARTNAME
, PART.PARTDES
, E.ELNAME
, A.NAME
, R.SORT
, PLOT.ACTDES
FROM PROJACTS P
, ZCLA_PLOTELEMENT E
, ZCLA_PLOTROOMS PR
, ZCLA_ROOMS R
, DOCUMENTS D
, ZCLA_PLOTCOMPONENT C
, PART
, CUSTOMERS CUST
, ZCLA_HOUSETYPE H
, DOCPROJ DP
, FAMILY F
, ZCLA_ACCYCOL A
, PROJACTS PLOT
WHERE P.PROJACT = :PRO
AND P.ZCLA_EL = E.EL
AND PR.PROJACT = P.PROJACT
AND PR.ROOM = R.ROOM
AND P.DOC = D.DOC
AND P.PROJACT = C.PROJACT
AND C.ROOM = PR.ROOM
AND C.PART = PART.PART
AND D.CUST = CUST.CUST
AND P.ZCLA_HOUSETYPEID = H.HOUSETYPEID
AND D.DOC = DP.DOC
AND C.COL = A.COL
AND PART.FAMILY = F.FAMILY
AND P.ZCLA_PLOT = PLOT.PROJACT
;
/**/
LABEL 999;
UNLINK PROJACTS;
UNLINK ZCLA_CPRPREFIX;
/*
*    Calls package update for matching elements
*/
#INCLUDE func/ZCLA_DEBUGUSR
SELECT 'ZCLA_UPDPLOT2-STEP10'
FROM DUMMY WHERE :DEBUG = 1
FORMAT ADDTO :DEBUGFILE ;
/*
*/
:OPENEDIT = :HTEDIT = :HOUSETYPE = 0 ;
:PACKAGENAME  = :PORDERNO = :EXTFILENAME = '' ;
:PACKAGEPRICE = 0.0 ;
:INVSEP = :CLOSEFLAG = '\0' ;
/*
*/
LINK ZCLA_HTEDIT TO :$.PAR ;
ERRMSG 1 WHERE :RETVAL = 0 ;
SELECT HOUSETYPEID , HTEDIT , PACKAGENAME , PACKAGEPRICE
, CLOSEFLAG , PORDERNO , EXTFILENAME , INVSEP
INTO :HOUSETYPE , :HTEDIT , :PACKAGENAME , :PACKAGEPRICE
, :CLOSEFLAG , :PORDERNO , :EXTFILENAME , :INVSEP
FROM ZCLA_HTEDIT
WHERE HOUSETYPEID <> 0 ;
UNLINK ZCLA_HTEDIT
;
SELECT :HOUSETYPE , :HTEDIT , :PACKAGENAME , :PACKAGEPRICE
, :CLOSEFLAG , :PORDERNO , :EXTFILENAME , :INVSEP
FROM DUMMY WHERE :DEBUG = 1
FORMAT ADDTO :DEBUGFILE ;
/*
*/
ERRMSG 899 WHERE :CLOSEFLAG = 'Y' ;
ERRMSG 900 WHERE :PACKAGENAME = '' ;
/*
*/
DECLARE ELSEL CURSOR FOR
SELECT SITE.DOC AS SITE
,   PLOT.PROJACT AS PLOT
,   EL.PROJACT AS EL
FROM PROJACTS EL , PROJACTS PLOT , DOCUMENTS SITE , ZCLA_ELSTATUSES
WHERE 0 = 0
AND   SITE.DOC > 0
AND   EL.ZCLA_PLOT = PLOT.PROJACT
AND   PLOT.DOC = SITE.DOC
AND   EL.ZCLA_HOUSETYPEID = :HOUSETYPE
AND   EL.STEPSTATUS = ZCLA_ELSTATUSES.STEPSTATUS
/*
AND  todo: not gone beyond updatable status
*/
;
OPEN ELSEL ;
GOTO 2602249 WHERE :RETVAL <= 0 ;
LABEL 2602241 ;
:DOC = :PLOT = :ELEMENT = 0 ;
FETCH ELSEL INTO :DOC , :PLOT , :ELEMENT ;
GOTO 2602248 WHERE :RETVAL <= 0 ;
SELECT 'Sync Element' , :DOC , :PLOT , :ELEMENT
FROM DUMMY WHERE :DEBUG = 1
FORMAT ADDTO :DEBUGFILE
;
/*
Open an edit for the plot */
INSERT INTO ZCLA_ELEDIT ( PROJACT
,      OPENEDBY
,      OPENDATE
,      PACKAGEFLAG
,      PACKAGENAME
,      PACKAGEPRICE
,      OPEN_TOTCOST
,      OPEN_TOTPRICE
,      PORDERNO
,      EXTFILENAME
,      INVSEP
)
SELECT PROJACT
,      SQL.USER
,      SQL.DATE
,      'Y'
,      :PACKAGENAME
,      :PACKAGEPRICE
,      ZCLA_TOTCOST
,      ZCLA_TOTPRICE
,      :PORDERNO
,      :EXTFILENAME
,      :INVSEP
FROM PROJACTS
WHERE 0=0
AND   :HTEDIT > 0
AND   PROJACTS.PROJACT = :ELEMENT
;
/*
Open Edit ? */
SELECT EDITID INTO :OPENEDIT
FROM ZCLA_ELEDIT
WHERE 0=0
AND   PROJACT = :ELEMENT
AND   CLOSEFLAG <> 'Y'
AND   PACKAGENAME = :PACKAGENAME
AND   :HTEDIT > 0
;
/*
Package update */
SELECT SQL.TMPFILE
INTO :PACK FROM DUMMY;
LINK ZCLA_ELEDITLOG TO :PACK ;
ERRMSG 1 WHERE :RETVAL = 0
;
#INCLUDE ZCLA_HTEDIT/W
#INCLUDE ZCLA_HTEDIT/A
#INCLUDE ZCLA_HTEDIT/R
#INCLUDE ZCLA_HTEDIT/S
#INCLUDE ZCLA_HTEDIT/H
#INCLUDE ZCLA_HTEDIT/C
#INCLUDE ZCLA_HTEDIT/P
#INCLUDE ZCLA_HTEDIT/K
/*
*/
/*GergoM | 14/11/23 | LOGID -> LOGID*/
SELECT LOGID
,     EDITID
,     PROJACT
,     UPDTYPE
,     EDITTYPE
,     ROOM
,     ROOMDES
,     GUID
,     GUID2
,     FIELD
,     OLDKEY
,     NEWKEY
,     OLDVALUE
,     NEWVALUE
,     OLDPRICE
,     NEWPRICE
,     ISDELETED
,     WASDELETED
,     INT1
,     INT2
,     INT3
,     TEXT1
,     TEXT2
,     TEXT3
,     REAL1
,     REAL2
,     REAL3
,     INT4
,     REAL4
,     DATE1
,     DATE2
,     KEY1
,     KEY2
,     PARENT
FROM ZCLA_ELEDITLOG
WHERE :DEBUG = 1
FORMAT ADDTO :DEBUGFILE
;
INSERT INTO ZCLA_ELEDITLOG ORIG (
EDITID
,     PROJACT
,     UPDTYPE
,     EDITTYPE
,     ROOM
,     ROOMDES
,     GUID
,     GUID2
,     FIELD
,     OLDKEY
,     NEWKEY
,     OLDVALUE
,     NEWVALUE
,     OLDPRICE
,     NEWPRICE
,     ISDELETED
,     WASDELETED
,     INT1
,     INT2
,     INT3
,     TEXT1
,     TEXT2
,     TEXT3
,     REAL1
,     REAL2
,     REAL3
,     INT4
,     REAL4
,     DATE1
,     DATE2
,     KEY1
,     KEY2
,     PARENT
)
SELECT
EDITID
,     PROJACT
,     UPDTYPE
,     EDITTYPE
,     ROOM
,     ROOMDES
,     GUID
,     GUID2
,     FIELD
,     OLDKEY
,     NEWKEY
,     OLDVALUE
,     NEWVALUE
,     OLDPRICE
,     NEWPRICE
,     ISDELETED
,     WASDELETED
,     INT1
,     INT2
,     INT3
,     TEXT1
,     TEXT2
,     TEXT3
,     REAL1
,     REAL2
,     REAL3
,     INT4
,     REAL4
,     DATE1
,     DATE2
,     KEY1
,     KEY2
,     PARENT
FROM ZCLA_ELEDITLOG
WHERE 0=0
AND ( UPDTYPE = 'I'
OR    UPDTYPE = 'D'
OR  ( UPDTYPE = 'U' AND ( OLDKEY <> NEWKEY
OR      OLDVALUE <> NEWVALUE
OR      OLDPRICE <> NEWPRICE ))
)
;
UNLINK ZCLA_ELEDITLOG ;
SELECT 'ELEDITLOG',LOGID
,     EDITID
,     PROJACT
,     UPDTYPE
,     EDITTYPE
,     ROOM
,     ROOMDES
,     GUID
,     GUID2
,     FIELD
,     OLDKEY
,     NEWKEY
,     OLDVALUE
,     NEWVALUE
,     OLDPRICE
,     NEWPRICE
,     ISDELETED
,     WASDELETED
,     INT1
,     INT2
,     INT3
,     TEXT1
,     TEXT2
,     TEXT3
,     REAL1
,     REAL2
,     REAL3
,     INT4
,     REAL4
,     DATE1
,     DATE2
,     KEY1
,     KEY2
,     PARENT
FROM ZCLA_ELEDITLOG
WHERE :DEBUG = 1
AND EDITID = :OPENEDIT
FORMAT ADDTO :DEBUGFILE
;
/*--*/
/*
Do Plot sync */
#INCLUDE ZCLA_HTEDIT/ZCLA_BUF5
/*
Copy Edit Split */
DELETE FROM ZCLA_ELEDITSPLIT
WHERE EDITID = :OPENEDIT
;
INSERT INTO ZCLA_ELEDITSPLIT ( PROJACT
,   EDITID
,   FIXID
,   SPLIT
,   VALUE
)
SELECT :ELEMENT
,   :OPENEDIT
,   FIXID
,   SPLIT
,   VALUE
FROM ZCLA_HTEDITSPLIT
WHERE EDITID = :HTEDIT
;
/*
Run calculation */
#INCLUDE ZCLA_ELACT/RECALC
/*
Set Close Price after Recalc */
:CLOSE_TOTCOST = :CLOSE_TOTPRICE = 0.0 ;
SELECT ZCLA_TOTCOST
,      ZCLA_TOTPRICE
INTO   :CLOSE_TOTCOST
,      :CLOSE_TOTPRICE
FROM PROJACTS
WHERE 0=0
AND   PROJACTS.PROJACT = :ELEMENT
;
/*
Close PLOT/ELEMENT edit */
UPDATE ZCLA_ELEDIT
SET CLOSEFLAG = 'Y'
,   CLOSEDATE = SQL.DATE
,   CLOSE_TOTCOST = :CLOSE_TOTCOST
,   CLOSE_TOTPRICE = :CLOSE_TOTPRICE
WHERE 0=0
AND EDITID = :OPENEDIT
;
/*
*/
LOOP 2602241 ;
LABEL 2602248 ;
CLOSE ELSEL ;
/*
Close HOUSETYPE edit */
:CLOSE_TOTCOST = 0.0;
SELECT ZCLA_TOTCOST
INTO :CLOSE_TOTCOST
FROM ZCLA_HOUSETYPE
WHERE HOUSETYPEID = :HOUSETYPE
;
UPDATE ZCLA_HTEDIT
SET CLOSEFLAG = 'Y'
,   CLOSEDATE = SQL.DATE
,   CLOSE_TOTCOST = :CLOSE_TOTCOST
WHERE 0=0
AND HTEDIT = :HTEDIT
;
LABEL 2602249 ;
#INCLUDE ZCLA_HTEDIT/I
#INCLUDE ZCLA_HTEDIT/U
#INCLUDE ZCLA_HTEDIT/D
:ZCLA_DATE = :$.FDT ;
:ZCLA_RELEASED = 0.0 ;
#INCLUDE func/ZCLA_CALCWEEKSTART /*Get Start Date of week*/
/*Calculate End Date*/
:ZCLA_EDATE = 01/01/88 ;
SELECT :ZCLA_WDATE + (7 * 24:00)
INTO   :ZCLA_EDATE FROM DUMMY ;
/**/
LINK GENERALLOAD TO :$.GNL ;
GOTO 0409 WHERE :RETVAL <= 0 ;
/**/
/*Cursor through all users who have a reporting hours record*/
DECLARE ZCLA_USER CURSOR FOR
/*
SELECT DISTINCT(TRANSPROJ.AUSER)
FROM   TRANSPROJ, TRANSORDER, USERSB
WHERE  TRANSORDER.TRANS = TRANSPROJ.TRANS
AND    TRANSORDER.TYPE = 'q'
AND    TRANSPROJ.AUSER = USERSB.USER
AND    USERSB.INACTIVE <> 'Y' ; */
/**/
SELECT DISTINCT(USERSB.USER)
FROM   USERSB
WHERE  USERSB.INACTIVE <> 'Y' ;
/**/
OPEN ZCLA_USER ;
GOTO 1989 WHERE :RETVAL <= 0 ;
/**/
LABEL 1990 ;
:ZCLA_USER = 0 ;
/**/
FETCH ZCLA_USER INTO :ZCLA_USER ;
GOTO 1991 WHERE :RETVAL <= 0 ;
/*Any Holiday Or Sickness this week ?*/
:HOURS = :HHOURS = :PHOURS = 0 ;
SELECT SUM(HOURS)
INTO   :HHOURS
FROM   ZCLA_HOLDIARY, ZEMG_HOLREQUESTS
WHERE  ZCLA_HOLDIARY.HOLDATE >= :ZCLA_WDATE
AND    ZCLA_HOLDIARY.HOLDATE <= :ZCLA_EDATE
AND    ZEMG_HOLREQUESTS.USER  = :ZCLA_USER ;
/*Get Total Hours Recorded For this week*/
SELECT SUM((USERSBWORKHOURS.TOTIME - USERSBWORKHOURS.FROMTIME +
(USERSBWORKHOURS.TOTIME < USERSBWORKHOURS.FROMTIME ? 24:00 : 0))/60)
* INTQUANT(1.0)
INTO  :HOURS
FROM  USERSBWORKHOURS, USERSB
WHERE USERSBWORKHOURS.USERB    = USERSB.USERB
AND   USERSB.USER              =  :ZCLA_USER
AND   USERSBWORKHOURS.CURDATE >= :ZCLA_WDATE
AND   USERSBWORKHOURS.CURDATE <= :ZCLA_EDATE ;
/*Get Total Hours Recorded For previous week*/
SELECT SUM((USERSBWORKHOURS.TOTIME - USERSBWORKHOURS.FROMTIME +
(USERSBWORKHOURS.TOTIME < USERSBWORKHOURS.FROMTIME ? 24:00 : 0))/60)
*  INTQUANT(1.0)
INTO  :PHOURS
FROM  USERSBWORKHOURS, USERSB
WHERE USERSBWORKHOURS.USERB    = USERSB.USERB
AND   USERSB.USER              =  :ZCLA_USER
AND   USERSBWORKHOURS.CURDATE >= :ZCLA_WDATE - (7 * 24:00)
AND   USERSBWORKHOURS.CURDATE <= :ZCLA_EDATE - (7 * 24:00) ;
/*Is there a difference in what was recorded last week and now*/
/*Get Week number*/
:LWEEK = 0 ;
SELECT ATOI(STRIND(ITOA(WEEK(:$.FDT)) , 3, 4)) - 1
INTO   :LWEEK
FROM   DUMMY ;
/*Get Difference between what was recorded and what is now
recorded*/
:ADJUSTHOURS = 0 ;
SELECT :PHOURS - ZCLA_USERPAY.HOURS
INTO   :ADJUSTHOURS
FROM   ZCLA_USERPAY, USERSB
WHERE  ZCLA_USERPAY.PAYWEEK = :LWEEK
AND    USERSB.USER          = :ZCLA_USER
AND    ZCLA_USERPAY.USERB   = USERSB.USERB ;
/**/
:TWMW = :LWMW = 0.0;
/*Get Min Wages*/
SELECT   ZGEM_MINWAGEHISTORY.MINWAGE
INTO     :TWMW
FROM     ZGEM_MINWAGEHISTORY, USERSB
WHERE    ZGEM_MINWAGEHISTORY.FROMDATE <=:ZCLA_WDATE
AND      (ZGEM_MINWAGEHISTORY.TODATE  >= :ZCLA_WDATE
OR        ZGEM_MINWAGEHISTORY.TODATE  = 01/01/88)
AND      USERSB.USER                  = :ZCLA_USER
AND      USERSB.USER  = ZGEM_MINWAGEHISTORY.USER ;
/**/
:BFHOURS = 0 ;
:EARNPOT = 0.0 ;
/**/
SELECT ZCLA_USERPAY.NWMRATE, ZCLA_USERPAY.EARNPOT
,      ZCLA_USERPAY.HOURS
INTO   :LWMW , :EARNPOT , :BFHOURS
FROM   ZCLA_USERPAY, USERSB
WHERE  ZCLA_USERPAY.PAYWEEK = :LWEEK
AND    USERSB.USER          = :ZCLA_USER
AND    ZCLA_USERPAY.USERB   = USERSB.USERB ;
/**/
:RLINE = 0 ;
/*Max Line from Table*/
SELECT MAX(ZCLA_RELEASEDPAY.LINE)
INTO   :RLINE
FROM   ZCLA_RELEASEDPAY ;
/**/
/*Is this user a team leader ?*/
SELECT 'X'
FROM   ZCLA_USERSB, USERSB
WHERE  USERSB.USERB = ZCLA_USERSB.USER
AND    ZCLA_USERSB.ISSUBTEAMLEADER = 'Y' ;
/*Skip next code if they are a team leader*/
GOTO 0109 WHERE :RETVAL <= 0 ;
/*this is a team leader so look back over all records*/
/*from all time and check if there in the correct status*/
/**/
SELECT SUM(TRANSORDER.ZCLA_ENGCOST)
INTO   :ZCLA_RELEASED
FROM   TRANSORDER, TRANSPROJ, PROJACTS, ZCLA_FIXSTATUSES, PROJLINK
WHERE  TRANSORDER.TRANS    = TRANSPROJ.TRANS
AND    TRANSPROJ.AUSER     = :ZCLA_USER
AND    TRANSORDER.DOC      = PROJLINK.IV
AND    TRANSORDER.KLINE    = PROJLINK.KLINE
AND    PROJLINK.PROJACT    = PROJACTS.PROJACT
AND    PROJACTS.STEPSTATUS = ZCLA_FIXSTATUSES.STEPSTATUS
/*AND    ZCLA_FIXSTATUSES.ZCLA_INVOICE = 'Y' */
AND    TRANSORDER.ZCLA_HOURSADDED <> 'Y'
AND    TRANSPROJ.CURDATE   <= (:$.FDT - (7 * 24:00)) ;
/**/
:ZLINE = 0 ;
SELECT MAX(LINE)
INTO   :ZLINE
FROM   GENERALLOAD ;
/**/
INSERT INTO GENERALLOAD (LINE, RECORDTYPE, INT1, REAL1, INT2, DATE1
,      INT3, INT4, INT5, INT6, REAL2, REAL3, INT7, REAL4)
SELECT :ZLINE + 1, '1', USERSB.USERB, :ZCLA_RELEASED
, ATOI(STRIND(ITOA(WEEK(:ZCLA_WDATE)) , 3, 4)), :ZCLA_WDATE
, YEAR(:ZCLA_WDATE), :HHOURS, :HOURS, :ADJUSTHOURS, :TWMW, :LWMW
, :BFHOURS, :EARNPOT
FROM   USERSB
WHERE  USERSB.USER = :ZCLA_USER ;
/*Insert Realeased */
INSERT INTO GENERALLOAD (LINE, RECORDTYPE, INT1, DATE1, INT2, INT3,
TEXT1)
SELECT SQL.LINE + :ZLINE + 1, '2', USERSB.USERB, :ZCLA_WDATE
,      TRANSORDER.TRANS, :RLINE + SQL.LINE, 'Released Payment'
FROM   USERSB, TRANSORDER, TRANSPROJ, PROJACTS, ZCLA_FIXSTATUSES,
PROJLINK
WHERE  TRANSORDER.TRANS    = TRANSPROJ.TRANS
AND    TRANSPROJ.AUSER     = :ZCLA_USER
AND    TRANSORDER.DOC      = PROJLINK.IV
AND    TRANSORDER.KLINE    = PROJLINK.KLINE
AND    PROJLINK.PROJACT    = PROJACTS.PROJACT
AND    PROJACTS.STEPSTATUS = ZCLA_FIXSTATUSES.STEPSTATUS
/*AND    ZCLA_FIXSTATUSES.ZCLA_INVOICE = 'Y' */
AND    TRANSORDER.ZCLA_HOURSADDED      <> 'Y'
AND    TRANSPROJ.AUSER     = USERSB.USER
AND    TRANSPROJ.CURDATE   <= (:$.FDT - (7 * 24:00)) ;
/**/
:ZLINE = 0 ;
SELECT MAX(LINE)
INTO   :ZLINE
FROM   GENERALLOAD ;
/**/
:RLINE = 0 ;
/*Max Line from Table*/
SELECT MAX(ZCLA_RELEASEDPAY.LINE)
INTO   :RLINE
FROM   ZCLA_RELEASEDPAY ;
/*Insert Holiday*/
INSERT INTO GENERALLOAD (LINE, RECORDTYPE, DATE1, INT4, INT3, TEXT1)
SELECT SQL.LINE + :ZLINE + 1, '2',  ZCLA_HOLDIARY.HOLDATE
,      ZEMG_HOLREQUESTS.HOLREQUEST, :RLINE + SQL.LINE,
ABSENTCODES.ABSENTDES
FROM   USERSB,  ZCLA_HOLDIARY, ZEMG_HOLREQUESTS, ABSENTCODES
WHERE  USERSB.USER                 = :ZCLA_USER
AND    USERSB.USER                 = ZEMG_HOLREQUESTS.USER
AND    ZEMG_HOLREQUESTS.HOLREQUEST =  ZCLA_HOLDIARY.HOLREQUEST
AND    ZCLA_HOLDIARY.HOLDATE BETWEEN  :$.FDT
AND    :$.FDT + (7 * 24:00)
AND    ZEMG_HOLREQUESTS.ABSENTC    = ABSENTCODES.ABSENTC   ;
/**/
/**/
:ZLINE = 0 ;
SELECT MAX(LINE)
INTO   :ZLINE
FROM   GENERALLOAD ;
/*Insert Witheld due to being in last week*/
INSERT INTO GENERALLOAD (LINE, RECORDTYPE, INT1, DATE1, INT2, INT3,
TEXT1)
SELECT SQL.LINE + :ZLINE + 1, '3', USERSB.USERB, :ZCLA_WDATE
,      TRANSORDER.TRANS, :RLINE + SQL.LINE, 'Witheld Payment'
FROM   USERSB, TRANSORDER, TRANSPROJ, PROJACTS, ZCLA_FIXSTATUSES,
PROJLINK
WHERE  TRANSORDER.TRANS    = TRANSPROJ.TRANS
AND    TRANSPROJ.AUSER     = :ZCLA_USER
AND    TRANSORDER.DOC      = PROJLINK.IV
AND    TRANSORDER.KLINE    = PROJLINK.KLINE
AND    PROJLINK.PROJACT    = PROJACTS.PROJACT
AND    PROJACTS.STEPSTATUS = ZCLA_FIXSTATUSES.STEPSTATUS
AND    TRANSORDER.ZCLA_HOURSADDED    <> 'Y'
AND    TRANSPROJ.AUSER     = USERSB.USER
AND    TRANSPROJ.CURDATE   >= (:$.FDT - (14 * 24:00))  ;
/*Now insert witheld because they are in the wrong status*/
:ZLINE = 0 ;
SELECT MAX(LINE)
INTO   :ZLINE
FROM   GENERALLOAD ;
/**/
INSERT INTO GENERALLOAD (LINE, RECORDTYPE, INT1, DATE1, INT2, INT3,
TEXT1)
SELECT SQL.LINE + :ZLINE + 1, '3', USERSB.USERB, :ZCLA_WDATE
,      TRANSORDER.TRANS, :RLINE + SQL.LINE, 'Witheld Payment'
FROM   USERSB, TRANSORDER, TRANSPROJ, PROJACTS, ZCLA_FIXSTATUSES,
PROJLINK
WHERE  TRANSORDER.TRANS    = TRANSPROJ.TRANS
AND    TRANSPROJ.AUSER     = :ZCLA_USER
AND    TRANSORDER.DOC      = PROJLINK.IV
AND    TRANSORDER.KLINE    = PROJLINK.KLINE
AND    PROJLINK.PROJACT    = PROJACTS.PROJACT
AND    PROJACTS.STEPSTATUS = ZCLA_FIXSTATUSES.STEPSTATUS
AND    ZCLA_FIXSTATUSES.ZCLA_INVOICE   <> 'Y'
AND    TRANSORDER.ZCLA_HOURSADDED      <> 'Y'
AND    TRANSPROJ.AUSER     = USERSB.USER
AND    TRANSPROJ.CURDATE   <= :$.FDT ;
/**/
/**/
GOTO 0209 ;
LABEL 0109 ;
/*Not a Team Leader*/
:ZLINE = 0 ;
SELECT MAX(LINE)
INTO   :ZLINE
FROM   GENERALLOAD ;
/*For this week and previous weeks get the released amount*/
SELECT SUM(TRANSORDER.ZCLA_ENGCOST)
INTO   :ZCLA_RELEASED
FROM   TRANSORDER, TRANSPROJ
WHERE  TRANSORDER.TRANS    = TRANSPROJ.TRANS
AND    TRANSPROJ.AUSER     = :ZCLA_USER
AND    TRANSORDER.ZCLA_HOURSADDED <> 'Y'
AND    TRANSPROJ.CURDATE   <= :$.FDT ;
/*insert into stack table */
INSERT INTO GENERALLOAD (LINE, RECORDTYPE, INT1, REAL1, INT2
, DATE1, INT3, INT4, INT5, INT6, REAL2, REAL3, INT7, REAL4)
SELECT :ZLINE + 1, '1', USERSB.USERB, :ZCLA_RELEASED
,       ATOI(STRIND(ITOA(WEEK(:ZCLA_WDATE)) , 3, 4))
,       :ZCLA_WDATE, YEAR(:ZCLA_WDATE), :HHOURS, :HOURS
,       :ADJUSTHOURS,:TWMW, :LWMW, :BFHOURS, :EARNPOT
FROM    USERSB
WHERE   USERSB.USER = :ZCLA_USER ;
/*Insert Detail*/
INSERT INTO GENERALLOAD (LINE, RECORDTYPE, INT1, DATE1, INT2, INT3,
TEXT1)
SELECT SQL.LINE + :ZLINE + 1, '2', USERSB.USERB, :ZCLA_WDATE
,      TRANSORDER.TRANS, :RLINE + SQL.LINE, 'Released Payment'
FROM   USERSB, TRANSORDER, TRANSPROJ
WHERE  TRANSORDER.TRANS    = TRANSPROJ.TRANS
AND    TRANSPROJ.AUSER     = :ZCLA_USER
AND    TRANSORDER.ZCLA_HOURSADDED      <> 'Y'
AND    TRANSPROJ.AUSER     = USERSB.USER
AND    TRANSPROJ.CURDATE   < (:$.FDT - (7 * 24:00));
/**/
:ZLINE = 0 ;
SELECT MAX(LINE)
INTO   :ZLINE
FROM   GENERALLOAD ;
/**/
:RLINE = 0 ;
/*Max Line from Table*/
SELECT MAX(ZCLA_RELEASEDPAY.LINE)
INTO   :RLINE
FROM   ZCLA_RELEASEDPAY ;
/*Insert Holiday*/
INSERT INTO GENERALLOAD (LINE, RECORDTYPE, INT1, DATE1, INT4, INT3,
TEXT1)
SELECT SQL.LINE + :ZLINE + 1, '2', USERSB.USERB,
ZCLA_HOLDIARY.HOLDATE
,      ZEMG_HOLREQUESTS.HOLREQUEST, :RLINE + SQL.LINE,
ABSENTCODES.ABSENTDES
FROM   USERSB,  ZCLA_HOLDIARY, ZEMG_HOLREQUESTS, ABSENTCODES
WHERE  USERSB.USER                 = :ZCLA_USER
AND    USERSB.USER                 = ZEMG_HOLREQUESTS.USER
AND    ZEMG_HOLREQUESTS.HOLREQUEST =  ZCLA_HOLDIARY.HOLREQUEST
AND    ZCLA_HOLDIARY.HOLDATE BETWEEN  :$.FDT
AND    :$.FDT + (7 * 24:00)
AND    ZEMG_HOLREQUESTS.ABSENTC    = ABSENTCODES.ABSENTC   ;
/**/
:ZLINE = 0 ;
SELECT MAX(LINE)
INTO   :ZLINE
FROM   GENERALLOAD ;
/*Insert Witheld due to being in last week*/
INSERT INTO GENERALLOAD (LINE, RECORDTYPE, INT1, DATE1, INT2, INT3,
TEXT1)
SELECT SQL.LINE + :ZLINE + 1, '3', USERSB.USERB, :ZCLA_WDATE
,      TRANSORDER.TRANS, :RLINE + SQL.LINE, 'Witheld Payment'
FROM   USERSB, TRANSORDER, TRANSPROJ, PROJACTS, ZCLA_FIXSTATUSES,
PROJLINK
WHERE  TRANSORDER.TRANS    = TRANSPROJ.TRANS
AND    TRANSPROJ.AUSER     = :ZCLA_USER
AND    TRANSORDER.DOC      = PROJLINK.IV
AND    TRANSORDER.KLINE    = PROJLINK.KLINE
AND    PROJLINK.PROJACT    = PROJACTS.PROJACT
AND    PROJACTS.STEPSTATUS = ZCLA_FIXSTATUSES.STEPSTATUS
AND    TRANSORDER.ZCLA_HOURSADDED    <> 'Y'
AND    TRANSPROJ.AUSER     = USERSB.USER
AND    TRANSPROJ.CURDATE   >= (:$.FDT - (7 * 24:00))  ;
/**/
LABEL 0209 ;
/**/
/**/
LOOP 1990 ;
/**/
LABEL 1991 ;
CLOSE ZCLA_USER ;
/**/
LABEL 1989 ;
/**/
SELECT LINE, RECORDTYPE, INT1, REAL1, INT2, DATE1
,      INT3, INT4, INT5, INT6, REAL2, REAL3, INT7, REAL4
FROM GENERALLOAD
WHERE INT1 = 67
TABS ADDTO '../../NEILNEWNEW.TXT';
/**/
EXECUTE INTERFACE 'ZCLA_LOADRELEASE', SQL.TMPFILE, '-L' , :$.GNL;
/* Error Logging */
:i_LOGGEDBY = 'ZCLA_LOADRELEASE';
#INCLUDE func/ZEMG_ERRMSGLOG
/**/
/*now update reporting hours to say record loaded*/
DECLARE ZCLA_TRANSUPDATE CURSOR FOR
SELECT GENERALLOAD.INT2
FROM   GENERALLOAD
WHERE  GENERALLOAD.LOADED = 'Y'
AND    GENERALLOAD.TEXT1 = 'Released Payment' ;
/**/
OPEN ZCLA_TRANSUPDATE ;
GOTO 2089 WHERE :RETVAL <= 0 ;
/**/
LABEL 2090 ;
:ZCLA_TRANS = 0 ;
/**/
FETCH ZCLA_TRANSUPDATE INTO :ZCLA_TRANS ;
GOTO 2091 WHERE :RETVAL <= 0 ;
/**/
UPDATE TRANSORDER
SET    ZCLA_HOURSADDED  = 'Y'
WHERE  TRANSORDER.TRANS = :ZCLA_TRANS ;
/**/
LOOP 2090 ;
/**/
LABEL 2091 ;
CLOSE ZCLA_TRANSUPDATE ;
/**/
LABEL 2089 ;
/**/
/*Complete or failure message (fall out report)*/
UNLINK GENERALLOAD GEN ;
LABEL 0509 ;
UNLINK GENERALLOAD ;
LABEL 0409 ;
/*
*/
#INCLUDE func/ZCLA_DEBUGUSR
SELECT 'ZCLA_UPDSITEMANF/STEP10'
FROM DUMMY
WHERE :DEBUG = 1
FORMAT ADDTO :DEBUGFILE ;
LINK ZCLA_PROJMANF TO :$.PAR;
ERRMSG 1 WHERE :RETVAL = 0 ;
/*
*/
:DOC = :ALT = 0 ;
SELECT ALT , DOC
INTO :ALT , :DOC
FROM ZCLA_PROJMANF
WHERE PROJMANF <> 0 ;
UNLINK ZCLA_PROJMANF
;
/*
Get the group customer */
:PCUST = 0 ;
SELECT PCUST INTO :PCUST
FROM CUSTOMERS , DOCUMENTS
WHERE 0=0
AND   DOCUMENTS.CUST = CUSTOMERS.CUST
AND   TYPE = 'p'
AND   DOC = :DOC
;
DELETE FROM ZCLA_PROJMANF
WHERE 0=0
AND   DOC = :DOC
AND   ALT = :ALT
;
INSERT INTO ZCLA_PROJMANF ( DOC , FAMILY , MANFID , COL , ALT ,
STYLE )
SELECT :DOC
,     FAMILY
,     MANFID
,     COL
,     ALT
,     STYLE
FROM ZCLA_DEFAULTMANF
WHERE 0=0
AND   CUST = :PCUST
AND   ALT = :ALT
;
WRNMSG 801 ;