/**/
#INCLUDE func/ZCLA_DEBUGUSR
SELECT 'PARTARC/ZCLA_CUNITBOM' , SQL.USER , :ELACT
FROM DUMMY
WHERE :DEBUG = 1
FORMAT ADDTO :DEBUGFILE ;
/*
*/
:ROOM = 0;
SELECT ROOM INTO :ROOM FROM ZCLA_ROOMS
WHERE ROOMDES = '_CONSUMERUNIT' ;
SELECT :ROOM
FROM DUMMY
WHERE :DEBUG = 1
FORMAT ADDTO :DEBUGFILE ;
/*
Determine blank part */
#INCLUDE PART/ZCLA_CUNITBOM
SELECT :BLANKPART
FROM DUMMY
WHERE :DEBUG = 1
FORMAT ADDTO :DEBUGFILE ;
/*
Declare CUNIT cursor */
DECLARE @CUCURSOR CURSOR FOR
SELECT CU.CONSUMERUNIT
FROM ZCLA_PLOTCU CU
WHERE 0=0
AND CU.PROJACT = :ELACT
;
OPEN @CUCURSOR;
GOTO 9898 WHERE :RETVAL <= 0;
LABEL 1212;
:CONSUMERUNIT = :CFGCOUNT = :TOTALWAYS = 0;
FETCH @CUCURSOR INTO :CONSUMERUNIT;
GOTO 9898 WHERE :RETVAL <= 0;
SELECT :CONSUMERUNIT
FROM DUMMY
WHERE :DEBUG = 1
FORMAT ADDTO :DEBUGFILE ;
/* Count how many child parts in the consumer unit */
SELECT SUM(ZCLA_CUNITWAYS)
INTO :CFGCOUNT
FROM ZCLA_PLOTCUCFG CFG, PART P
WHERE CFG.CONSUMERUNIT = :CONSUMERUNIT
AND CFG.PART = P.PART ;
/*
Select total waycount from cunit, total required blanks */
:BLANKSUM = 0;
SELECT P.ZCLA_CUNITWAYS - :CFGCOUNT
INTO :BLANKSUM
FROM ZCLA_PLOTCU CU, PART P
WHERE CU.CONSUMERUNIT = :CONSUMERUNIT
AND CU.PART = P.PART ;
SELECT :BLANKSUM
FROM DUMMY
WHERE :DEBUG = 1
FORMAT ADDTO :DEBUGFILE ;
/*
*/
/* 4 inserts take place here.
PART, SON = 0, ZCLA.CONSUMERUNIT.PART
PART, SON = ZCLA_CONSUMERUNITS.PART, ZCLA_CUNITCONFIG.PART
PART, SON = ZCLA_CONSUMERUNITS.PART, :BLANKPART
PART, SON = ZCLA_CUNITCONFIG.PART, PARTARC.SON
/*
Insert CUNIT and CUNITCONFIG parts into bom */
/*
Insert PART,SON as 0, cunitpart */
SELECT MAX(KLINE) + 1 INTO :LN
FROM ZCLA_PROJACTTREE
WHERE COPYUSER = SQL.USER ;
INSERT INTO ZCLA_PROJACTTREE ( COPYUSER
,   PROJACT
,   KLINE
,   SONPART
,   SONQUANT
,   USER
,   UDATE
,   DUEDATE
,   RATIO
,   DOC
,   ZCLA_ROOM
,   WHITE
,   PART
,   COL     )
SELECT SQL.USER
,      :FIXACT
,      :LN + SQL.LINE
,      SONPART.PART
,      PARTARC.SONQUANT
,      SQL.USER
,      SQL.DATE
,      SQL.DATE
,      PARTARC.SONQUANT
,      :DOC
,      ( :IGNOREROOM = 1 ? 0 : :ROOM)
,      PARTARC.ZCLA_WHITE
,      PART.PART
,      :WHITE
FROM   PART SONPART
,      PARTARC
,      ZCLA_PLOTCU
,      PART
WHERE 0=0
AND   ZCLA_PLOTCU.PART = PART.PART
AND   PARTARC.PART = ZCLA_PLOTCU.PART
AND   SONPART.PART = PARTARC.SON
AND   ZCLA_PLOTCU.PROJACT = :ELACT
AND   ZCLA_PLOTCU.CONSUMERUNIT = :CONSUMERUNIT
AND   PARTARC.ZCLA_FIXID = :FIX
;
/* Insert CUNITCONFIG parts */
SELECT MAX(KLINE) + 1 INTO :LN
FROM ZCLA_PROJACTTREE
WHERE COPYUSER = SQL.USER ;
INSERT INTO ZCLA_PROJACTTREE ( COPYUSER
,   PROJACT
,   KLINE
,   SONPART
,   SONQUANT
,   USER
,   UDATE
,   DUEDATE
,   RATIO
,   DOC
,   ZCLA_ROOM
,   WHITE
,   PART
,   COL     )
SELECT SQL.USER
,      :FIXACT
,      :LN + SQL.LINE
,      SONPART.PART
,      PARTARC.SONQUANT
,      SQL.USER
,      SQL.DATE
,      SQL.DATE
,      PARTARC.SONQUANT
,      :DOC
,      ( :IGNOREROOM = 1 ? 0 : :ROOM)
,      PARTARC.ZCLA_WHITE
,      ZCLA_PLOTCUCFG.PART
,      :WHITE
FROM   PART SONPART
,      PARTARC
,      ZCLA_PLOTCU
,      ZCLA_PLOTCUCFG
WHERE 0=0
AND   ZCLA_PLOTCU.CONSUMERUNIT = ZCLA_PLOTCUCFG.CONSUMERUNIT
AND   PARTARC.PART = ZCLA_PLOTCUCFG.PART
AND   SONPART.PART = PARTARC.SON
AND   ZCLA_PLOTCU.PROJACT = :ELACT
AND   ZCLA_PLOTCUCFG.CONSUMERUNIT = :CONSUMERUNIT
AND   PARTARC.ZCLA_FIXID = :FIX
;
/* Insert CUNIT and BLANKS parts as part, son */
SELECT MAX(KLINE) + 1 INTO :LN
FROM ZCLA_PROJACTTREE
WHERE COPYUSER = SQL.USER ;
INSERT INTO ZCLA_PROJACTTREE ( COPYUSER
,   PROJACT
,   KLINE
,   SONPART
,   SONQUANT
,   USER
,   UDATE
,   DUEDATE
,   RATIO
,   DOC
,   ZCLA_ROOM
,   WHITE
,   PART
,   COL     )
SELECT SQL.USER
,   :FIXACT
,   :LN
,   :BLANKPART
,   :BLANKSUM
,   SQL.USER
,   SQL.DATE
,   SQL.DATE
,   :BLANKSUM
,   :DOC
,   ( :IGNOREROOM = 1 ? 0 : :ROOM)
,   'Y'
,   PART
,   :WHITE
FROM ZCLA_PLOTCU
WHERE 0=0
AND   ZCLA_PLOTCU.PROJACT = :ELACT
AND   ZCLA_PLOTCU.CONSUMERUNIT = :CONSUMERUNIT
AND   :FIX = 2
;
LOOP 1212;
LABEL 9898;
CLOSE @CUCURSOR;
LABEL 9999 ;
