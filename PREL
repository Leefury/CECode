ERRMSG 20 WHERE NOT EXISTS(
SELECT 'X' FROM ZCLA_PRELSTATUSES WHERE INITFLAG = 'Y')
;
ERRMSG 21 WHERE NOT EXISTS
(SELECT 'X' FROM ZCLA_PRELSTATUSES
WHERE ZCLA_PRELSTATUSES.CANCELSTAT = 'Y')
;
SELECT ZCLA_PRELSTATUSES.STEPSTATUSDES INTO :PAR1
FROM ZCLA_PRELSTATUSES , DOCSTATUSES
WHERE ZCLA_PRELSTATUSES.CANCELSTAT = 'Y'
AND DOCSTATUSES.TYPE = '<'
AND ZCLA_PRELSTATUSES.STEPSTATUS = DOCSTATUSES.ORIGSTATUSID
AND DOCSTATUSES.INACTIVE = 'Y';
ERRMSG 23 WHERE :RETVAL > 0
;
SELECT MAX(ZCLA_PRELSTATUSES.STEPSTATUSDES),
MIN(ZCLA_PRELSTATUSES.STEPSTATUSDES), COUNT(*)
INTO :PAR1, :PAR2, :COUNT
FROM ZCLA_PRELSTATUSES
WHERE ZCLA_PRELSTATUSES.CANCELSTAT = 'Y'
HAVING COUNT(*) > 1;
ERRMSG 22 WHERE :RETVAL > 0
;
/**** InactiveFlag and FinalFlag of CloseStat ****/
DECLARE INACT@ CURSOR FOR SELECT
ZCLA_PRELSTATUSES.STEPSTATUSDES, ZCLA_PRELSTATUSES.CLOSESTATUS
FROM ZCLA_PRELSTATUSES, DOCSTATUSES
WHERE DOCSTATUSES.TYPE = 'ZCLA_PREL'
AND ZCLA_PRELSTATUSES.STEPSTATUS = DOCSTATUSES.ORIGSTATUSID
AND DOCSTATUSES.INACTIVE <> 'Y'
AND ZCLA_PRELSTATUSES.CLOSESTATUS <> 0;
OPEN INACT@;
GOTO 1 WHERE :RETVAL <= 0;
LABEL 2;
:CLOSESTATUS = 0;
:PAR1 = :PAR2 = '';
FETCH INACT@ INTO :PAR1, :CLOSESTATUS;
GOTO 3 WHERE :RETVAL <= 0;
SELECT ZCLA_PRELSTATUSES.STEPSTATUSDES INTO :PAR2
FROM ZCLA_PRELSTATUSES, DOCSTATUSES
WHERE ZCLA_PRELSTATUSES.STEPSTATUS = DOCSTATUSES.ORIGSTATUSID
AND ZCLA_PRELSTATUSES.STEPSTATUS = :CLOSESTATUS
AND DOCSTATUSES.TYPE = '<'
AND DOCSTATUSES.INACTIVE = 'Y';
ERRMSG 24 WHERE :RETVAL > 0
;
SELECT STEPSTATUSDES INTO :PAR2 FROM ZCLA_PRELSTATUSES
WHERE STEPSTATUS = :CLOSESTATUS
AND CLOSEFLAG <> 'Y';
ERRMSG 25 WHERE :RETVAL > 0
;
LOOP 2;
LABEL 3;
CLOSE INACT@;
LABEL 1;
